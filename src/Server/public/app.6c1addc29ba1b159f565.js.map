{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./.fable/fable-library.3.1.2/Reflection.js","webpack:///./.fable/fable-library.3.1.2/Array.js","webpack:///./.fable/Feliz.1.29.0/Interop.fs.js","webpack:///./.fable/Feliz.1.29.0/React.fs.js","webpack:///./.fable/Feliz.1.29.0/ReactInterop.js","webpack:///./.fable/fable-library.3.1.2/AsyncBuilder.js","webpack:///./.fable/fable-library.3.1.2/Choice.js","webpack:///./.fable/fable-library.3.1.2/Async.js","webpack:///./.fable/Fable.Promise.2.0.0/Promise.fs.js","webpack:///./.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js","webpack:///./.fable/Feliz.UseElmish.1.5.0/UseElmish.fs.js","webpack:///./.fable/Feliz.UseListener.0.6.3/Listener.fs.js","webpack:///./.fable/Feliz.Router.3.5.0/Router.fs.js","webpack:///../Shared/Shared.fs.js","webpack:///./Models.fs.js","webpack:///./Cookies.fs.js","webpack:///./.fable/Fable.Remoting.Client.7.2.0/Types.fs.js","webpack:///./.fable/Fable.Remoting.Client.7.2.0/Extensions.fs.js","webpack:///./.fable/Fable.Remoting.Client.7.2.0/Http.fs.js","webpack:///./.fable/fable-library.3.1.2/TimeSpan.js","webpack:///./.fable/Fable.Remoting.MsgPack.1.6.2/Read.fs.js","webpack:///./.fable/Fable.Remoting.Client.7.2.0/Proxy.fs.js","webpack:///./.fable/Fable.Elmish.3.1.0/cmd.fs.js","webpack:///./Commands.fs.js","webpack:///./.fable/Fable.Remoting.Client.7.2.0/Remoting.fs.js","webpack:///./.fable/Feliz.MaterialUI.1.2.5/Flatten.fs.js","webpack:///./.fable/Feliz.MaterialUI.1.2.5/Mui.fs.js","webpack:///./.fable/Feliz.MaterialUI.1.2.5/Styles.fs.js","webpack:///./Styling.fs.js","webpack:///./Elements.fs.js","webpack:///./Index.fs.js","webpack:///./.fable/Fable.React.7.2.0/Fable.React.Extensions.fs.js","webpack:///./Dialog.fs.js","webpack:///./App.fs.js","webpack:///./Main.fs.js","webpack:///./.fable/fable-library.3.1.2/FSharp.Collections.js","webpack:///./.fable/fable-library.3.1.2/System.Text.js","webpack:///./.fable/fable-library.3.1.2/FSharp.Core.js","webpack:///./.fable/fable-library.3.1.2/Map.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/TypeInfo.fs.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/Json.fs.js","webpack:///./.fable/fable-library.3.1.2/Seq.js","webpack:///./.fable/fable-library.3.1.2/MapUtil.js","webpack:///./.fable/fable-library.3.1.2/Date.js","webpack:///./.fable/fable-library.3.1.2/Numeric.js","webpack:///./.fable/Fable.Parsimmon.4.0.0/Parsimmon.js","webpack:///./.fable/fable-library.3.1.2/lib/big.js","webpack:///./.fable/fable-library.3.1.2/Decimal.js","webpack:///./.fable/fable-library.3.1.2/MutableMap.js","webpack:///./.fable/fable-library.3.1.2/lib/long.js","webpack:///./.fable/fable-library.3.1.2/Long.js","webpack:///./.fable/Fable.Parsimmon.4.0.0/Parsimmon.fs.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/Parser.fs.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/SimpleJson.fs.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/TypeCheck.fs.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js","webpack:///./.fable/fable-library.3.1.2/Int32.js","webpack:///./.fable/fable-library.3.1.2/MutableSet.js","webpack:///./.fable/fable-library.3.1.2/BitConverter.js","webpack:///./.fable/fable-library.3.1.2/Guid.js","webpack:///./.fable/fable-library.3.1.2/Types.js","webpack:///./.fable/fable-library.3.1.2/BigInt/n.js","webpack:///./.fable/fable-library.3.1.2/BigInt/z.js","webpack:///./.fable/fable-library.3.1.2/BigInt.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/Json.Converter.fs.js","webpack:///./.fable/fable-library.3.1.2/RegExp.js","webpack:///./.fable/fable-library.3.1.2/String.js","webpack:///./.fable/fable-library.3.1.2/Double.js","webpack:///./.fable/fable-library.3.1.2/DateOffset.js","webpack:///./.fable/fable-library.3.1.2/Set.js","webpack:///./.fable/fable-library.3.1.2/Util.js","webpack:///./.fable/fable-library.3.1.2/List.js","webpack:///./.fable/fable-library.3.1.2/Option.js","webpack:///./.fable/Fable.SimpleJson.3.17.0/quote.js","webpack:///./.fable/fable-library.3.1.2/Encoding.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CaseInfo","declaringType","tag","fields","this","TypeInfo","fullname","generics","construct","parent","cases","enumCases","fullName","getHashCode","other","equals","getGenerics","fullnameHash","stringHash","genHashes","map","combineHashCodes","t1","t2","equalArraysWith","getRecordElements","k1","v1","k2","v2","class_type","record_type","undefined","union_type","caseNames","tuple_type","lambda_type","argType","returnType","option_type","generic","list_type","array_type","obj_type","unit_type","string_type","bool_type","int8_type","uint8_type","int16_type","uint16_type","int32_type","uint32_type","float32_type","float64_type","info","Array","isArray","lastIndexOf","substr","gen","x","join","endsWith","getElementType","_a","isGenericType","isEnum","getGenericTypeDefinition","getEnumUnderlyingType","getUnionCases","Error","getTupleElements","isTuple","getFunctionElements","isFunction","isUnion","Union","isRecord","Record","startsWith","getUnionFields","v","case_","getUnionCaseFields","uci","getRecordField","field","makeUnion","values","expectedLength","makeRecord","reduce","obj","makeTuple","_t","indexNotFound","differentLengths","fill","target","targetIndex","count","start","last","array","mapIndexed","f","source","cons","len","concat","arrays","arrays_1","from","totalIdx","totalLength","idx","idx_1","arr_2","initialize","initializer","copy","reverse","take","tryFind","predicate","find","pick","chooser","i_mut","matchValue","value_2","loop","findIndexBack","tryFindIndexBack","fold","folder","state","iterateIndexed","action","permute","size","res","checkFlags","every","y","zip","array1","array2","chunkBySize","chunkSize","Math","ceil","start_1","equalsWith","comparer","length1","length2","compareWith","compare","head","splitInto","chunks","chunks_1","min_1","comparePrimitives","minChunkSize","chunksWithExtraItem","reactApi","react","ReactInterop_useEffect","getDisposable","useEffectReact","disposable","Dispose","ReactInterop_useEffectWithDeps","deps","ReactInterop_useLayoutEffect","useLayoutEffectReact","Internal_memo_Z603636D8","renderElement","areEqual","withKey","memoElementType","memo","uncurry","defaultArg","curry","iterate","name_1","displayName","toArray","props","createElement","Internal_propsWithKey","React_createDisposable_3A5B6456","dispose","useReact_useEffect_Z5ECA432F","effect","useReact_useEffect_Z5234A374","dependencies","useReact_useEffect_Z101E1A95","_arg4","useReact_useRef_1505","initialValue","useRef","useReact_useMemo_CF4EA67","createFunction","useMemo","useReact_useCallbackRef_7C4B0DD6","callback","callbackFunction","lastRenderCallbackRef","callbackRef","arg","current","useCallback","_arg1","useState","CancellationToken","cancelled","_id","_cancelled","_listeners","Map","listener","id","set","$","addListener","removeListener","OperationCanceledError","setPrototypeOf","Trampoline","callCount","maxTrampolineCallCount","setTimeout","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","err","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","singleton","computation1","computation2","Bind","generator","sequence","body","iter","iterator","cur","next","While","done","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","FSharpResult$2","emptyContinuation","_x","isCancellationRequested","token","defaultCancellationToken","fromContinuations","startImmediate","cancellationToken","startWithContinuations","continuation","exceptionContinuation","cancellationContinuation","PromiseBuilder","PromiseBuilder__Delay_62FBFDE1","then","f1","f2","er","Promise","reject","resolve","er_1","catch","er_2","er_3","PromiseBuilder__Run_212F1D4B","success","fail","promise","RingState$1","RingBuffer$1","max","RingBuffer$1__Pop","_","wix","rix","items","rix$0027","some","useFeliz_React__React_useElmish_Static_17DC4F1D","init","update","initial","token_1","ring","patternInput","cts","cancel","createCancellationToken","setChildState_1","dispatch_1","dispatch","msg","nextMsg","PromiseBuilder__While_2044D34","patternInput_1","value_1","sub","iterate_1","isDisposable","sub_1","_arg3","useReact_useEffect_3A5B6456","Impl_allowsPassiveEvents","addEventListener","passive","removeEventListener","Impl_adjustPassive","maybeOptions","options","capture","once","Impl_createRemoveOptions","RouterModule_String_$007CPrefix$007C","prefix","str","indexOf","RouterModule_String_$007CSuffix$007C","suffix","RouterModule_encodeQueryString","queryStringPairs","tupledArg","encodeURIComponent","RouterModule_encodeParts","xs","routeMode","activePatternResult37445","activePatternResult37446","activePatternResult37447","path_2","substring","_arg2","activePatternResult37450","RouterModule_normalizeRoute","part","RouterModule_nav","history","pushState","replaceState","ev","document","createEvent","initEvent","dispatchEvent","RouterModule_urlSegments","path","collect","segment","isNullOrWhiteSpace","empty","segment_1","trimEnd","split","decodeURIComponent","query","ofArray","RouterModule_router","input","onChange","urlChanged","onUrlChanged","location","pathname","search","hash","RouterModule_onUrlChange","hashMode","navigator","userAgent","action_1","arg00","addOptions","removeOptions","fn","action_3","addOptions_1","removeOptions_1","fn_1","arg_1","eventType_2","action_4","addOptions_2","removeOptions_2","fn_2","arg_2","application","Domain_CardValue","Domain_Card","Domain_Card$reflection","Domain_CardModule_extract","Domain_Player","Domain_Player$reflection","Domain_PlayerModule_create","newGuid","Domain_PlayerModule_extract","Domain_GameId","Domain_GameId$reflection","Domain_GameIdModule_create","Domain_GameIdModule_extract","Domain_Game","Domain_GameModule_extract","Domain_InGameState","Domain_PlayedCard","Player","Card","Domain_InGameModel","Game","State","Players","PlayedCards","Domain_GameModel","Domain_GameModel$reflection","Domain_GameModelModule_$007CGotGameId$007C_$007C","gameModel","pattern_matching_result","gameId","activePatternResult39274","Domain_GameModelModule_$007CGotPlayers$007C_$007C","Domain_GameModelModule_countPlayeredCards","cardValue","filter","pc","Domain_Msg","clo1","Route_builder","toText","printf","arg10","Api_IPokerApi","getState","createGame","endGame","joinGame","leaveGame","startRound","finishRound","playCard","Theme","Model","CurrentGameState","GameId","CurrentPlayer","Name","Id","Error$","IsLoading","WebSocket","Msg","JsCookie_imported","JsCookie_get","JsCookie_set","arg20","JsCookie_remove","remove","playerFromStr","tail","parse","Domain_PlayerModule_build","getGameId","setCurrentPlayer","player","activePatternResult39341","Domain_PlayerModule_$007CExtractPlayerInfo$007C","interpolate","expires","HttpMethod","RequestBody","SerializationType","HttpRequest","Url","Headers","WithCredentials","HttpResponse","StatusCode","ResponseBody","RemoteBuilderOptions","CustomHeaders","BaseUrl","Authorization","RouteBuilder","ResponseSerialization","ProxyRequestException","response","errorMsg","reponseText","Exception","ProxyRequestException_$ctor_76BC5104","InternalUtilities_toUInt8Array","Uint8Array","defaultRequestConfig","HttpMethod_1","get$","url","post","withHeaders","headers","req","withBody","send","xhr","XMLHttpRequest","open","enumerator","getEnumerator","forLoopVar","setRequestHeader","withCredentials","onreadystatechange","readyState","status","responseText","matchValue_4","sendAndReadBinary","responseType","h","ms","arguments","fromTicks","ticks","toNumber","op_Division","interpretStringAs","typ","Reader","pos","Reader__ReadByte","Reader__ReadRawBin_Z524259A4","Reader__ReadString_Z524259A4","get_UTF8","getString","Reader__ReadUInt16","Reader__readInt","toUInt16","Reader__ReadUInt32","toUInt32","Reader__ReadMap_412036CA","pairs","args","toFail","arr","Reader__Read_24524716","dict","Dictionary","Equals","equals_1","GetHashCode","structuralHash","forEach","addToDict","Reader__ReadArray_412036CA","prop","case$","x_1","fieldTypes","x_2","elementType","ofSeq","delay","rangeNumber","Reader__ReadRawArray_412036CA","arg00_1","set$","Compare","FSharpSet__Add","Reader__ReadSet_412036CA","Reader__ReadBin_412036CA","arrayToGuid","fromByteArray","fromInteger","fromTicks_1","fromTicks_2","typ_1","n_2","arg20_1","typ_10","n_20","toSingle","Decimal","arg20_10","typ_11","n_22","toDouble","Reader__ReadFloat64","arg20_11","typ_6","n_12","Reader__ReadUInt8","arg20_6","typ_7","n_14","arg20_7","typ_8","n_16","arg20_8","typ_9","n_18","toUInt64","Reader__ReadUInt64","toInt","fromValue","arg20_9","typ_5","n_10","Reader__ReadInt8","arg20_5","typ_4","n_8","toInt16","Reader__ReadInt16","arg20_4","typ_3","n_6","toInt32","Reader__ReadInt32","arg20_3","typ_2","n_4","toInt64","Reader__ReadInt64","arg20_2","arg30","arg10_12","this$","isLittleEndian","Blob_readBlobAsText","blob","reader","FileReader","onload","readAsText","Proxy_proxyFetch","typeName","func","fieldType","funcArgs","FieldType","FieldName","binaryInput","argumentCount","returnTypeAsync","readAsBinary","Proxy_isAsyncOfByteArray","matchValue_1","matchValue_2","route","baseUrl","Proxy_combineRouteWithBaseUrl","funcNeedParameters","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","inputArguments","inputArgumentTypes","contentType","requestBody","append","singleton_1","matchValue_3","Convert_arrayLike","Convert_serialize","statusCode_1","response_3","Blob","buffer","type","_arg5","response_4","ReturnFrom","_arg6","response_5","_arg7","response_6","matchValue_6","Convert_fromJsonAs","SimpleJson_parseNative","_arg1_1","statusCode","typ_mut","getReturnType","_arg2_1","response_1","_arg3_1","response_2","Cmd_none","Cmd_batch","cmds","Cmd_ofSub","Cmd_OfFunc_result","builder","pokerApi","resolver","resolvedType","ResolveType","schemaType","createTypeInfo","recordType","a","delegateArg0","delegateArg1","delegateArg0_1","delegateArg1_1","delegateArg2","delegateArg0_2","delegateArg1_2","delegateArg2_1","delegateArg3","delegateArg0_3","delegateArg1_3","delegateArg2_2","delegateArg3_1","delegateArg4","delegateArg0_4","delegateArg1_4","delegateArg2_3","delegateArg3_2","delegateArg4_1","delegateArg5","delegateArg0_5","delegateArg1_5","delegateArg2_4","delegateArg3_3","delegateArg4_2","delegateArg5_1","delegateArg6","delegateArg0_6","delegateArg1_6","delegateArg2_5","delegateArg3_4","delegateArg4_3","delegateArg5_2","delegateArg6_1","delegateArg7","arg10_1","Remoting_buildProxy_Z15584635","RemotingModule_createApi","sendCommand","succeedDispatch","Combine","Zero","sendCommandWithSucceed","currentPlayer","state_1","activePatternResult39402","resetWhenGameNotExists","console","log","activePatternResult39425","gameId_1","card","setCookies","activePatternResult39345","Domain_GameIdModule_$007CGetGameId$007C","setGameId","removeCookies","WebSocket_ChannelMessage","Topic","Payload","WebSocket_connectWebSocketCmd","connect","ws","protocol","host","ws_2","onopen","toConsole","onclose","e","code","onmessage","msg_1","SimpleJson_tryParse","toString","Convert_fromJson","fromFlatEntries","kvs","setProperty","target_mut","key_mut","value_mut","sepIdx","topKey","nestedKey","target_1","MuiHelpers_reactElement","MuiHelpers_createElement","el","properties","StyleImports_makeStyles_get","makeStyles","StyleImports_createMuiTheme_argsArray","responsiveFontSizes","createMuiTheme","StyleImports_createMuiTheme_unit","StyleCreator$1","useTheme","StyleCreator$1__create_4EAC9E1E","styles","createObj","CustomStyles","root","appBar","appBarTitle","content","toolbar","centerPaper","playerCard","loginPaper","loginAvatar","loginForm","loginSubmit","useStyles","theme","zIndex","drawer","spacing","entries","mixins","palette","primary","main","assign","Theme_defaultTheme","Theme_light","indigo","pink","grey","Theme_dark","lightBlue","backgroundColor","A400","color","welcomeText","Toolbar","Children","Typography","activePatternResult39369","gameid","Link","origin","Tooltip","IconButton","Brightness4","Brightness7","GitHub","sizeFactor","isOpen","onClick","pic","rank","boxWidth","boxHeight","style","overflow","display","alignItems","justifyContent","minHeight","minWidth","height","width","children","className","boxSizing","transform","__html","player_2","gameId_2","player_3","gameId_3","player_4","gameId_4","player_5","gameId_5","player_6","activePatternResult39494","matchValue_7","matchValue_9","gameId_12","player_8","player_1","playerToLeave","matchValue_5","gameId_10","gameId_9","activePatternResult39497","pattern_matching_result_1","activePatternResult39496","exists","close","Theme_1","queryString","empty_1","defaultArgWith","append_1","RouterModule_trySeparateLast","renderLoginForm","classes","title","buttonText","onTextChange","Container","Paper","CircularProgress","Avatar","LockOutlined","TextField","Button","e_1","preventDefault","renderStartView","Grid","renderCreateGameView","renderJoinGameView","renderDeck","inGameState","map_1","card_1","renderPlayerState","isAdmin","playedCard","renderPlayerAdminView","renderInGameView","isVisible","Backdrop","row1","getSlice","row2","item","Table","TableHead","TableCell","TableBody","counts","maxCount","TableRow","row3","chucks","renderPlayerView","e_2","renderAdminView","view","ThemeProvider","CssBaseline","AppBar","onClose","text","children_2","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","PlaningPoker","isDarkMode","currentUrl","activePatternResult39417","render","getElementById","ComparisonIdentity_Structural","LanguagePrimitives_FastGenericComparer","MapTreeLeaf$2","k","MapTreeLeaf$2_$ctor_5BDDA1","MapTreeLeaf$2__get_Key","MapTreeLeaf$2__get_Value","MapTreeNode$2","left","right","MapTreeNode$2_$ctor_499A11FD","MapTreeNode$2__get_Left","MapTreeNode$2__get_Right","MapTreeNode$2__get_Height","MapTreeModule_size","MapTreeModule_sizeAux","acc_mut","m_mut","acc","m2","MapTreeModule_mk","hl","hr","m_2","MapTreeModule_rebalance","m2_2","m_3","m2_3","t1h","t2h","MapTreeModule_add","MapTreeModule_empty","MapTreeModule_tryFind","comparer_mut","k_mut","MapTreeModule_spliceOutSuccessor","MapTreeModule_iter","MapTreeModule_iterOpt","f_mut","MapTreeModule_toList","m_1_mut","List","MapTreeModule_ofArray","MapTreeModule_ofSeq","isArrayLike","fold_1","MapTreeModule_ofList","ie","e_mut","MapTreeModule_mkFromEnumerator","MapTreeModule_MapIterator$2","stack","started","MapTreeModule_collapseLHS","stack_mut","rest","MapTreeModule_mkIterator","MapTreeModule_current","MapTreeModule_alreadyFinished","MapTreeModule_notStarted","MapTreeModule_mkIEnumerator","MapTreeModule_moveNext","FSharpMap","tree","combineHash","activePatternResult4295","FSharpMap__ComputeHashCode","that","e1","e2","m1","e1c","e2c","map_2","kv","format","toIterator","GetEnumerator","kvp1","kvp2","FSharpMap__ContainsKey","FSharpMap__get_Item","MapTreeModule_copyToArray","FSharpMap__get_Count","thisArg","FSharpMap_$ctor","FSharpMap_Create","MapTreeModule_find","MapTreeModule_mem","FSharpMap__Remove","MapTreeModule_remove","FSharpMap__ToArray","MapTreeModule_toArray","isEmpty","table","FSharpMap__TryFind","containsKey","ofList","elements","toList","RecordField","PropertyInfo","UnionCase","CaseName","CaseTypes","Info","Json","Json$reflection","Enumerator","en","hasNext","__failIfNone","Seq","makeSeq","isArrayOrBufferView","ArrayBuffer","isView","unfold","ys","firstDone","iters","_b","output","innerIter","hasFinished","cur1","cur2","iter1","iter2","forAll","fold2","foldBack2","ar1","ar2","pairwise","hd","tl","skip","scan","first","step","seed","scanBack","sumBy","adder","Add","GetZero","truncate","defaultValue","tryPick","fst","transpose","results","tryGetValue","has","contents","addToSet","add","getItemFromDict","offsetRegex","dateOffsetToString","offset","isMinus","hours","abs","minutes","padWithZeros","dateToHalfUTCString","date","half","toISOString","dateToStringWithCustomFormat","utc","replace","match","rep","Number","NaN","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","isNaN","dateToStringWithOffset","_c","dateWithOffset","Date","getTime","dateToStringWithKind","kind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","getTimezoneOffset","dateToISOString","_provider","DateTime","ticksToUnixEpochMilliseconds","dateOffset","parseRaw","trim","exec","baseDate","timeInSeconds","timeParts","parseInt","parseFloat","toUpperCase","offsetParts","offsetInMinutes","detectUTC","year","month","day","dateValue","UTC","setFullYear","daysInMonth","isLeapYear","compareDates","symbol","isNumeric","CompareTo","multiply","toFixed","dp","toPrecision","sd","toExponential","toHex","Parsimmon","times","elem","bufferExists","Buffer","isParser","isBuffer","makeSuccess","index","furthest","expected","makeFailure","mergeReplies","keys","sort","union","makeLineColumnIndex","line","column","lines","assertParser","charAt","assertNumber","assertRegexp","RegExp","flags","assertFunction","assertString","repeat","string","amount","leftPad","pad","char","rangeFromIndexAndOffsets","before","after","to","formatGot","error","lineWithErrorIndex","lineRange","lastLineNumberLabelLength","verticalMarkerLength","byteLineWithErrorIndex","columnByteIndex","byteRange","bytesPerLine","bytesAfter","byteLines","byteRow","byteValue","chunkIndex","toChunks","toJSON","floor","byteRangeToRange","byteLine","inputLines","lineWithErrorCurrentIndex","lineSource","lineNumberLabel","isLineWithError","re","anchoredRegexp","seq","parsers","numParsers","accum","seqMap","mapper","pop","alt","sepBy1","parser","separator","many","rs","regexp","group","anchored","fullMatch","groupMatch","succeed","lookahead","test","oneOf","ch","desc","noneOf","takeWhile","lazy","eof","tryParse","or","alternative","wrap","leftParser","rightParser","middle","thru","wrapper","self","tieWith","assertArray","tie","min","prevResult","atMost","atLeast","contramap","promap","g","mark","end","node","sepBy","notFollowedBy","reply","fallback","ap","chain","of","any","all","digit","letter","letters","optWhitespace","whitespace","cr","lf","newline","P","cmp","_this","mul","NAME","INVALID","INVALID_DP","NUMERIC","nl","round","Big","DP","RM","rm","more","xc","unshift","stringify","constructor","z","NE","PE","isneg","yc","div","b","bl","bt","ri","bz","ai","al","rl","q","qc","qi","eq","gt","gte","lt","lte","minus","xlty","plus","xe","ye","mod","ygtx","pow","one","sqrt","valueOf","_Big_","findIndex","normalize","version","get_Zero","op_Addition","defValue","makeRangeStepFunction","stepComparedWithZero","stepGreaterThanZero","comparedWithLast","FSharpRef","hashMap","pair","Dictionary__Add_5BDDA1","Dictionary__Clear","Dictionary__TryFind_2B595","arrayIndex","Dictionary__get_Count","Dictionary__Remove_2B595","Dictionary__get_Item_2B595","Dictionary__TryFindIndex_2B595","Dictionary__ContainsKey_2B595","Dictionary__set_Item_5BDDA1","Dictionary_$ctor_6623D9B3","outArg","clear","wasm","WebAssembly","Instance","Module","Long","low","high","unsigned","isLong","h1","radix","String","fromBytes","toBytes","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","negate","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","RangeError","radixToPower","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","$this","isZero","isNegative","radixLong","divide","rem1","subtract","rem","remDiv","digits","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","shiftRightUnsigned","shiftLeft","shiftRight","log2","LN2","delta","approxRes","approxRem","numBits","le","hi","lo","toBytesLE","toBytesBE","bytes","fromBytesLE","fromBytesBE","LongLib","op_Subtraction","op_Multiply","op_Modulus","rem_u","rem_s","op_UnaryNegation","op_LeftShift","op_BitwiseAnd","getLowBits","getHighBits","getLowBitsUnsigned","getHighBitsUnsigned","xh","_bitsize","isValid","sign","maxValue","getMaxValue","padStart","bitsize","unixEpochMillisecondsToTicks","Parsimmon_many","Parsimmon_ofLazy","Parsimmon_digit","Parsimmon_seperateBy","others","Parsimmon_between","skipped","Parsimmon_map","Parsimmon_choose","ps","Parsimmon_satisfy","Parsimmon_str","Parsimmon_oneOf","Parsimmon_optionalWhitespace","Parsimmon_atLeastOneOrMany","Parsimmon_atLeast","Parsimmon_stringReturn","Parsimmon_seq2","Parsimmon_concat","strings","Parsimmon_seq3","otherParser","escape","anyCharSnippet","jint","negJint","jfloat","digitsLeft","negativeJFloat","jnumber","jbool","jnull","stringLiteral","tuple","c_1","jstring","withWhitespace","jvalue","comma","json$004099$002D1","Lazy","Value","jsonParser","InteropUtil_isBigInt","InteropUtil_isObjectLiteral","Parsimmon_parse","SimpleJson_parse","SimpleJson_toString","arg10_3","SimpleJson_toPlainObject","value_3","jsObject","enumerator_1","SimpleJson_stringify","JSON","jsonValue","copyOfStruct","toDecimal","toString_1","isIterable","SimpleJson_parseNative$0027","activePatternResult23583","$007CNativeString$007C_$007C","activePatternResult23582","$007CNativeNumber$007C_$007C","number","activePatternResult23581","$007CNativeBool$007C_$007C","$007CNull$007C_$007C","activePatternResult23579","$007CNativeArray$007C_$007C","activePatternResult23578","$007CNativeObject$007C_$007C","value_5","map_3","$007CFuncType$007C_$007C","flattenFuncTypes","typeDef","lazyToDelayed","unitVar0","_createTypeInfo","l_3","l_4","l_5","l_6","l_7","l_8","l_9","l_10","l_11","l_12","l_13","l_14","l_15","l_16","l_17","activePatternResult23498","primType","$007CPrimitiveType$007C_$007C","activePatternResult23497","types","activePatternResult23496","l_1","activePatternResult23495","$007CUnionType$007C_$007C","l_2","activePatternResult23494","$007CEnumType$007C_$007C","elemType","activePatternResult23493","$007CListType$007C_$007C","elemType_1","activePatternResult23492","$007CResizeArrayType$007C_$007C","elemType_2","activePatternResult23491","$007CHashSetType$007C_$007C","elemType_3","activePatternResult23490","$007CArrayType$007C_$007C","elemType_4","activePatternResult23489","$007CTupleType$007C_$007C","types_1","activePatternResult23488","$007COptionType$007C_$007C","elemType_5","activePatternResult23487","$007CNullable$007C_$007C","elemType_6","activePatternResult23486","$007CSetType$007C_$007C","elemType_7","activePatternResult23485","genArgs","$007CMapType$007C_$007C","keyType","valueType","activePatternResult23484","$007CDictionaryType$007C_$007C","keyType_1","valueType_1","activePatternResult23483","$007CSeqType$007C_$007C","elemType_8","activePatternResult23482","$007CAsyncType$007C_$007C","elemType_9","activePatternResult23481","$007CPromiseType$007C_$007C","elemType_10","typeInfoCache","ti_1","isNullOrEmpty","isPrimitive","enumUnion","NumberStyles","getRange","getInvalidDigits","AllowHexSpecifier","getRadix","regexMatch","validResponse","umin","umax","op_UnaryNegation_Int32","HashSet","HashSet__Add_2B595","HashSet__Clear","HashSet__Contains_2B595","HashSet__get_Count","HashSet__Remove_2B595","HashSet_$ctor_Z6150332D","HashSet__TryFindIndex_2B595","v_1","getBytesInt32","DataView","byteOffset","byteLength","setInt32","getInt16","getInt32","getUint16","getUint32","getFloat32","getFloat64","guidRegex","guidRegexNoHyphen","guidRegexHex","guidHexCaptures","hyphenateGuid","wsTrimAndLowered","toLowerCase","random","_byteToHex","_hexToByte","_convertMapsInitialized","initConvertMaps","buf","seqToString","callStack","getPrototypeOf","compareList","withParens","hashes","numberHash","sameConstructor","equalArrays","compareArrays","recordToJSON","recordToString","recordGetHashCode","recordEquals","thisNames","recordCompareTo","contentsOrGetter","setter","message","BigNat","bound","BigNatModule_FFT_pow32","x_mut","n_mut","BigNatModule_FFT_maxTwoPower","Int32Array","BigNatModule_bound","BigNatModule_coeff","BigNatModule_coeff64","BigNatModule_setCoeff","BigNatModule_pow64","BigNatModule_pow32","BigNatModule_maxInt","BigNatModule_baseNi64","BigNatModule_baseMaski64","BigNatModule_divbase","BigNatModule_modbase","BigNatModule_createN","BigNatModule_normN","na_mut","na","findLeastBound","BigNatModule_embed","r_1","BigNatModule_boundInt","BigNatModule_eval32","BigNatModule_one","BigNatModule_zero","BigNatModule_degree","BigNatModule_add","rbound","c_mut","p_mut","q_mut","r_mut","i_1","z_1","i_2","BigNatModule_addP","BigNatModule_sub","BigNatModule_subP","BigNatModule_isZero","BigNatModule_equal","pa_mut","qa_mut","pa","qa","check","BigNatModule_compare","BigNatModule_lt","BigNatModule_gte","BigNatModule_mulSchoolBookCarry","rak","BigNatModule_mulSchoolBookOneSmall","bp","q_1","BigNatModule_mulSchoolBook","pSmall","qSmall","BigNatModule_mulSchoolBookBothSmall","ra","pai","qaj","BigNatModule_mulSchoolBookNeitherSmall","BigNatModule_encoding","bigL","twoToBigL","bigK","bigN","splits","BigNatModule_mkEncoding","BigNatModule_table","BigNatModule_mul","BigNatModule_scaleSubInPlace","ad","a_1","f_1","zLo","zHi","BigNatModule_scaleAddInPlace","BigNatModule_removeFactor","degx","dega","pn","qn","xa","aa","qai","BigNatModule_divmod","BigNatModule_copyN","finished","BigNatModule_two","BigNatModule_toFloat","evalFloat","BigNatModule_ofInt32","BigNatModule_ofInt64","BigNatModule_boundInt64","BigNatModule_embed64","BigNatModule_toString","degn","digits_4","isLeading_mut","digits_mut","n_1_mut","_arg1_mut","isLeading","n_1","int32ToString","prior_1","nL","nH","prior_mut","ten2k_mut","prior","ten2k","BigNatModule_ofString","ten","charCodeAt","build","BigNatModule_isSmall","BigNatModule_getSmall","BigInteger","signInt","BigInteger__get_SignInt","BigInteger__get_V","BigInteger_op_Equality_56F059C0","BigNatModule_hash","nn","BigInteger_op_LessThan_56F059C0","BigInteger_$ctor_Z2BE94A1","BigInteger_nat_Z67CCE57D","smallLim","smallPosTab","BigInteger_create_Z2BE94A1","BigInteger_posn_Z67CCE57D","BigInteger_negn_Z67CCE57D","BigInteger_$ctor_Z524259A4","BigInteger_$ctor_Z524259C1","BigInteger_get_One","BigInteger_get_Two","two","BigInteger_get_Zero","zero","BigInteger_op_UnaryNegation_Z665282C2","BigInteger_subnn_6A57060","nx","ny","BigInteger_addnn_6A57060","BigInteger__get_IsZero","BigInteger__get_IsOne","BigInteger_op_Addition_56F059C0","BigInteger_op_Multiply_56F059C0","BigInteger_op_LeftShift_62E082A2","BigInteger_Pow_62E082A2","yval","x_1_mut","ndiv2","power","BigNatModule_pow","BigInteger__get_ToDouble","BigInteger_Parse_Z721C83C5","text_1","fromInt64","fromInt32","BigInteger__get_ToDecimal","flipTwosComplement","currByte","lowBitFound","isPositive","accumUInt32_mut","currIndex_mut","bytesRemaining_mut","lowBitFound_mut","accumUInt32","currIndex","bytesRemaining","bytesToProcess","patternInput_2","patternInput_3","Convert_insideBrowser","Function","Convert_isDefined","Convert_InternalMap","Convert_$007CMapKey$007C_$007C","Convert_generateMap","json","Convert_$007CMapEmpty$007C_$007C","activePatternResult23661","activePatternResult23656","Convert_$007CMapOne$007C_$007C","activePatternResult23660","activePatternResult23658","Convert_$007CMapNode$007C_$007C","leftMap","rightMap","key_1","Convert_flattenFable3Lists","linkedList","Convert_isQuoted","Convert_betweenQuotes","input_mut","typeInfo_mut","foundCase","foundCase_2","testExpr","values_8","value_38","input_1","typeInfo","value_4","value_6","value_7","value_8","value_9","value_10","value_11","value_12","value_13","value_14","value_15","value_16","value_17","value_18","getlElemType","value_19","getElemType","value_20","getElemType_1","value_21","genericJson","value_22","value_23","value_24","value_25","value_26","value_27","value_28","value_29","getTypes","jsonValue_5","optionalTypeDelayed_5","parse_1","parse_2","underlyingType","originalType","name_2","outArg_1","tryParse_1","WorkerGlobalScope","fromBase64String","parse_3","parse_4","parse_5","DateOffset","caseName","values_1","caseName_1","unionType","activePatternResult23690","Convert_$007CNonArray$007C_$007C","pattern_matching_result_2","foundCase_3","tryFind_1","expectedCases","case$_1","foundCase_1","Convert_optional","foundCase_4","arg30_1","pattern_matching_result_3","caseInfo","caseType","case$_2","typeInfo_1","expectedCases_1","case$_3","Convert_isRecord","Convert_unionOfRecords","foundDiscriminatorKey","tryFind_2","keyword","discriminatorValueJson","discriminatorValue","foundUnionCase","tryFind_3","case$_4","case$_5","arg10_13","arg10_11","unexpectedJson","expectedType","pattern_matching_result_4","caseIndex","fieldValues","foundCase_5","value_35","arg10_10","pattern_matching_result_5","value_36","value_37","caseName_4","getTypes_2","parse_6","pattern_matching_result_6","choose","caseTypes","case$_6","Convert_removeQuotes","expectedCases_2","case$_7","pattern_matching_result_7","caseName_5","getTypes_3","serializedRecord","caseValue","getTypes_4","elementTypeDelayed","values_4","elementTypeDelayed_1","values_5","elementTypeDelayed_2","elementTypeDelayed_3","values_6","elementTypeDelayed_4","values_7","array_9","tupleTypesDelayed","dict_1","getTypes_5","getTypes_6","tuples","getTypes_7","tuples_1","dict_2","getTypes_8","getType","getTypes_9","getType_1","patternInput_4","caseTypes_1","case$_8","expectedCases_3","case$_9","arg20_12","pattern_matching_result_8","caseName_6","caseName_8","values_3","otherwise_6","patternInput_5","cases_1","case$_10","expectedCases_4","case$_11","arg20_13","case$_12","foundCaseName","caseInfo_4","tupledArg_1","expectedCases_5","unexpectedJson_1","expectedType_1","value_42","elementType_1","value_44","elementType_2","value_46","elementType_3","ofList_1","value_48","elementType_4","value_50","tupledArg_2","patternInput_6","fieldName","_arg8","tupledArg_3","dictKeys","recordFields","arg10_27","arg10_30","arg30_6","patternInput_7","keyValuePair","patternInput_8","pairs_1","keyValuePair_1","safeHash","patternInput_9","keyType_2","pairs_2","tupledArg_4","output_1","forLoopVar_1","hashset","enumerator_2","pattern_matching_result_9","tree_1","patternInput_10","valueType_5","keyType_3","inputJson","pairs_3","tupledArg_5","key_6","Convert_flattenMap","pattern_matching_result_10","tree_3","Convert_flatteFable3Map","pairs_4","tupledArg_6","key_7","arg20_17","arg10_33","arg20_18","arg10_34","Convert_quoteText","quote","copyOfStruct_1","copyOfStruct_2","toString_2","toString_3","map_4","element","element_1","element_2","element_3","element_4","elementType_5","element_5","value_78","usedCase","serializedFields_1","serializedValues","serializedKey","serializedValue","serializedValues_1","serializedKey_1","serializedValue_1","tupleTypes","index_1","element_6","fsFormatRegExp","interpolateRegExp","formatRegExp","isLessThan","numericCompare","cont","createPrinter","padRef","strCopy","formatOnce","padLength","precision","formatReplacement","continuePrint","dateToString","zeroFlag","minusFlag","padLeft","str2","pattern","intPart","decimalPart","delimiter","notSupported","b64Encoded","binary","atob","isRight","splitters","removeEmpty","reg","lastIndex","chars","startIndex","DateTimeOffset","offsetMatch","SetTreeLeaf$1","SetTreeLeaf$1_$ctor_2B595","SetTreeLeaf$1__get_Key","SetTreeNode$1","SetTreeNode$1_$ctor_Z6E7BE5F7","SetTreeNode$1__get_Left","SetTreeNode$1__get_Right","SetTreeNode$1__get_Height","SetTreeModule_count","SetTreeModule_countAux","t_mut","SetTreeModule_mk","SetTreeModule_rebalance","t_2","t2_3","t_3","t2_4","SetTreeModule_add","SetTreeModule_empty","SetTreeModule_mem","SetTreeModule_iter","SetTreeModule_SetIterator$1","SetTreeModule_collapseLHS","x2","SetTreeModule_mkIterator","SetTreeModule_current","SetTreeModule_alreadyFinished","SetTreeModule_notStarted","SetTreeModule_mkIEnumerator","SetTreeModule_moveNext","SetTreeModule_compare","l1_mut","l2_mut","SetTreeModule_compareStacks","l1","l2","x1_3","x2_3","t1_6","x1_4","t2_6","x2_4","t1_7","x1_5","t2_7","x2_5","c_3","c_2","t1_8","x1_6","t2_8","x2_6","t1_2","x1","t2_2","x2_1","t1_4","x1_2","x2_2","SetTreeModule_copyToArray","SetTreeModule_ofSeq","SetTreeModule_mkFromEnumerator","FSharpSet","FSharpSet__ComputeHashCode","FSharpSet__get_Comparer","FSharpSet__get_Tree","FSharpSet__get_Count","FSharpSet__Contains","FSharpSet_$ctor","FSharpSet_Empty","isHashable","factory","isValueCreated","createdValue","padLeftAndRightWithZeros","lengthLeft","lengthRight","date1","ObjectRef","idMap","h2","physicalHash","arrayHash","dateHash","isEquatable","xKeys","yKeys","equalObjects","xtime","ytime","comp","compareArraysWith","isComparable","compareObjects","col","WeakMap","arity","uncurriedFn","a1","a2","a3","a4","a5","a6","a7","a8","partialApply","foldIndexed","foldIndexedAux","state_mut","xs_mut","List_1","lists","collect_1","tail_1","ofArrayWithTail","tryPickIndexed","tryPickIndexedAux","tryFindIndexed","findIndexed","li","chunkBySize_1","skipWhile","predicate_mut","t_1","outOfRange","lower","upper","lower_1","hasUpper","Some","opt","defThunk","mapping","inputText","escapable","meta","UTF16LE","setUint16","utf16le_encode","subarray","TextDecoder","decode","fromCharCode","utf16le_decode","UTF8","TextEncoder","encode","nextCode","utf8_encode","decodeUtf8","i1","fromCodePoint","utf8_decode","_UTF8"],"mappings":"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","file":"app.6c1addc29ba1b159f565.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([121,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Record, Union } from \"./Types.js\";\nimport { combineHashCodes, equalArraysWith, stringHash } from \"./Util.js\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, construct, parent, fields, cases, enumCases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.construct = construct;\n        this.parent = parent;\n        this.fields = fields;\n        this.cases = cases;\n        this.enumCases = enumCases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    GetHashCode() {\n        return getHashCode(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function getHashCode(t) {\n    const fullnameHash = stringHash(t.fullname);\n    const genHashes = getGenerics(t).map(getHashCode);\n    return combineHashCodes([fullnameHash, ...genHashes]);\n}\nexport function equals(t1, t2) {\n    if (t1.fullname === \"\") { // Anonymous records\n        return t2.fullname === \"\"\n            && equalArraysWith(getRecordElements(t1), getRecordElements(t2), ([k1, v1], [k2, v2]) => k1 === k2 && equals(v1, v2));\n    }\n    else {\n        return t1.fullname === t2.fullname\n            && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n    }\n}\nexport function class_type(fullname, generics, construct, parent) {\n    return new TypeInfo(fullname, generics, construct, parent);\n}\nexport function record_type(fullname, generics, construct, fields) {\n    return new TypeInfo(fullname, generics, construct, undefined, fields);\n}\nexport function anonRecord_type(...fields) {\n    return new TypeInfo(\"\", undefined, undefined, undefined, () => fields);\n}\nexport function union_type(fullname, generics, construct, cases) {\n    const t = new TypeInfo(fullname, generics, construct, undefined, undefined, () => {\n        const caseNames = construct.prototype.cases();\n        return cases().map((fields, i) => new CaseInfo(t, i, caseNames[i], fields));\n    });\n    return t;\n}\nexport function tuple_type(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate_type(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda_type(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list_type(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array_type(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport function enum_type(fullname, underlyingType, enumCases) {\n    return new TypeInfo(fullname, [underlyingType], undefined, undefined, undefined, undefined, enumCases);\n}\nexport const obj_type = new TypeInfo(\"System.Object\");\nexport const unit_type = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char_type = new TypeInfo(\"System.Char\");\nexport const string_type = new TypeInfo(\"System.String\");\nexport const bool_type = new TypeInfo(\"System.Boolean\");\nexport const int8_type = new TypeInfo(\"System.SByte\");\nexport const uint8_type = new TypeInfo(\"System.Byte\");\nexport const int16_type = new TypeInfo(\"System.Int16\");\nexport const uint16_type = new TypeInfo(\"System.UInt16\");\nexport const int32_type = new TypeInfo(\"System.Int32\");\nexport const uint32_type = new TypeInfo(\"System.UInt32\");\nexport const float32_type = new TypeInfo(\"System.Single\");\nexport const float64_type = new TypeInfo(\"System.Double\");\nexport const decimal_type = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    var _a;\n    return isArray(t) ? (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0] : undefined;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\nexport function isEnum(t) {\n    return t.enumCases != null && t.enumCases.length > 0;\n}\nexport function isSubclassOf(t1, t2) {\n    var _a, _b;\n    return (_b = (_a = t1.parent) === null || _a === void 0 ? void 0 : _a.Equals(t2)) !== null && _b !== void 0 ? _b : false;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj_type));\n}\nexport function getEnumUnderlyingType(t) {\n    var _a;\n    return (_a = t.generics) === null || _a === void 0 ? void 0 : _a[0];\n}\nexport function getEnumValues(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[1]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function getEnumNames(t) {\n    if (isEnum(t) && t.enumCases != null) {\n        return t.enumCases.map((kv) => kv[0]);\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nfunction getEnumCase(t, v) {\n    if (t.enumCases != null) {\n        if (typeof v === \"string\") {\n            for (const kv of t.enumCases) {\n                if (kv[0] === v) {\n                    return kv;\n                }\n            }\n            throw new Error(`'${v}' was not found in ${t.fullname}`);\n        }\n        else {\n            for (const kv of t.enumCases) {\n                if (kv[1] === v) {\n                    return kv;\n                }\n            }\n            // .NET returns the number even if it doesn't match any of the cases\n            return [\"\", v];\n        }\n    }\n    else {\n        throw new Error(`${t.fullname} is not an enum type`);\n    }\n}\nexport function parseEnum(t, str) {\n    // TODO: better int parsing here, parseInt ceils floats: \"4.8\" -> 4\n    const value = parseInt(str, 10);\n    return getEnumCase(t, isNaN(value) ? str : value)[1];\n}\nexport function tryParseEnum(t, str, defValue) {\n    try {\n        defValue.contents = parseEnum(t, str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function getEnumName(t, v) {\n    return getEnumCase(t, v)[0];\n}\nexport function isEnumDefined(t, v) {\n    try {\n        const kv = getEnumCase(t, v);\n        return kv[0] != null && kv[0] !== \"\";\n    }\n    catch (_a) {\n        // supress error\n    }\n    return false;\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t) && t.generics != null) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t) && t.generics != null) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\") && !isArray(t);\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields;\n}\n// This is used as replacement of `FSharpValue.GetRecordFields`\n// For `FSharpTypes.GetRecordFields` see `getRecordElements`\n// Object.keys returns keys in the order they were added to the object\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return uci.declaringType.construct != null\n        ? new uci.declaringType.construct(uci.tag, ...values)\n        : {};\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return t.construct != null\n        ? new t.construct(...values)\n        : fields.reduce((obj, [key, _t], i) => {\n            obj[key] = values[i];\n            return obj;\n        }, {});\n}\nexport function makeTuple(values, _t) {\n    return values;\n}\nexport function makeGenericType(t, generics) {\n    return new TypeInfo(t.fullname, generics, t.construct, t.parent, t.fields, t.cases);\n}\nexport function createInstance(t, consArgs) {\n    // TODO: Check if consArgs length is same as t.construct?\n    // (Arg types can still be different)\n    if (typeof t.construct === \"function\") {\n        return new t.construct(...(consArgs !== null && consArgs !== void 0 ? consArgs : []));\n    }\n    else {\n        throw new Error(`Cannot access constructor of ${t.fullname}`);\n    }\n}\nexport function getValue(propertyInfo, v) {\n    return v[propertyInfo[0]];\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.cases()[x.tag];\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { value as value_2, defaultArg, some } from \"./Option.js\";\nimport { min as min_1, compare, comparePrimitives, max as max_1 } from \"./Util.js\";\nimport { Dictionary } from \"./MutableMap.js\";\nimport { addToDict, addToSet, getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { iterate as iterate_1 } from \"./Seq.js\";\n\nfunction indexNotFound() {\n    throw (new Error(\"An index satisfying the predicate was not found in the collection.\"));\n}\n\nfunction differentLengths() {\n    throw (new Error(\"Arrays had different lengths\"));\n}\n\nexport function append(array1, array2, cons) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new (cons || Array)((len1 + len2));\n    for (let i = 0; i <= (len1 - 1); i++) {\n        newArray[i] = array1[i];\n    }\n    for (let i_1 = 0; i_1 <= (len2 - 1); i_1++) {\n        newArray[i_1 + len1] = array2[i_1];\n    }\n    return newArray;\n}\n\nexport function filter(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function fill(target, targetIndex, count, value) {\n    const start = targetIndex | 0;\n    return target.fill(value, start, (start + count));\n}\n\nexport function getSubArray(array, start, count) {\n    const start_1 = start | 0;\n    return array.slice(start_1, (start_1 + count));\n}\n\nexport function last(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    return array[array.length - 1];\n}\n\nexport function tryLast(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[array.length - 1]);\n    }\n}\n\nexport function mapIndexed(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(i, source[i]);\n    }\n    return target;\n}\n\nexport function map(f, source, cons) {\n    const len = source.length | 0;\n    const target = new (cons || Array)(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = f(source[i]);\n    }\n    return target;\n}\n\nexport function mapIndexed2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function map2(f, source1, source2, cons) {\n    if (source1.length !== source2.length) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i]);\n    }\n    return result;\n}\n\nexport function mapIndexed3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(i, source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function map3(f, source1, source2, source3, cons) {\n    if ((source1.length !== source2.length) ? true : (source2.length !== source3.length)) {\n        throw (new Error(\"Arrays had different lengths\"));\n    }\n    const result = new (cons || Array)(source1.length);\n    for (let i = 0; i <= (source1.length - 1); i++) {\n        result[i] = f(source1[i], source2[i], source3[i]);\n    }\n    return result;\n}\n\nexport function mapFold(mapping, state, array, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = 0; i <= (array.length - 1); i++) {\n            const patternInput = mapping(acc, array[i]);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function mapFoldBack(mapping, array, state, cons) {\n    const matchValue = array.length | 0;\n    if (matchValue === 0) {\n        return [[], state];\n    }\n    else {\n        let acc = state;\n        const res = new (cons || Array)(matchValue);\n        for (let i = array.length - 1; i >= 0; i--) {\n            const patternInput = mapping(array[i], acc);\n            res[i] = patternInput[0];\n            acc = patternInput[1];\n        }\n        return [res, acc];\n    }\n}\n\nexport function indexed(source) {\n    const len = source.length | 0;\n    const target = new Array(len);\n    for (let i = 0; i <= (len - 1); i++) {\n        target[i] = [i, source[i]];\n    }\n    return target;\n}\n\nexport function truncate(count, array) {\n    const count_1 = max_1(comparePrimitives, 0, count) | 0;\n    const start = 0;\n    return array.slice(start, (start + count_1));\n}\n\nexport function concat(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const matchValue = arrays_1.length | 0;\n    switch (matchValue) {\n        case 0: {\n            return new (cons || Array)(0);\n        }\n        case 1: {\n            return arrays_1[0];\n        }\n        default: {\n            let totalIdx = 0;\n            let totalLength = 0;\n            for (let idx = 0; idx <= (arrays_1.length - 1); idx++) {\n                const arr_1 = arrays_1[idx];\n                totalLength = (totalLength + arr_1.length);\n            }\n            const result = new (cons || Array)(totalLength);\n            for (let idx_1 = 0; idx_1 <= (arrays_1.length - 1); idx_1++) {\n                const arr_2 = arrays_1[idx_1];\n                for (let j = 0; j <= (arr_2.length - 1); j++) {\n                    result[totalIdx] = arr_2[j];\n                    totalIdx = (totalIdx + 1);\n                }\n            }\n            return result;\n        }\n    }\n}\n\nexport function collect(mapping, array, cons) {\n    return concat(map(mapping, array, null), cons);\n}\n\nexport function countBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const key = projection(array[idx]);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v) => {\n            outArg = v;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            const value_1 = keys.push(key);\n            void value_1;\n        }\n    }\n    return map((key_1) => [key_1, getItemFromDict(dict, key_1)], keys, null);\n}\n\nexport function distinctBy(projection, array, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), array);\n}\n\nexport function distinct(array, eq) {\n    return distinctBy((x) => x, array, eq);\n}\n\nexport function where(predicate, array) {\n    return array.filter(predicate);\n}\n\nexport function contains(value, array, eq) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return false;\n            }\n            else if (eq.Equals(value, array[i])) {\n                return true;\n            }\n            else {\n                i_mut = (i + 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (array.length === 0) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return array.filter(((arg00) => addToSet(arg00, cached)));\n    }\n}\n\nexport function groupBy(projection, array, eq) {\n    const dict = new Dictionary([], eq);\n    const keys = [];\n    for (let idx = 0; idx <= (array.length - 1); idx++) {\n        const v = array[idx];\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            void (matchValue[1].push(v));\n        }\n        else {\n            addToDict(dict, key, [v]);\n            const value = keys.push(key);\n            void value;\n        }\n    }\n    return map((key_1) => [key_1, Array.from(getItemFromDict(dict, key_1))], keys, null);\n}\n\nexport function empty(cons) {\n    return new (cons || Array)(0);\n}\n\nexport function singleton(value, cons) {\n    const ar = new (cons || Array)(1);\n    ar[0] = value;\n    return ar;\n}\n\nexport function initialize(count, initializer, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (count - 1); i++) {\n        result[i] = initializer(i);\n    }\n    return result;\n}\n\nexport function pairwise(array) {\n    if (array.length < 2) {\n        return [];\n    }\n    else {\n        const count = (array.length - 1) | 0;\n        const result = new Array(count);\n        for (let i = 0; i <= (count - 1); i++) {\n            result[i] = [array[i], array[i + 1]];\n        }\n        return result;\n    }\n}\n\nexport function replicate(count, initial, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    const result = new (cons || Array)(count);\n    for (let i = 0; i <= (result.length - 1); i++) {\n        result[i] = initial;\n    }\n    return result;\n}\n\nexport function copy(array) {\n    return array.slice();\n}\n\nexport function reverse(array) {\n    const array_2 = array.slice();\n    return array_2.reverse();\n}\n\nexport function scan(folder, state, array, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[0] = state;\n    for (let i = 0; i <= (array.length - 1); i++) {\n        res[i + 1] = folder(res[i], array[i]);\n    }\n    return res;\n}\n\nexport function scanBack(folder, array, state, cons) {\n    const res = new (cons || Array)((array.length + 1));\n    res[array.length] = state;\n    for (let i = array.length - 1; i >= 0; i--) {\n        res[i] = folder(array[i], res[i + 1]);\n    }\n    return res;\n}\n\nexport function skip(count, array, cons) {\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = ((count < 0) ? 0 : count) | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function skipWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === array.length) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const count_1 = count | 0;\n        return array.slice(count_1);\n    }\n}\n\nexport function take(count, array, cons) {\n    if (count < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: count\"));\n    }\n    if (count > array.length) {\n        throw (new Error(\"count is greater than array length\\\\nParameter name: count\"));\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        return array.slice(start, (start + count));\n    }\n}\n\nexport function takeWhile(predicate, array, cons) {\n    let count = 0;\n    while ((count < array.length) ? predicate(array[count]) : false) {\n        count = (count + 1);\n    }\n    if (count === 0) {\n        return new (cons || Array)(0);\n    }\n    else {\n        const start = 0;\n        const count_1 = count | 0;\n        return array.slice(start, (start + count_1));\n    }\n}\n\nexport function addInPlace(x, array) {\n    const value = array.push(x);\n    void value;\n}\n\nexport function addRangeInPlace(range, array) {\n    iterate_1((x) => {\n        const value = array.push(x);\n        void value;\n    }, range);\n}\n\nexport function removeInPlace(item_1, array) {\n    const i = array.indexOf(item_1, 0);\n    if (i > -1) {\n        const value = array.splice(i, 1);\n        void value;\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function removeAllInPlace(predicate, array) {\n    const countRemoveAll = (count) => {\n        const i = array.findIndex(predicate);\n        if (i > -1) {\n            const value = array.splice(i, 1);\n            void value;\n            return (countRemoveAll(count) + 1) | 0;\n        }\n        else {\n            return count | 0;\n        }\n    };\n    return countRemoveAll(0) | 0;\n}\n\nexport function copyTo(source, sourceIndex, target, targetIndex, count) {\n    const diff = (targetIndex - sourceIndex) | 0;\n    for (let i = sourceIndex; i <= ((sourceIndex + count) - 1); i++) {\n        target[i + diff] = source[i];\n    }\n}\n\nexport function copyToTypedArray(source, sourceIndex, target, targetIndex, count) {\n    try {\n        target.set(source.subarray(sourceIndex, sourceIndex + count), targetIndex);\n    }\n    catch (matchValue) {\n        copyTo(source, sourceIndex, target, targetIndex, count);\n    }\n}\n\nexport function indexOf(array, item_1, start, count) {\n    const start_1 = defaultArg(start, 0) | 0;\n    const i = array.indexOf(item_1, start_1);\n    if ((count != null) ? (i >= (start_1 + value_2(count))) : false) {\n        return -1;\n    }\n    else {\n        return i | 0;\n    }\n}\n\nexport function partition(f, source, cons) {\n    const len = source.length | 0;\n    const res1 = new (cons || Array)(len);\n    const res2 = new (cons || Array)(len);\n    let iTrue = 0;\n    let iFalse = 0;\n    for (let i = 0; i <= (len - 1); i++) {\n        if (f(source[i])) {\n            res1[iTrue] = source[i];\n            iTrue = (iTrue + 1);\n        }\n        else {\n            res2[iFalse] = source[i];\n            iFalse = (iFalse + 1);\n        }\n    }\n    return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\n\nexport function find(predicate, array) {\n    const matchValue = array.find(predicate);\n    if (matchValue == null) {\n        return indexNotFound();\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function tryFind(predicate, array) {\n    return array.find(predicate);\n}\n\nexport function findIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue | 0;\n    }\n    else {\n        return indexNotFound() | 0;\n    }\n}\n\nexport function tryFindIndex(predicate, array) {\n    const matchValue = array.findIndex(predicate);\n    if (matchValue > -1) {\n        return matchValue;\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function pick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return indexNotFound();\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue != null) {\n                    return value_2(matchValue);\n                }\n                else {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function tryPick(chooser, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i >= array.length) {\n                return void 0;\n            }\n            else {\n                const matchValue = chooser(array[i]);\n                if (matchValue == null) {\n                    i_mut = (i + 1);\n                    continue loop;\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            break;\n        }\n    };\n    return loop(0);\n}\n\nexport function findBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound();\n            }\n            else if (predicate(array[i])) {\n                return array[i];\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function tryFindBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return some(array[i]);\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function findLastIndex(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return -1;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function findIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return indexNotFound() | 0;\n            }\n            else if (predicate(array[i])) {\n                return i | 0;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1) | 0;\n}\n\nexport function tryFindIndexBack(predicate, array) {\n    const loop = (i_mut) => {\n        loop:\n        while (true) {\n            const i = i_mut;\n            if (i < 0) {\n                return void 0;\n            }\n            else if (predicate(array[i])) {\n                return i;\n            }\n            else {\n                i_mut = (i - 1);\n                continue loop;\n            }\n            break;\n        }\n    };\n    return loop(array.length - 1);\n}\n\nexport function choose(chooser, array, cons) {\n    return map((x_1) => value_2(chooser(x_1)), array.filter(((x) => (chooser(x) != null))), cons);\n}\n\nexport function foldIndexed(folder, state, array) {\n    return array.reduce(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg0, delegateArg1)), state);\n}\n\nexport function fold(folder, state, array) {\n    return array.reduce((folder), state);\n}\n\nexport function iterate(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(array[i]);\n    }\n}\n\nexport function iterateIndexed(action, array) {\n    for (let i = 0; i <= (array.length - 1); i++) {\n        action(i, array[i]);\n    }\n}\n\nexport function iterate2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(array1[i], array2[i]);\n    }\n}\n\nexport function iterateIndexed2(action, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        action(i, array1[i], array2[i]);\n    }\n}\n\nexport function isEmpty(array) {\n    return array.length === 0;\n}\n\nexport function forAll(predicate, array) {\n    return array.every(predicate);\n}\n\nexport function permute(f, array) {\n    const size = array.length | 0;\n    const res = array.slice();\n    const checkFlags = new Array(size);\n    iterateIndexed((i, x) => {\n        const j = f(i) | 0;\n        if ((j < 0) ? true : (j >= size)) {\n            throw (new Error(\"Not a valid permutation\"));\n        }\n        res[j] = x;\n        checkFlags[j] = 1;\n    }, array);\n    if (!(checkFlags.every(((y) => (1 === y))))) {\n        throw (new Error(\"Not a valid permutation\"));\n    }\n    return res;\n}\n\nexport function setSlice(target, lower, upper, source) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const upper_1 = defaultArg(upper, 0) | 0;\n    const length = (((upper_1 > 0) ? upper_1 : (target.length - 1)) - lower_1) | 0;\n    for (let i = 0; i <= length; i++) {\n        target[i + lower_1] = source[i];\n    }\n}\n\nexport function sortInPlaceBy(projection, xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n}\n\nexport function sortInPlace(xs, comparer) {\n    xs.sort(((x, y) => comparer.Compare(x, y)));\n}\n\nexport function sort(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(x, y)));\n    return xs_1;\n}\n\nexport function sortBy(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y))));\n    return xs_1;\n}\n\nexport function sortDescending(xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1)));\n    return xs_1;\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    const xs_1 = xs.slice();\n    xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1)));\n    return xs_1;\n}\n\nexport function sortWith(comparer, xs) {\n    const comparer_1 = comparer;\n    const xs_1 = xs.slice();\n    xs_1.sort(comparer_1);\n    return xs_1;\n}\n\nexport function unfold(generator, state) {\n    const res = [];\n    const loop = (state_1_mut) => {\n        loop:\n        while (true) {\n            const state_1 = state_1_mut;\n            const matchValue = generator(state_1);\n            if (matchValue != null) {\n                const x = matchValue[0];\n                const s = matchValue[1];\n                const value = res.push(x);\n                void value;\n                state_1_mut = s;\n                continue loop;\n            }\n            break;\n        }\n    };\n    loop(state);\n    return res;\n}\n\nexport function unzip(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n    }, array);\n    return [res1, res2];\n}\n\nexport function unzip3(array) {\n    const len = array.length | 0;\n    const res1 = new Array(len);\n    const res2 = new Array(len);\n    const res3 = new Array(len);\n    iterateIndexed((i, tupledArg) => {\n        res1[i] = tupledArg[0];\n        res2[i] = tupledArg[1];\n        res3[i] = tupledArg[2];\n    }, array);\n    return [res1, res2, res3];\n}\n\nexport function zip(array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i]];\n    }\n    return result;\n}\n\nexport function zip3(array1, array2, array3) {\n    if ((array1.length !== array2.length) ? true : (array2.length !== array3.length)) {\n        differentLengths();\n    }\n    const result = new Array(array1.length);\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        result[i] = [array1[i], array2[i], array3[i]];\n    }\n    return result;\n}\n\nexport function chunkBySize(chunkSize, array) {\n    if (chunkSize < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: size\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        for (let x = 0; x <= ((~(~Math.ceil(array.length / chunkSize))) - 1); x++) {\n            let slice;\n            const start_1 = (x * chunkSize) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function splitAt(index, array) {\n    let start;\n    if (index < 0) {\n        throw (new Error(\"The input must be non-negative\\\\nParameter name: index\"));\n    }\n    if (index > array.length) {\n        throw (new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\"));\n    }\n    return [(start = 0, array.slice(start, (start + index))), array.slice(index)];\n}\n\nexport function compareWith(comparer, array1, array2) {\n    if (array1 == null) {\n        if (array2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (array2 == null) {\n        return 1;\n    }\n    else {\n        let i = 0;\n        let result = 0;\n        const length1 = array1.length | 0;\n        const length2 = array2.length | 0;\n        if (length1 > length2) {\n            return 1;\n        }\n        else if (length1 < length2) {\n            return -1;\n        }\n        else {\n            while ((i < length1) ? (result === 0) : false) {\n                result = comparer(array1[i], array2[i]);\n                i = (i + 1);\n            }\n            return result | 0;\n        }\n    }\n}\n\nexport function equalsWith(comparer, array1, array2) {\n    return compareWith(compare, array1, array2) === 0;\n}\n\nexport function exactlyOne(array) {\n    if (array.length === 1) {\n        return array[0];\n    }\n    else if (array.length === 0) {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: array\"));\n    }\n    else {\n        throw (new Error(\"Input array too long\\\\nParameter name: array\"));\n    }\n}\n\nexport function head(array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    else {\n        return array[0];\n    }\n}\n\nexport function tryHead(array) {\n    if (array.length === 0) {\n        return void 0;\n    }\n    else {\n        return some(array[0]);\n    }\n}\n\nexport function tail(array) {\n    if (array.length === 0) {\n        throw (new Error(\"Not enough elements\\\\nParameter name: array\"));\n    }\n    return array.slice(1);\n}\n\nexport function item(index, array) {\n    return array[index];\n}\n\nexport function tryItem(index, array) {\n    if ((index < 0) ? true : (index >= array.length)) {\n        return void 0;\n    }\n    else {\n        return some(array[index]);\n    }\n}\n\nexport function foldBackIndexed(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1, delegateArg2) => folder(delegateArg2, delegateArg1, delegateArg0)), state);\n}\n\nexport function foldBack(folder, array, state) {\n    return array.reduceRight(((delegateArg0, delegateArg1) => folder(delegateArg1, delegateArg0)), state);\n}\n\nexport function foldIndexed2(folder, state, array1, array2) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        throw (new Error(\"Arrays have different lengths\"));\n    }\n    for (let i = 0; i <= (array1.length - 1); i++) {\n        acc = folder(i, acc, array1[i], array2[i]);\n    }\n    return acc;\n}\n\nexport function fold2(folder, state, array1, array2) {\n    return foldIndexed2((_arg1, acc, x, y) => folder(acc, x, y), state, array1, array2);\n}\n\nexport function foldBackIndexed2(folder, array1, array2, state) {\n    let acc = state;\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    const size = array1.length | 0;\n    for (let i = 1; i <= size; i++) {\n        acc = folder(i - 1, array1[size - i], array2[size - i], acc);\n    }\n    return acc;\n}\n\nexport function foldBack2(f, array1, array2, state) {\n    return foldBackIndexed2((_arg1, x, y, acc) => f(x, y, acc), array1, array2, state);\n}\n\nexport function reduce(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduce(reduction_1);\n}\n\nexport function reduceBack(reduction, array) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\"));\n    }\n    const reduction_1 = reduction;\n    return array.reduceRight(reduction_1);\n}\n\nexport function forAll2(predicate, array1, array2) {\n    return fold2((acc, x, y) => (acc ? predicate(x, y) : false), true, array1, array2);\n}\n\nexport function existsOffset(predicate_mut, array_mut, index_mut) {\n    existsOffset:\n    while (true) {\n        const predicate = predicate_mut, array = array_mut, index = index_mut;\n        if (index === array.length) {\n            return false;\n        }\n        else if (predicate(array[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array_mut = array;\n            index_mut = (index + 1);\n            continue existsOffset;\n        }\n        break;\n    }\n}\n\nexport function exists(predicate, array) {\n    return existsOffset(predicate, array, 0);\n}\n\nexport function existsOffset2(predicate_mut, array1_mut, array2_mut, index_mut) {\n    existsOffset2:\n    while (true) {\n        const predicate = predicate_mut, array1 = array1_mut, array2 = array2_mut, index = index_mut;\n        if (index === array1.length) {\n            return false;\n        }\n        else if (predicate(array1[index], array2[index])) {\n            return true;\n        }\n        else {\n            predicate_mut = predicate;\n            array1_mut = array1;\n            array2_mut = array2;\n            index_mut = (index + 1);\n            continue existsOffset2;\n        }\n        break;\n    }\n}\n\nexport function exists2(predicate, array1, array2) {\n    if (array1.length !== array2.length) {\n        differentLengths();\n    }\n    return existsOffset2(predicate, array1, array2, 0);\n}\n\nexport function sum(array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, array[i]);\n    }\n    return acc;\n}\n\nexport function sumBy(projection, array, adder) {\n    let acc = adder.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        acc = adder.Add(acc, projection(array[i]));\n    }\n    return acc;\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), xs);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, array[i]);\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function averageBy(projection, array, averager) {\n    if (array.length === 0) {\n        throw (new Error(\"The input array was empty\\\\nParameter name: array\"));\n    }\n    let total = averager.GetZero();\n    for (let i = 0; i <= (array.length - 1); i++) {\n        total = averager.Add(total, projection(array[i]));\n    }\n    return averager.DivideByInt(total, array.length);\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res;\n    const len = max_1(comparePrimitives, 0, source.length - windowSize) | 0;\n    res = (new Array(len));\n    for (let i = windowSize; i <= source.length; i++) {\n        res[i - windowSize] = source.slice(i - windowSize, (i - 1) + 1);\n    }\n    return res;\n}\n\nexport function splitInto(chunks, array) {\n    if (chunks < 1) {\n        throw (new Error(\"The input must be positive.\\\\nParameter name: chunks\"));\n    }\n    if (array.length === 0) {\n        return [[]];\n    }\n    else {\n        const result = [];\n        const chunks_1 = min_1(comparePrimitives, chunks, array.length) | 0;\n        const minChunkSize = (~(~(array.length / chunks_1))) | 0;\n        const chunksWithExtraItem = (array.length % chunks_1) | 0;\n        for (let i = 0; i <= (chunks_1 - 1); i++) {\n            const chunkSize = ((i < chunksWithExtraItem) ? (minChunkSize + 1) : minChunkSize) | 0;\n            let slice;\n            const start_1 = ((i * minChunkSize) + min_1(comparePrimitives, chunksWithExtraItem, i)) | 0;\n            slice = (array.slice(start_1, (start_1 + chunkSize)));\n            const value = result.push(slice);\n            void value;\n        }\n        return result;\n    }\n}\n\nexport function transpose(arrays, cons) {\n    const arrays_1 = Array.isArray(arrays) ? arrays : (Array.from(arrays));\n    const len = arrays_1.length | 0;\n    if (len === 0) {\n        return new Array(0);\n    }\n    else {\n        const lenInner = arrays_1[0].length | 0;\n        if (!forAll((a) => (a.length === lenInner), arrays_1)) {\n            differentLengths();\n        }\n        const result = new Array(lenInner);\n        for (let i = 0; i <= (lenInner - 1); i++) {\n            result[i] = (new (cons || Array)(len));\n            for (let j = 0; j <= (len - 1); j++) {\n                result[i][j] = arrays_1[j][i];\n            }\n        }\n        return result;\n    }\n}\n\n","import react from \"react\";\r\n\r\nexport const reactApi = react;\r\n\r\n","import { useLayoutEffectWithDeps, useLayoutEffect, useEffectWithDeps, useEffect, useDebugValue } from \"./ReactInterop.js\";\r\nimport { class_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { iterate } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { defaultArg, some, toArray } from \"../fable-library.3.1.2/Option.js\";\r\nimport { reactApi } from \"./Interop.fs.js\";\r\nimport { curry, uncurry } from \"../fable-library.3.1.2/Util.js\";\r\nimport { useState } from \"react\";\r\nimport * as react from \"react\";\r\n\r\nexport const ReactInterop_useDebugValueWithFormatter = useDebugValue;\r\n\r\nexport const ReactInterop_useEffect = useEffect;\r\n\r\nexport const ReactInterop_useEffectWithDeps = useEffectWithDeps;\r\n\r\nexport const ReactInterop_useLayoutEffect = useLayoutEffect;\r\n\r\nexport const ReactInterop_useLayoutEffectWithDeps = useLayoutEffectWithDeps;\r\n\r\nexport class Internal {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Internal$reflection() {\r\n    return class_type(\"Feliz.Internal\", void 0, Internal);\r\n}\r\n\r\nexport function Internal_$ctor() {\r\n    return new Internal();\r\n}\r\n\r\n(() => {\r\n})();\r\n\r\nexport function Internal_functionComponent_Z1B155329(renderElement, name, withKey) {\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    console.warn(some(\"Feliz: using React.functionComponent in Fable 3 is obsolete, please consider using the [\\u003cReactComponent\\u003e] attribute instead which makes Feliz output better Javascript code that is compatible with react-refresh\"));\r\n    return (props) => reactApi.createElement(renderElement, Internal_propsWithKey(withKey, props));\r\n}\r\n\r\nexport function Internal_memo_Z603636D8(renderElement, name, areEqual, withKey) {\r\n    const memoElementType = reactApi.memo(renderElement, uncurry(2, defaultArg(curry(2, areEqual), null)));\r\n    iterate((name_1) => {\r\n        renderElement.displayName = name_1;\r\n    }, toArray(name));\r\n    return (props) => reactApi.createElement(memoElementType, Internal_propsWithKey(withKey, props));\r\n}\r\n\r\nfunction Internal_propsWithKey(withKey, props) {\r\n    if (withKey == null) {\r\n        return props;\r\n    }\r\n    else {\r\n        const f = withKey;\r\n        props.key = f(props);\r\n        return props;\r\n    }\r\n}\r\n\r\nexport class React {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function React$reflection() {\r\n    return class_type(\"Feliz.React\", void 0, React);\r\n}\r\n\r\nexport function React_createDisposable_3A5B6456(dispose) {\r\n    return {\r\n        Dispose() {\r\n            dispose();\r\n        },\r\n    };\r\n}\r\n\r\nexport function useReact_useState_FCFD9EF(initializer) {\r\n    return reactApi.useState(initializer);\r\n}\r\n\r\nexport function useReact_useReducer_2B9E6EA0(update, initialState) {\r\n    return reactApi.useReducer(update, initialState);\r\n}\r\n\r\nexport function useReact_useEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useEffect(effect);\r\n}\r\n\r\nexport function useReact_useEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5ECA432F(effect) {\r\n    ReactInterop_useLayoutEffect(effect);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z5234A374(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps(effect, dependencies);\r\n}\r\n\r\nexport function useReact_useLayoutEffect_3A5B6456(effect) {\r\n    ReactInterop_useLayoutEffect((_arg1) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useLayoutEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useLayoutEffectWithDeps((_arg2) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useEffectOnce_3A5B6456(effect) {\r\n    useReact_useEffect_Z101E1A95(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_Z5ECA432F(effect) {\r\n    useReact_useEffect_Z5234A374(effect, []);\r\n}\r\n\r\nexport function useReact_useEffectOnce_6E825304(effect) {\r\n    useReact_useEffect_Z5234A374(() => {\r\n        const disposeOption = effect();\r\n        return {\r\n            Dispose() {\r\n                iterate((d) => {\r\n                    let copyOfStruct = d;\r\n                    copyOfStruct.Dispose();\r\n                }, toArray(disposeOption));\r\n            },\r\n        };\r\n    }, []);\r\n}\r\n\r\nexport function useReact_useEffect_3A5B6456(effect) {\r\n    ReactInterop_useEffect((_arg3) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    });\r\n}\r\n\r\nexport function useReact_useEffect_Z101E1A95(effect, dependencies) {\r\n    ReactInterop_useEffectWithDeps((_arg4) => {\r\n        effect();\r\n        return React_createDisposable_3A5B6456(() => {\r\n            void undefined;\r\n        });\r\n    }, dependencies);\r\n}\r\n\r\nexport function useReact_useDebugValue_Z721C83C5(value) {\r\n    ReactInterop_useDebugValueWithFormatter(value, (x) => x);\r\n}\r\n\r\nexport function useReact_useDebugValue_77A55D6D(value, formatter) {\r\n    ReactInterop_useDebugValueWithFormatter(value, formatter);\r\n}\r\n\r\nexport function useReact_useCallback_93353E(callbackFunction, dependencies) {\r\n    return reactApi.useCallback(callbackFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function useReact_useRef_1505(initialValue) {\r\n    return reactApi.useRef(initialValue);\r\n}\r\n\r\nexport function useReact_useInputRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useButtonRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useElementRef() {\r\n    return useReact_useRef_1505(void 0);\r\n}\r\n\r\nexport function useReact_useMemo_CF4EA67(createFunction, dependencies) {\r\n    return reactApi.useMemo(createFunction, defaultArg(dependencies, []));\r\n}\r\n\r\nexport function React_functionComponent_2F9D7239(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_Z4C5FE1BE(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329(render, name, withKey);\r\n}\r\n\r\nexport function React_functionComponent_19A12FB2(render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, withKey);\r\n}\r\n\r\nexport function React_functionComponent_2E1DD889(name, render, withKey) {\r\n    return Internal_functionComponent_Z1B155329((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, withKey);\r\n}\r\n\r\nexport function React_memo_62A0F746(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_6648A89D(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8(render, name, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_C2C6BED(render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), void 0, areEqual, withKey);\r\n}\r\n\r\nexport function React_memo_Z4FCC584A(name, render, withKey, areEqual) {\r\n    return Internal_memo_Z603636D8((arg) => react.createElement(react.Fragment, {}, ...render(arg)), name, areEqual, withKey);\r\n}\r\n\r\nexport function React_createContext_1AE444D8(name, defaultValue) {\r\n    const contextObject = reactApi.createContext(defaultArg(defaultValue, void 0));\r\n    iterate((name_1) => {\r\n        contextObject.displayName = name_1;\r\n    }, toArray(name));\r\n    return contextObject;\r\n}\r\n\r\nexport function React_contextProvider_34D9BBBD(contextObject, contextValue, child) {\r\n    return reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, child);\r\n}\r\n\r\nexport function React_contextProvider_138D2F56(contextObject, contextValue, children) {\r\n    return reactApi.createElement(contextObject.Provider, {\r\n        value: contextValue,\r\n    }, ...children);\r\n}\r\n\r\nexport function React_contextConsumer_Z68910595(contextObject, render) {\r\n    return reactApi.createElement(contextObject.Consumer, null, render);\r\n}\r\n\r\nexport function React_contextConsumer_56D53A40(contextObject, render) {\r\n    return reactApi.createElement(contextObject.Consumer, null, (arg) => react.createElement(react.Fragment, {}, ...render(arg)));\r\n}\r\n\r\nexport function useReact_useContext_37FA55CF(contextObject) {\r\n    return reactApi.useContext(contextObject);\r\n}\r\n\r\nexport function useReact_useCallbackRef_7C4B0DD6(callback) {\r\n    const lastRenderCallbackRef = useReact_useRef_1505(callback);\r\n    const callbackRef = useReact_useCallback_93353E((arg) => lastRenderCallbackRef.current(arg), []);\r\n    useReact_useLayoutEffect_3A5B6456(() => {\r\n        lastRenderCallbackRef.current = callback;\r\n    });\r\n    return callbackRef;\r\n}\r\n\r\nexport const React_useStateWithUpdater_1505 = useState;\r\n\r\nexport function React_forwardRef_3790D881(render) {\r\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    return (tupledArg) => {\r\n        let o;\r\n        return reactApi.createElement(forwardRefType, (o = {\r\n            props: tupledArg[0],\r\n            ref: tupledArg[1],\r\n        }, Object.assign({}, o)));\r\n    };\r\n}\r\n\r\nexport function React_forwardRef_7DC3DB1A(name, render) {\r\n    const forwardRefType = reactApi.forwardRef((props, ref) => render([props, ref]));\r\n    render.displayName = name;\r\n    return (tupledArg) => {\r\n        let o;\r\n        return reactApi.createElement(forwardRefType, (o = {\r\n            props: tupledArg[0],\r\n            ref: tupledArg[1],\r\n        }, Object.assign({}, o)));\r\n    };\r\n}\r\n\r\nexport function React_strictMode_6E3A73D(children) {\r\n    return reactApi.createElement(reactApi.StrictMode, void 0, ...children);\r\n}\r\n\r\nexport function React_lazy$0027_4712D3AE(dynamicImport, props) {\r\n    return reactApi.createElement(reactApi.lazy((() => dynamicImport)), props);\r\n}\r\n\r\nexport function React_lazy$0027_Z3D8450FC(dynamicImport, props) {\r\n    return reactApi.createElement(reactApi.lazy(dynamicImport), props);\r\n}\r\n\r\nexport function React_suspense_6E3A73D(children) {\r\n    let o;\r\n    return reactApi.createElement(reactApi.Suspense, (o = {\r\n        fallback: null,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function React_suspense_Z3796A576(children, fallback) {\r\n    let o;\r\n    return reactApi.createElement(reactApi.Suspense, (o = {\r\n        fallback: fallback,\r\n    }, Object.assign({}, o)), ...children);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_596DDC25(ref, createHandle) {\r\n    reactApi.useImperativeHandle(ref, createHandle);\r\n}\r\n\r\nexport function useReact_useImperativeHandle_Z12F09548(ref, createHandle, dependencies) {\r\n    reactApi.useImperativeHandle(ref, createHandle, dependencies);\r\n}\r\n\r\nexport function useFeliz_React__React_useState_Static_1505(initial) {\r\n    return reactApi.useState(initial);\r\n}\r\n\r\nexport const Feliz_React__React_useStateWithUpdater_Static_FCFD9EF = useState;\r\n\r\n","import {\r\n    useEffect as useEffectReact,\r\n    useLayoutEffect as useLayoutEffectReact,\r\n    useDebugValue as useDebugValueReact } from 'react'\r\n\r\nexport const useEffect = getDisposable => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useEffectWithDeps = (getDisposable, deps) => {\r\n    useEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useLayoutEffect = getDisposable => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    })\r\n}\r\n\r\nexport const useLayoutEffectWithDeps = (getDisposable, deps) => {\r\n    useLayoutEffectReact(() => {\r\n        const disposable = getDisposable()\r\n        return () => {\r\n            disposable.Dispose();\r\n        }\r\n    }, deps)\r\n}\r\n\r\nexport const useDebugValue = (value, formatter) => useDebugValueReact(value, formatter)","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    constructor() {\n        this.callCount = 0;\n    }\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { Union } from \"./Types.js\";\nimport { union_type } from \"./Reflection.js\";\nimport { some } from \"./Option.js\";\n\nexport class FSharpResult$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Ok\", \"Error\"];\n    }\n}\n\nexport function FSharpResult$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpResult`2\", [gen0, gen1], FSharpResult$2, () => [[[\"ResultValue\", gen0]], [[\"ErrorValue\", gen1]]]);\n}\n\nexport function Result_Map(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, mapping(result.fields[0]));\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport function Result_MapError(mapping, result) {\n    if (result.tag === 0) {\n        return new FSharpResult$2(0, result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, mapping(result.fields[0]));\n    }\n}\n\nexport function Result_Bind(binder, result) {\n    if (result.tag === 0) {\n        return binder(result.fields[0]);\n    }\n    else {\n        return new FSharpResult$2(1, result.fields[0]);\n    }\n}\n\nexport class FSharpChoice$2 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of2\", \"Choice2Of2\"];\n    }\n}\n\nexport function FSharpChoice$2$reflection(gen0, gen1) {\n    return union_type(\"FSharp.Core.FSharpChoice`2\", [gen0, gen1], FSharpChoice$2, () => [[[\"Item\", gen0]], [[\"Item\", gen1]]]);\n}\n\nexport class FSharpChoice$3 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of3\", \"Choice2Of3\", \"Choice3Of3\"];\n    }\n}\n\nexport function FSharpChoice$3$reflection(gen0, gen1, gen2) {\n    return union_type(\"FSharp.Core.FSharpChoice`3\", [gen0, gen1, gen2], FSharpChoice$3, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]]]);\n}\n\nexport class FSharpChoice$4 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of4\", \"Choice2Of4\", \"Choice3Of4\", \"Choice4Of4\"];\n    }\n}\n\nexport function FSharpChoice$4$reflection(gen0, gen1, gen2, gen3) {\n    return union_type(\"FSharp.Core.FSharpChoice`4\", [gen0, gen1, gen2, gen3], FSharpChoice$4, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]]]);\n}\n\nexport class FSharpChoice$5 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of5\", \"Choice2Of5\", \"Choice3Of5\", \"Choice4Of5\", \"Choice5Of5\"];\n    }\n}\n\nexport function FSharpChoice$5$reflection(gen0, gen1, gen2, gen3, gen4) {\n    return union_type(\"FSharp.Core.FSharpChoice`5\", [gen0, gen1, gen2, gen3, gen4], FSharpChoice$5, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]]]);\n}\n\nexport class FSharpChoice$6 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of6\", \"Choice2Of6\", \"Choice3Of6\", \"Choice4Of6\", \"Choice5Of6\", \"Choice6Of6\"];\n    }\n}\n\nexport function FSharpChoice$6$reflection(gen0, gen1, gen2, gen3, gen4, gen5) {\n    return union_type(\"FSharp.Core.FSharpChoice`6\", [gen0, gen1, gen2, gen3, gen4, gen5], FSharpChoice$6, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]]]);\n}\n\nexport class FSharpChoice$7 extends Union {\n    constructor(tag, ...fields) {\n        super();\n        this.tag = (tag | 0);\n        this.fields = fields;\n    }\n    cases() {\n        return [\"Choice1Of7\", \"Choice2Of7\", \"Choice3Of7\", \"Choice4Of7\", \"Choice5Of7\", \"Choice6Of7\", \"Choice7Of7\"];\n    }\n}\n\nexport function FSharpChoice$7$reflection(gen0, gen1, gen2, gen3, gen4, gen5, gen6) {\n    return union_type(\"FSharp.Core.FSharpChoice`7\", [gen0, gen1, gen2, gen3, gen4, gen5, gen6], FSharpChoice$7, () => [[[\"Item\", gen0]], [[\"Item\", gen1]], [[\"Item\", gen2]], [[\"Item\", gen3]], [[\"Item\", gen4]], [[\"Item\", gen5]], [[\"Item\", gen6]]]);\n}\n\nexport function Choice_makeChoice1Of2(x) {\n    return new FSharpChoice$2(0, x);\n}\n\nexport function Choice_makeChoice2Of2(x) {\n    return new FSharpChoice$2(1, x);\n}\n\nexport function Choice_tryValueIfChoice1Of2(x) {\n    if (x.tag === 0) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function Choice_tryValueIfChoice2Of2(x) {\n    if (x.tag === 1) {\n        return some(x.fields[0]);\n    }\n    else {\n        return void 0;\n    }\n}\n\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder.js\";\nimport { CancellationToken } from \"./AsyncBuilder.js\";\nimport { protectedCont } from \"./AsyncBuilder.js\";\nimport { protectedBind } from \"./AsyncBuilder.js\";\nimport { protectedReturn } from \"./AsyncBuilder.js\";\nimport { Choice_makeChoice1Of2, Choice_makeChoice2Of2 } from \"./Choice.js\";\nimport { map } from \"./Seq.js\";\n// Implemented just for type references\nexport class Async {\n}\nfunction emptyContinuation(_x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function throwIfCancellationRequested(token) {\n    if (token != null && token.isCancelled) {\n        throw new Error(\"Operation is cancelled\");\n    }\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(Choice_makeChoice1Of2(x)),\n            onError: (ex) => ctx.onSuccess(Choice_makeChoice2Of2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (_x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = undefined;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\nexport default Async;\n","import { Result_MapError, Result_Map, FSharpResult$2 } from \"../fable-library.3.1.2/Choice.js\";\r\nimport { class_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { getEnumerator } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { equals } from \"../fable-library.3.1.2/Util.js\";\r\n\r\nexport function reject(reason) {\r\n    return Promise.reject(reason);\r\n}\r\n\r\nexport function result(a) {\r\n    return a.then(((arg) => (new FSharpResult$2(0, arg))),((arg_1) => (new FSharpResult$2(1, arg_1))));\r\n}\r\n\r\nexport function mapResult(fn, a) {\r\n    return a.then(((result_1) => Result_Map(fn, result_1)));\r\n}\r\n\r\nexport function bindResult(fn, a) {\r\n    return a.then(((a_1) => {\r\n        if (a_1.tag === 1) {\r\n            return Promise.resolve((new FSharpResult$2(1, a_1.fields[0])));\r\n        }\r\n        else {\r\n            return result(fn(a_1.fields[0]));\r\n        }\r\n    }));\r\n}\r\n\r\nexport function mapResultError(fn, a) {\r\n    return a.then(((result_1) => Result_MapError(fn, result_1)));\r\n}\r\n\r\nexport function tap(fn, a) {\r\n    return a.then(((x) => {\r\n        fn(x);\r\n        return x;\r\n    }));\r\n}\r\n\r\nexport class PromiseBuilder {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function PromiseBuilder$reflection() {\r\n    return class_type(\"Promise.PromiseBuilder\", void 0, PromiseBuilder);\r\n}\r\n\r\nexport function PromiseBuilder_$ctor() {\r\n    return new PromiseBuilder();\r\n}\r\n\r\nexport function PromiseBuilder__For_1565554B(x, seq, body) {\r\n    let p = Promise.resolve(undefined);\r\n    const enumerator = getEnumerator(seq);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const a = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            p = (p.then((() => body(a))));\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return p;\r\n}\r\n\r\nexport function PromiseBuilder__While_2044D34(x, guard, p) {\r\n    if (guard()) {\r\n        return p.then((() => PromiseBuilder__While_2044D34(x, guard, p)));\r\n    }\r\n    else {\r\n        return Promise.resolve(undefined);\r\n    }\r\n}\r\n\r\nexport function PromiseBuilder__TryFinally_7D49A2FD(x, p, compensation) {\r\n    return p.then(((x_1) => {\r\n        compensation();\r\n        return x_1;\r\n    }),((er) => {\r\n        compensation();\r\n        throw er;\r\n    }));\r\n}\r\n\r\nexport function PromiseBuilder__Delay_62FBFDE1(x, generator) {\r\n    return {\r\n        then: (f1, f2) => {\r\n            try {\r\n                return generator().then(f1, f2);\r\n            }\r\n            catch (er) {\r\n                if (equals(f2, null)) {\r\n                    return Promise.reject(er);\r\n                }\r\n                else {\r\n                    try {\r\n                        return Promise.resolve(f2(er));\r\n                    }\r\n                    catch (er_1) {\r\n                        return Promise.reject(er_1);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        catch: (f) => {\r\n            try {\r\n                return generator().catch(f);\r\n            }\r\n            catch (er_2) {\r\n                try {\r\n                    return Promise.resolve(f(er_2));\r\n                }\r\n                catch (er_3) {\r\n                    return Promise.reject(er_3);\r\n                }\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport function PromiseBuilder__Run_212F1D4B(x, p) {\r\n    return new Promise(((success, fail) => {\r\n        try {\r\n            const p_1 = Promise.resolve(p);\r\n            p_1.then(success, fail);\r\n        }\r\n        catch (er) {\r\n            fail(er);\r\n        }\r\n    }));\r\n}\r\n\r\nexport function PromiseBuilder__Using_74F7E79D(x, resource, binder) {\r\n    return PromiseBuilder__TryFinally_7D49A2FD(x, binder(resource), () => {\r\n        let copyOfStruct = resource;\r\n        copyOfStruct.Dispose();\r\n    });\r\n}\r\n\r\n","import { PromiseBuilder_$ctor } from \"./Promise.fs.js\";\r\n\r\nexport const promise = PromiseBuilder_$ctor();\r\n\r\n","import { Union } from \"../fable-library.3.1.2/Types.js\";\r\nimport { class_type, union_type, int32_type, array_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { fill } from \"../fable-library.3.1.2/Array.js\";\r\nimport { isDisposable, comparePrimitives, max } from \"../fable-library.3.1.2/Util.js\";\r\nimport { toArray, value as value_1, some } from \"../fable-library.3.1.2/Option.js\";\r\nimport { iterate as iterate_1, rangeNumber, singleton, collect, take, skip, append, delay } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { useReact_useMemo_CF4EA67, useReact_useEffect_3A5B6456, useReact_useEffect_Z101E1A95, useReact_useEffect_Z5234A374, useReact_useCallbackRef_7C4B0DD6, React_createDisposable_3A5B6456, useReact_useEffectOnce_Z5ECA432F, useFeliz_React__React_useState_Static_1505, useReact_useRef_1505 } from \"../Feliz.1.29.0/React.fs.js\";\r\nimport { isCancellationRequested, cancel, createCancellationToken } from \"../fable-library.3.1.2/Async.js\";\r\nimport { PromiseBuilder__While_2044D34, PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"../Fable.Promise.2.0.0/Promise.fs.js\";\r\nimport { iterate } from \"../fable-library.3.1.2/List.js\";\r\nimport { promise } from \"../Fable.Promise.2.0.0/PromiseImpl.fs.js\";\r\n\r\nexport class RingState$1 extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Writable\", \"ReadWritable\"];\r\n    }\r\n}\r\n\r\nexport function RingState$1$reflection(gen0) {\r\n    return union_type(\"Feliz.UseElmish.RingState`1\", [gen0], RingState$1, () => [[[\"wx\", array_type(gen0)], [\"ix\", int32_type]], [[\"rw\", array_type(gen0)], [\"wix\", int32_type], [\"rix\", int32_type]]]);\r\n}\r\n\r\nexport class RingBuffer$1 {\r\n    constructor(size) {\r\n        this.state = (new RingState$1(0, fill(new Array(max(comparePrimitives, size, 10)), 0, max(comparePrimitives, size, 10), null), 0));\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1$reflection(gen0) {\r\n    return class_type(\"Feliz.UseElmish.RingBuffer`1\", [gen0], RingBuffer$1);\r\n}\r\n\r\nexport function RingBuffer$1_$ctor_Z524259A4(size) {\r\n    return new RingBuffer$1(size);\r\n}\r\n\r\nexport function RingBuffer$1__Pop(_) {\r\n    const matchValue = _.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items = matchValue.fields[0];\r\n        const rix$0027 = ((rix + 1) % items.length) | 0;\r\n        if (rix$0027 === wix) {\r\n            _.state = (new RingState$1(0, items, wix));\r\n        }\r\n        else {\r\n            _.state = (new RingState$1(1, items, wix, rix$0027));\r\n        }\r\n        return some(items[rix]);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RingBuffer$1__Push_2B595(_, item) {\r\n    const matchValue = _.state;\r\n    if (matchValue.tag === 1) {\r\n        const wix_1 = matchValue.fields[1] | 0;\r\n        const rix = matchValue.fields[2] | 0;\r\n        const items_1 = matchValue.fields[0];\r\n        items_1[wix_1] = item;\r\n        const wix$0027 = ((wix_1 + 1) % items_1.length) | 0;\r\n        if (wix$0027 === rix) {\r\n            _.state = (new RingState$1(1, RingBuffer$1__doubleSize(_, rix, items_1), items_1.length, 0));\r\n        }\r\n        else {\r\n            _.state = (new RingState$1(1, items_1, wix$0027, rix));\r\n        }\r\n    }\r\n    else {\r\n        const ix = matchValue.fields[1] | 0;\r\n        const items = matchValue.fields[0];\r\n        items[ix] = item;\r\n        const wix = ((ix + 1) % items.length) | 0;\r\n        _.state = (new RingState$1(1, items, wix, ix));\r\n    }\r\n}\r\n\r\nfunction RingBuffer$1__doubleSize(this$, ix, items) {\r\n    return Array.from(delay(() => append(skip(ix, items), delay(() => append(take(ix, items), delay(() => collect((matchValue) => singleton(null), rangeNumber(0, 1, items.length))))))));\r\n}\r\n\r\nexport function useFeliz_React__React_useElmish_Static_17DC4F1D(init, update, dependencies) {\r\n    const state = useReact_useRef_1505(init[0]);\r\n    const ring = useReact_useRef_1505(RingBuffer$1_$ctor_Z524259A4(10));\r\n    const patternInput = useFeliz_React__React_useState_Static_1505(init[0]);\r\n    let token_1;\r\n    const cts = useReact_useRef_1505(createCancellationToken());\r\n    const token = useReact_useRef_1505(cts.current);\r\n    useReact_useEffectOnce_Z5ECA432F(() => React_createDisposable_3A5B6456(() => {\r\n        cancel(cts.current);\r\n    }));\r\n    token_1 = token;\r\n    const setChildState_1 = () => {\r\n        const value = setTimeout(() => {\r\n            let copyOfStruct;\r\n            if (!(copyOfStruct = token_1.current, isCancellationRequested(copyOfStruct))) {\r\n                patternInput[1](state.current);\r\n            }\r\n        }, 0) | 0;\r\n        void value;\r\n    };\r\n    const dispatch = (msg) => {\r\n        const pr = PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => {\r\n            let nextMsg = some(msg);\r\n            return PromiseBuilder__While_2044D34(promise, () => {\r\n                let copyOfStruct_1;\r\n                return (nextMsg != null) ? (!(copyOfStruct_1 = token_1.current, isCancellationRequested(copyOfStruct_1))) : false;\r\n            }, PromiseBuilder__Delay_62FBFDE1(promise, () => {\r\n                const patternInput_1 = update(value_1(nextMsg), state.current);\r\n                iterate((sub) => {\r\n                    sub(dispatch);\r\n                }, patternInput_1[1]);\r\n                nextMsg = RingBuffer$1__Pop(ring.current);\r\n                state.current = patternInput_1[0];\r\n                setChildState_1();\r\n                return Promise.resolve();\r\n            }));\r\n        }));\r\n        pr.then();\r\n    };\r\n    const dispatch_1 = useReact_useCallbackRef_7C4B0DD6(dispatch);\r\n    useReact_useEffect_Z5234A374(() => React_createDisposable_3A5B6456(() => {\r\n        let matchValue;\r\n        iterate_1((o) => {\r\n            o.Dispose();\r\n        }, toArray((matchValue = state.current, isDisposable(matchValue) ? matchValue : (void 0))));\r\n    }), dependencies);\r\n    useReact_useEffect_Z101E1A95(() => {\r\n        state.current = init[0];\r\n        setChildState_1();\r\n        iterate((sub_1) => {\r\n            sub_1(dispatch_1);\r\n        }, init[1]);\r\n    }, dependencies);\r\n    useReact_useEffect_3A5B6456(() => {\r\n        iterate_1(dispatch_1, toArray(RingBuffer$1__Pop(ring.current)));\r\n    });\r\n    return [patternInput[0], dispatch_1];\r\n}\r\n\r\nexport function useFeliz_React__React_useElmish_Static_645B1FB7(init, update, dependencies) {\r\n    return useFeliz_React__React_useElmish_Static_17DC4F1D(useReact_useMemo_CF4EA67(init, dependencies), update, dependencies);\r\n}\r\n\r\n","import { bind, map } from \"../fable-library.3.1.2/Option.js\";\r\n\r\nexport const Impl_allowsPassiveEvents = (() => {\r\n    let passive = false;\r\n    try {\r\n        if ((typeof window !== 'undefined') ? (typeof window.addEventListener === 'function') : false) {\r\n            window.addEventListener(\"testPassiveEventSupport\", (value) => {\r\n                void value;\r\n            }, {\r\n                passive: true,\r\n            });\r\n            window.removeEventListener(\"testPassiveEventSupport\", (value_1) => {\r\n                void value_1;\r\n            });\r\n        }\r\n    }\r\n    catch (matchValue) {\r\n    }\r\n    return passive;\r\n})();\r\n\r\nexport const Impl_defaultPassive = {\r\n    passive: true,\r\n};\r\n\r\nexport function Impl_adjustPassive(maybeOptions) {\r\n    return map((options) => {\r\n        if (options.passive ? (!Impl_allowsPassiveEvents) : false) {\r\n            return {\r\n                capture: options.capture,\r\n                once: options.once,\r\n                passive: false,\r\n            };\r\n        }\r\n        else {\r\n            return options;\r\n        }\r\n    }, maybeOptions);\r\n}\r\n\r\nexport function Impl_createRemoveOptions(maybeOptions) {\r\n    return bind((options) => {\r\n        if (options.capture) {\r\n            return {\r\n                capture: true,\r\n            };\r\n        }\r\n        else {\r\n            return void 0;\r\n        }\r\n    }, maybeOptions);\r\n}\r\n\r\n","import { split, trimEnd, isNullOrWhiteSpace, substring, join, endsWith } from \"../fable-library.3.1.2/String.js\";\r\nimport { ofSeq, ofArray, singleton, collect, head, tail, empty, reverse, map } from \"../fable-library.3.1.2/List.js\";\r\nimport { equalsWith } from \"../fable-library.3.1.2/Array.js\";\r\nimport { comparePrimitives } from \"../fable-library.3.1.2/Util.js\";\r\nimport { React_createDisposable_3A5B6456, useReact_useEffect_Z5ECA432F, useReact_useMemo_CF4EA67, useReact_useCallbackRef_7C4B0DD6, React_memo_62A0F746 } from \"../Feliz.1.29.0/React.fs.js\";\r\nimport { defaultArg } from \"../fable-library.3.1.2/Option.js\";\r\nimport { Impl_createRemoveOptions, Impl_adjustPassive } from \"../Feliz.UseListener.0.6.3/Listener.fs.js\";\r\nimport { tryParse } from \"../fable-library.3.1.2/Int32.js\";\r\nimport { FSharpRef } from \"../fable-library.3.1.2/Types.js\";\r\nimport { tryParse as tryParse_1, fromInt } from \"../fable-library.3.1.2/Long.js\";\r\nimport { tryParse as tryParse_2 } from \"../fable-library.3.1.2/Guid.js\";\r\nimport { tryParse as tryParse_3 } from \"../fable-library.3.1.2/Double.js\";\r\nimport { tryParse as tryParse_4 } from \"../fable-library.3.1.2/Decimal.js\";\r\nimport Decimal from \"../fable-library.3.1.2/Decimal.js\";\r\nimport { map as map_1, delay } from \"../fable-library.3.1.2/Seq.js\";\r\n\r\nexport function RouterModule_String_$007CPrefix$007C(prefix, str) {\r\n    if (str.indexOf(prefix) === 0) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_String_$007CSuffix$007C(suffix, str) {\r\n    if (endsWith(str, suffix)) {\r\n        return str;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryString(queryStringPairs) {\r\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), encodeURIComponent(tupledArg[1])]), queryStringPairs));\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        return \"?\" + _arg1;\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeQueryStringInts(queryStringIntPairs) {\r\n    const _arg1 = join(\"\\u0026\", map((tupledArg) => join(\"=\", [encodeURIComponent(tupledArg[0]), tupledArg[1]]), queryStringIntPairs));\r\n    if (_arg1 === \"\") {\r\n        return \"\";\r\n    }\r\n    else {\r\n        return \"?\" + _arg1;\r\n    }\r\n}\r\n\r\nfunction RouterModule_normalizeRoute(routeMode) {\r\n    if (routeMode === 1) {\r\n        return (_arg1) => {\r\n            let activePatternResult37445, path, activePatternResult37446, path_1, activePatternResult37447, path_2;\r\n            return activePatternResult37445 = RouterModule_String_$007CPrefix$007C(\"/\", _arg1), (activePatternResult37445 != null) ? (path = activePatternResult37445, \"#\" + path) : (activePatternResult37446 = RouterModule_String_$007CPrefix$007C(\"#/\", _arg1), (activePatternResult37446 != null) ? (path_1 = activePatternResult37446, path_1) : (activePatternResult37447 = RouterModule_String_$007CPrefix$007C(\"#\", _arg1), (activePatternResult37447 != null) ? (path_2 = activePatternResult37447, \"#/\" + substring(path_2, 1, path_2.length - 1)) : (\"#/\" + _arg1)));\r\n        };\r\n    }\r\n    else {\r\n        return (_arg2) => {\r\n            let activePatternResult37450, path_4;\r\n            return activePatternResult37450 = RouterModule_String_$007CPrefix$007C(\"/\", _arg2), (activePatternResult37450 != null) ? (path_4 = activePatternResult37450, path_4) : (\"/\" + _arg2);\r\n        };\r\n    }\r\n}\r\n\r\nexport function RouterModule_encodeParts(xs, routeMode) {\r\n    return RouterModule_normalizeRoute(routeMode)(join(\"/\", map((part) => {\r\n        if (((part.indexOf(\"?\") >= 0) ? true : (part.indexOf(\"#\") === 0)) ? true : (part.indexOf(\"/\") === 0)) {\r\n            return part;\r\n        }\r\n        else {\r\n            return encodeURIComponent(part);\r\n        }\r\n    }, xs)));\r\n}\r\n\r\nexport function RouterModule_trySeparateLast(xs) {\r\n    const matchValue = reverse(xs);\r\n    if (matchValue.tail != null) {\r\n        if (matchValue.tail.tail == null) {\r\n            return [empty(), matchValue.head];\r\n        }\r\n        else {\r\n            return [reverse(tail(matchValue)), head(matchValue)];\r\n        }\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function RouterModule_nav(xs, mode, routeMode) {\r\n    if (mode === 1) {\r\n        history.pushState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    else {\r\n        history.replaceState(void 0, \"\", RouterModule_encodeParts(xs, routeMode));\r\n    }\r\n    const ev = document.createEvent(\"CustomEvent\");\r\n    ev.initEvent(\"CUSTOM_NAVIGATION_EVENT\", true, true);\r\n    const value = window.dispatchEvent(ev);\r\n    void value;\r\n}\r\n\r\nexport function RouterModule_urlSegments(path, mode) {\r\n    return collect((segment) => {\r\n        if (isNullOrWhiteSpace(segment)) {\r\n            return empty();\r\n        }\r\n        else {\r\n            const segment_1 = trimEnd(segment, \"#\");\r\n            if (segment_1 === \"?\") {\r\n                return empty();\r\n            }\r\n            else if (RouterModule_String_$007CPrefix$007C(\"?\", segment_1) != null) {\r\n                return singleton(segment_1);\r\n            }\r\n            else {\r\n                const matchValue = segment_1.split(\"?\");\r\n                if ((!equalsWith(comparePrimitives, matchValue, null)) ? (matchValue.length === 1) : false) {\r\n                    const value = matchValue[0];\r\n                    return singleton(decodeURIComponent(value));\r\n                }\r\n                else if ((!equalsWith(comparePrimitives, matchValue, null)) ? (matchValue.length === 2) : false) {\r\n                    if (matchValue[1] === \"\") {\r\n                        const value_1 = matchValue[0];\r\n                        return singleton(decodeURIComponent(value_1));\r\n                    }\r\n                    else {\r\n                        const value_2 = matchValue[0];\r\n                        const query = matchValue[1];\r\n                        return ofArray([decodeURIComponent(value_2), \"?\" + query]);\r\n                    }\r\n                }\r\n                else {\r\n                    return empty();\r\n                }\r\n            }\r\n        }\r\n    }, ofArray(split((RouterModule_String_$007CPrefix$007C(\"#\", path) != null) ? substring(path, 1, path.length - 1) : ((mode === 1) ? ((RouterModule_String_$007CSuffix$007C(\"#\", path) != null) ? \"\" : ((RouterModule_String_$007CSuffix$007C(\"#/\", path) != null) ? \"\" : path)) : path), [\"/\"], null, 0)));\r\n}\r\n\r\nexport function RouterModule_onUrlChange(routeMode, urlChanged, ev) {\r\n    return urlChanged(RouterModule_urlSegments((routeMode === 2) ? (window.location.pathname + window.location.search) : window.location.hash, routeMode));\r\n}\r\n\r\nexport const RouterModule_router = React_memo_62A0F746((input) => {\r\n    const onChange = useReact_useCallbackRef_7C4B0DD6((ev) => {\r\n        const urlChanged = defaultArg(input.onUrlChanged, (value) => {\r\n            void value;\r\n        });\r\n        RouterModule_onUrlChange(defaultArg(input.hashMode, 1), urlChanged, ev);\r\n    });\r\n    if (((window.navigator.userAgent).indexOf(\"Trident\") >= 0) ? true : ((window.navigator.userAgent).indexOf(\"MSIE\") >= 0)) {\r\n        const eventType = \"hashchange\";\r\n        const action_1 = (arg00) => {\r\n            onChange(arg00);\r\n        };\r\n        const options_1 = void 0;\r\n        const addOptions = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_1), [options_1]);\r\n        const removeOptions = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_1), [options_1]);\r\n        const fn = useReact_useMemo_CF4EA67(() => ((arg) => {\r\n            action_1(arg);\r\n        }), [action_1]);\r\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions == null) {\r\n                window.addEventListener(eventType, fn);\r\n            }\r\n            else {\r\n                window.addEventListener(eventType, fn, addOptions);\r\n            }\r\n            return React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions == null) {\r\n                    window.removeEventListener(eventType, fn);\r\n                }\r\n                else {\r\n                    window.removeEventListener(eventType, fn, removeOptions);\r\n                }\r\n            });\r\n        }));\r\n    }\r\n    else {\r\n        const eventType_1 = \"popstate\";\r\n        const action_3 = onChange;\r\n        const options_5 = void 0;\r\n        const addOptions_1 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_5), [options_5]);\r\n        const removeOptions_1 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_5), [options_5]);\r\n        const fn_1 = useReact_useMemo_CF4EA67(() => ((arg_1) => {\r\n            action_3(arg_1);\r\n        }), [action_3]);\r\n        useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\r\n            if (addOptions_1 == null) {\r\n                window.addEventListener(eventType_1, fn_1);\r\n            }\r\n            else {\r\n                window.addEventListener(eventType_1, fn_1, addOptions_1);\r\n            }\r\n            return React_createDisposable_3A5B6456(() => {\r\n                if (removeOptions_1 == null) {\r\n                    window.removeEventListener(eventType_1, fn_1);\r\n                }\r\n                else {\r\n                    window.removeEventListener(eventType_1, fn_1, removeOptions_1);\r\n                }\r\n            });\r\n        }));\r\n    }\r\n    const eventType_2 = \"CUSTOM_NAVIGATION_EVENT\";\r\n    const action_4 = onChange;\r\n    const options_8 = void 0;\r\n    const addOptions_2 = useReact_useMemo_CF4EA67(() => Impl_adjustPassive(options_8), [options_8]);\r\n    const removeOptions_2 = useReact_useMemo_CF4EA67(() => Impl_createRemoveOptions(options_8), [options_8]);\r\n    const fn_2 = useReact_useMemo_CF4EA67(() => ((arg_2) => {\r\n        action_4(arg_2);\r\n    }), [action_4]);\r\n    useReact_useEffect_Z5ECA432F(useReact_useCallbackRef_7C4B0DD6(() => {\r\n        if (addOptions_2 == null) {\r\n            window.addEventListener(eventType_2, fn_2);\r\n        }\r\n        else {\r\n            window.addEventListener(eventType_2, fn_2, addOptions_2);\r\n        }\r\n        return React_createDisposable_3A5B6456(() => {\r\n            if (removeOptions_2 == null) {\r\n                window.removeEventListener(eventType_2, fn_2);\r\n            }\r\n            else {\r\n                window.removeEventListener(eventType_2, fn_2, removeOptions_2);\r\n            }\r\n        });\r\n    }));\r\n    const matchValue = input.application;\r\n    return (matchValue == null) ? null : matchValue;\r\n});\r\n\r\nexport function Route_$007CInt$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [tryParse(input, 511, false, 32, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CInt64$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = fromInt(0);\r\n    matchValue = [tryParse_1(input, 511, false, 64, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CGuid$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = \"00000000-0000-0000-0000-000000000000\";\r\n    matchValue = [tryParse_2(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CNumber$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = 0;\r\n    matchValue = [tryParse_3(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CDecimal$007C_$007C(input) {\r\n    let matchValue;\r\n    let outArg = new Decimal(0);\r\n    matchValue = [tryParse_4(input, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Route_$007CBool$007C_$007C(input) {\r\n    const matchValue = input.toLocaleLowerCase();\r\n    switch (matchValue) {\r\n        case \"1\":\r\n        case \"true\": {\r\n            return true;\r\n        }\r\n        case \"0\":\r\n        case \"false\": {\r\n            return false;\r\n        }\r\n        case \"\": {\r\n            return true;\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Route_$007CQuery$007C_$007C(input) {\r\n    try {\r\n        const urlParams = new URLSearchParams(input);\r\n        return ofSeq(delay(() => map_1((entry) => [entry[0], entry[1]], urlParams.entries())));\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","import { Record, Union } from \"../Client/.fable/fable-library.3.1.2/Types.js\";\r\nimport { lambda_type, list_type, record_type, string_type, class_type, union_type } from \"../Client/.fable/fable-library.3.1.2/Reflection.js\";\r\nimport { toString, parse, newGuid } from \"../Client/.fable/fable-library.3.1.2/Guid.js\";\r\nimport { filter, length } from \"../Client/.fable/fable-library.3.1.2/List.js\";\r\nimport { equals } from \"../Client/.fable/fable-library.3.1.2/Util.js\";\r\nimport { printf, toText } from \"../Client/.fable/fable-library.3.1.2/String.js\";\r\nimport { FSharpResult$2 } from \"../Client/.fable/fable-library.3.1.2/Choice.js\";\r\n\r\nexport class Domain_CardValue extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Zero\", \"Halve\", \"One\", \"Two\", \"Three\", \"Five\", \"Eight\", \"Thirtheen\", \"Twenty\", \"Fourty\", \"Hundred\", \"Coffee\", \"Stop\", \"IDontKnow\"];\r\n    }\r\n}\r\n\r\nexport function Domain_CardValue$reflection() {\r\n    return union_type(\"Shared.Domain.CardValue\", [], Domain_CardValue, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], []]);\r\n}\r\n\r\nexport class Domain_Card extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Card\"];\r\n    }\r\n}\r\n\r\nexport function Domain_Card$reflection() {\r\n    return union_type(\"Shared.Domain.Card\", [], Domain_Card, () => [[[\"Item\", Domain_CardValue$reflection()]]]);\r\n}\r\n\r\nexport function Domain_CardModule_create(value) {\r\n    return new Domain_Card(0, value);\r\n}\r\n\r\nexport function Domain_CardModule_extract(_arg1) {\r\n    return _arg1.fields[0];\r\n}\r\n\r\nexport class Domain_Player extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Player\"];\r\n    }\r\n}\r\n\r\nexport function Domain_Player$reflection() {\r\n    return union_type(\"Shared.Domain.Player\", [], Domain_Player, () => [[[\"id\", class_type(\"System.Guid\")], [\"name\", string_type]]]);\r\n}\r\n\r\nexport function Domain_PlayerModule_create(name) {\r\n    return new Domain_Player(0, newGuid(), name);\r\n}\r\n\r\nexport function Domain_PlayerModule_build(id, name) {\r\n    return new Domain_Player(0, parse(id), name);\r\n}\r\n\r\nexport function Domain_PlayerModule_extract(_arg1) {\r\n    return [_arg1.fields[0], _arg1.fields[1]];\r\n}\r\n\r\nexport function Domain_PlayerModule_$007CExtractPlayerInfo$007C(_arg1) {\r\n    return [_arg1.fields[0], _arg1.fields[1]];\r\n}\r\n\r\nexport class Domain_GameId extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"GameId\"];\r\n    }\r\n}\r\n\r\nexport function Domain_GameId$reflection() {\r\n    return union_type(\"Shared.Domain.GameId\", [], Domain_GameId, () => [[[\"Item\", string_type]]]);\r\n}\r\n\r\nexport function Domain_GameIdModule_create(id) {\r\n    return new Domain_GameId(0, id);\r\n}\r\n\r\nexport function Domain_GameIdModule_extract(_arg1) {\r\n    return _arg1.fields[0];\r\n}\r\n\r\nexport function Domain_GameIdModule_$007CGetGameId$007C(_arg1) {\r\n    return _arg1.fields[0];\r\n}\r\n\r\nexport class Domain_Game extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Game\"];\r\n    }\r\n}\r\n\r\nexport function Domain_Game$reflection() {\r\n    return union_type(\"Shared.Domain.Game\", [], Domain_Game, () => [[[\"id\", Domain_GameId$reflection()], [\"admin\", Domain_Player$reflection()]]]);\r\n}\r\n\r\nexport function Domain_GameModule_create(admin) {\r\n    let copyOfStruct;\r\n    return new Domain_Game(0, Domain_GameIdModule_create((copyOfStruct = newGuid(), toString(copyOfStruct, \"N\"))), admin);\r\n}\r\n\r\nexport function Domain_GameModule_extract(_arg1) {\r\n    return [_arg1.fields[0], _arg1.fields[1]];\r\n}\r\n\r\nexport function Domain_GameModule_$007CGetGameAdmin$007C_$007C(game) {\r\n    return Domain_GameModule_extract(game)[1];\r\n}\r\n\r\nexport function Domain_GameModule_$007CGetGameId$007C_$007C(game) {\r\n    return Domain_GameModule_extract(game)[0];\r\n}\r\n\r\nexport class Domain_InGameState extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Beginning\", \"InRound\", \"DisplayResult\"];\r\n    }\r\n}\r\n\r\nexport function Domain_InGameState$reflection() {\r\n    return union_type(\"Shared.Domain.InGameState\", [], Domain_InGameState, () => [[], [], []]);\r\n}\r\n\r\nexport class Domain_PlayedCard extends Record {\r\n    constructor(Player, Card) {\r\n        super();\r\n        this.Player = Player;\r\n        this.Card = Card;\r\n    }\r\n}\r\n\r\nexport function Domain_PlayedCard$reflection() {\r\n    return record_type(\"Shared.Domain.PlayedCard\", [], Domain_PlayedCard, () => [[\"Player\", Domain_Player$reflection()], [\"Card\", Domain_Card$reflection()]]);\r\n}\r\n\r\nexport class Domain_InGameModel extends Record {\r\n    constructor(Game, State, Players, PlayedCards) {\r\n        super();\r\n        this.Game = Game;\r\n        this.State = State;\r\n        this.Players = Players;\r\n        this.PlayedCards = PlayedCards;\r\n    }\r\n}\r\n\r\nexport function Domain_InGameModel$reflection() {\r\n    return record_type(\"Shared.Domain.InGameModel\", [], Domain_InGameModel, () => [[\"Game\", Domain_Game$reflection()], [\"State\", Domain_InGameState$reflection()], [\"Players\", list_type(Domain_Player$reflection())], [\"PlayedCards\", list_type(Domain_PlayedCard$reflection())]]);\r\n}\r\n\r\nexport class Domain_GameModel extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Start\", \"InGame\", \"GameEnded\"];\r\n    }\r\n}\r\n\r\nexport function Domain_GameModel$reflection() {\r\n    return union_type(\"Shared.Domain.GameModel\", [], Domain_GameModel, () => [[], [[\"Item\", Domain_InGameModel$reflection()]], [[\"Item\", Domain_GameId$reflection()]]]);\r\n}\r\n\r\nexport function Domain_GameModelModule_$007CGotGameAdmin$007C_$007C(gameModel) {\r\n    let pattern_matching_result, admin;\r\n    if (gameModel.tag === 1) {\r\n        const activePatternResult39272 = Domain_GameModule_$007CGetGameAdmin$007C_$007C(gameModel.fields[0].Game);\r\n        if (activePatternResult39272 != null) {\r\n            pattern_matching_result = 0;\r\n            admin = activePatternResult39272;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return admin;\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Domain_GameModelModule_$007CGotGameId$007C_$007C(gameModel) {\r\n    let pattern_matching_result, gameId;\r\n    if (gameModel.tag === 1) {\r\n        const activePatternResult39274 = Domain_GameModule_$007CGetGameId$007C_$007C(gameModel.fields[0].Game);\r\n        if (activePatternResult39274 != null) {\r\n            pattern_matching_result = 0;\r\n            gameId = activePatternResult39274;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return gameId;\r\n        }\r\n        case 1: {\r\n            if (gameModel.tag === 2) {\r\n                return gameModel.fields[0];\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Domain_GameModelModule_$007CGotPlayers$007C_$007C(gameModel) {\r\n    if (gameModel.tag === 1) {\r\n        return gameModel.fields[0].Players;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function Domain_GameModelModule_countPlayeredCards(cardValue, gameModel) {\r\n    if (gameModel.tag === 1) {\r\n        return length(filter((pc) => equals(Domain_CardModule_extract(pc.Card), cardValue), gameModel.fields[0].PlayedCards)) | 0;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nexport class Domain_Msg extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"CreateGame\", \"EndGame\", \"JoinGame\", \"LeaveGame\", \"StartRound\", \"FinishRound\", \"PlayCard\"];\r\n    }\r\n}\r\n\r\nexport function Domain_Msg$reflection() {\r\n    return union_type(\"Shared.Domain.Msg\", [], Domain_Msg, () => [[[\"admin\", Domain_Player$reflection()]], [], [[\"player\", Domain_Player$reflection()]], [[\"player\", Domain_Player$reflection()]], [], [], [[\"card\", Domain_Card$reflection()]]]);\r\n}\r\n\r\nexport const Route_builder = (() => {\r\n    const clo1 = toText(printf(\"/api/%s/%s\"));\r\n    return (arg10) => {\r\n        const clo2 = clo1(arg10);\r\n        return clo2;\r\n    };\r\n})();\r\n\r\nexport class Api_IPokerApi extends Record {\r\n    constructor(getState, createGame, endGame, joinGame, leaveGame, startRound, finishRound, playCard) {\r\n        super();\r\n        this.getState = getState;\r\n        this.createGame = createGame;\r\n        this.endGame = endGame;\r\n        this.joinGame = joinGame;\r\n        this.leaveGame = leaveGame;\r\n        this.startRound = startRound;\r\n        this.finishRound = finishRound;\r\n        this.playCard = playCard;\r\n    }\r\n}\r\n\r\nexport function Api_IPokerApi$reflection() {\r\n    return record_type(\"Shared.Api.IPokerApi\", [], Api_IPokerApi, () => [[\"getState\", lambda_type(Domain_GameId$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])]))], [\"createGame\", lambda_type(Domain_Player$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])]))], [\"endGame\", lambda_type(Domain_GameId$reflection(), lambda_type(Domain_Player$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])])))], [\"joinGame\", lambda_type(Domain_GameId$reflection(), lambda_type(Domain_Player$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])])))], [\"leaveGame\", lambda_type(Domain_GameId$reflection(), lambda_type(Domain_Player$reflection(), lambda_type(Domain_Player$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])]))))], [\"startRound\", lambda_type(Domain_GameId$reflection(), lambda_type(Domain_Player$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])])))], [\"finishRound\", lambda_type(Domain_GameId$reflection(), lambda_type(Domain_Player$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])])))], [\"playCard\", lambda_type(Domain_GameId$reflection(), lambda_type(Domain_Player$reflection(), lambda_type(Domain_Card$reflection(), class_type(\"Microsoft.FSharp.Control.FSharpAsync`1\", [union_type(\"Microsoft.FSharp.Core.FSharpResult`2\", [Domain_GameModel$reflection(), string_type], FSharpResult$2, () => [[[\"ResultValue\", Domain_GameModel$reflection()]], [[\"ErrorValue\", string_type]]])]))))]]);\r\n}\r\n\r\n","import { Record, Union } from \"./.fable/fable-library.3.1.2/Types.js\";\r\nimport { list_type, record_type, class_type, bool_type, string_type, option_type, union_type } from \"./.fable/fable-library.3.1.2/Reflection.js\";\r\nimport { Domain_Msg$reflection, Domain_Player$reflection, Domain_GameId$reflection, Domain_GameModel$reflection } from \"../Shared/Shared.fs.js\";\r\n\r\nexport class Theme extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Dark\", \"Light\"];\r\n    }\r\n}\r\n\r\nexport function Theme$reflection() {\r\n    return union_type(\"Models.Theme\", [], Theme, () => [[], []]);\r\n}\r\n\r\nexport class Model extends Record {\r\n    constructor(Theme, CurrentGameState, GameId, CurrentPlayer, Name, Id, Error$, IsLoading, WebSocket) {\r\n        super();\r\n        this.Theme = Theme;\r\n        this.CurrentGameState = CurrentGameState;\r\n        this.GameId = GameId;\r\n        this.CurrentPlayer = CurrentPlayer;\r\n        this.Name = Name;\r\n        this.Id = Id;\r\n        this.Error = Error$;\r\n        this.IsLoading = IsLoading;\r\n        this.WebSocket = WebSocket;\r\n    }\r\n}\r\n\r\nexport function Model$reflection() {\r\n    return record_type(\"Models.Model\", [], Model, () => [[\"Theme\", Theme$reflection()], [\"CurrentGameState\", Domain_GameModel$reflection()], [\"GameId\", option_type(Domain_GameId$reflection())], [\"CurrentPlayer\", option_type(Domain_Player$reflection())], [\"Name\", string_type], [\"Id\", string_type], [\"Error\", string_type], [\"IsLoading\", bool_type], [\"WebSocket\", option_type(class_type(\"Browser.Types.WebSocket\"))]]);\r\n}\r\n\r\nexport class Msg extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"CreateGame\", \"JoinGame\", \"GameMsg\", \"ChangeName\", \"ChangeId\", \"SetGameId\", \"LoadState\", \"SetCurrentGameState\", \"SetCurrentPlayer\", \"ConnectToWebSocket\", \"SetWebSocketHandler\", \"DisconnectWebSocket\", \"OnError\", \"ClearError\", \"ToggleTheme\", \"IsLoading\", \"Navigate\", \"SetCookies\", \"ReInit\", \"Reset\"];\r\n    }\r\n}\r\n\r\nexport function Msg$reflection() {\r\n    return union_type(\"Models.Msg\", [], Msg, () => [[], [], [[\"Item\", Domain_Msg$reflection()]], [[\"Item\", string_type]], [[\"Item\", string_type]], [[\"Item\", Domain_GameId$reflection()]], [], [[\"Item\", Domain_GameModel$reflection()]], [[\"Item\", Domain_Player$reflection()]], [[\"Item\", Domain_GameId$reflection()]], [[\"Item\", class_type(\"Browser.Types.WebSocket\")]], [], [[\"Item\", string_type]], [], [], [[\"Item\", bool_type]], [[\"Item\", list_type(string_type)]], [], [[\"Item\", list_type(string_type)]], []]);\r\n}\r\n\r\n","import * as js$002Dcookie from \"js-cookie\";\r\nimport { ofArray } from \"./.fable/fable-library.3.1.2/List.js\";\r\nimport { interpolate, toText, split } from \"./.fable/fable-library.3.1.2/String.js\";\r\nimport { Domain_GameIdModule_$007CGetGameId$007C, Domain_GameIdModule_create, Domain_PlayerModule_$007CExtractPlayerInfo$007C, Domain_PlayerModule_build } from \"../Shared/Shared.fs.js\";\r\nimport { bind, map } from \"./.fable/fable-library.3.1.2/Option.js\";\r\n\r\nconst JsCookie_imported = js$002Dcookie;\r\n\r\nexport const JsCookie_get = (arg00) => JsCookie_imported.get(arg00);\r\n\r\nexport function JsCookie_set() {\r\n    return (arg00) => ((arg10) => ((arg20) => {\r\n        JsCookie_imported.set(arg00, arg10, arg20);\r\n    }));\r\n}\r\n\r\nexport const JsCookie_remove = (arg00) => {\r\n    JsCookie_imported.remove(arg00);\r\n};\r\n\r\nfunction playerFromStr(str) {\r\n    const s = ofArray(split(str, [\"|\"], null, 0));\r\n    let pattern_matching_result, id, name;\r\n    if (s.tail != null) {\r\n        if (s.tail.tail != null) {\r\n            if (s.tail.tail.tail == null) {\r\n                pattern_matching_result = 0;\r\n                id = s.tail.head;\r\n                name = s.head;\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return Domain_PlayerModule_build(id, name);\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nfunction playerToStr(_arg1) {\r\n    const activePatternResult39341 = Domain_PlayerModule_$007CExtractPlayerInfo$007C(_arg1);\r\n    return toText(interpolate(\"%P()|%P()\", [activePatternResult39341[1], activePatternResult39341[0]]));\r\n}\r\n\r\nexport function getGameId() {\r\n    return map(Domain_GameIdModule_create, JsCookie_get(\"current-game\"));\r\n}\r\n\r\nexport function getCurrentPlayer() {\r\n    return bind(playerFromStr, JsCookie_get(\"current-player\"));\r\n}\r\n\r\nexport function setGameId(_arg1) {\r\n    const activePatternResult39345 = Domain_GameIdModule_$007CGetGameId$007C(_arg1);\r\n    JsCookie_set()(\"current-game\")(activePatternResult39345)({\r\n        expires: 1,\r\n    });\r\n}\r\n\r\nexport function setCurrentPlayer(player) {\r\n    JsCookie_set()(\"current-player\")(playerToStr(player))({\r\n        expires: 1,\r\n    });\r\n}\r\n\r\nexport function removeAllCookies() {\r\n    JsCookie_remove(\"current-game\");\r\n    JsCookie_remove(\"current-player\");\r\n}\r\n\r\n","import { Exception, Record, Union } from \"../fable-library.3.1.2/Types.js\";\r\nimport { class_type, lambda_type, option_type, int32_type, record_type, bool_type, list_type, tuple_type, array_type, uint8_type, string_type, union_type } from \"../fable-library.3.1.2/Reflection.js\";\r\n\r\nexport class HttpMethod extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"GET\", \"POST\"];\r\n    }\r\n}\r\n\r\nexport function HttpMethod$reflection() {\r\n    return union_type(\"Fable.Remoting.Client.HttpMethod\", [], HttpMethod, () => [[], []]);\r\n}\r\n\r\nexport class RequestBody extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Empty\", \"Json\", \"Binary\"];\r\n    }\r\n}\r\n\r\nexport function RequestBody$reflection() {\r\n    return union_type(\"Fable.Remoting.Client.RequestBody\", [], RequestBody, () => [[], [[\"Item\", string_type]], [[\"Item\", array_type(uint8_type)]]]);\r\n}\r\n\r\nexport class SerializationType extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Json\", \"MessagePack\"];\r\n    }\r\n}\r\n\r\nexport function SerializationType$reflection() {\r\n    return union_type(\"Fable.Remoting.Client.SerializationType\", [], SerializationType, () => [[], []]);\r\n}\r\n\r\nexport class HttpRequest extends Record {\r\n    constructor(HttpMethod, Url, Headers, RequestBody, WithCredentials) {\r\n        super();\r\n        this.HttpMethod = HttpMethod;\r\n        this.Url = Url;\r\n        this.Headers = Headers;\r\n        this.RequestBody = RequestBody;\r\n        this.WithCredentials = WithCredentials;\r\n    }\r\n}\r\n\r\nexport function HttpRequest$reflection() {\r\n    return record_type(\"Fable.Remoting.Client.HttpRequest\", [], HttpRequest, () => [[\"HttpMethod\", HttpMethod$reflection()], [\"Url\", string_type], [\"Headers\", list_type(tuple_type(string_type, string_type))], [\"RequestBody\", RequestBody$reflection()], [\"WithCredentials\", bool_type]]);\r\n}\r\n\r\nexport class HttpResponse extends Record {\r\n    constructor(StatusCode, ResponseBody) {\r\n        super();\r\n        this.StatusCode = (StatusCode | 0);\r\n        this.ResponseBody = ResponseBody;\r\n    }\r\n}\r\n\r\nexport function HttpResponse$reflection() {\r\n    return record_type(\"Fable.Remoting.Client.HttpResponse\", [], HttpResponse, () => [[\"StatusCode\", int32_type], [\"ResponseBody\", string_type]]);\r\n}\r\n\r\nexport class RemoteBuilderOptions extends Record {\r\n    constructor(CustomHeaders, BaseUrl, Authorization, WithCredentials, RouteBuilder, ResponseSerialization) {\r\n        super();\r\n        this.CustomHeaders = CustomHeaders;\r\n        this.BaseUrl = BaseUrl;\r\n        this.Authorization = Authorization;\r\n        this.WithCredentials = WithCredentials;\r\n        this.RouteBuilder = RouteBuilder;\r\n        this.ResponseSerialization = ResponseSerialization;\r\n    }\r\n}\r\n\r\nexport function RemoteBuilderOptions$reflection() {\r\n    return record_type(\"Fable.Remoting.Client.RemoteBuilderOptions\", [], RemoteBuilderOptions, () => [[\"CustomHeaders\", list_type(tuple_type(string_type, string_type))], [\"BaseUrl\", option_type(string_type)], [\"Authorization\", option_type(string_type)], [\"WithCredentials\", bool_type], [\"RouteBuilder\", lambda_type(string_type, lambda_type(string_type, string_type))], [\"ResponseSerialization\", SerializationType$reflection()]]);\r\n}\r\n\r\nexport class ProxyRequestException extends Exception {\r\n    constructor(response, errorMsg, reponseText) {\r\n        super(errorMsg);\r\n        this.response = response;\r\n        this.reponseText = reponseText;\r\n    }\r\n}\r\n\r\nexport function ProxyRequestException$reflection() {\r\n    return class_type(\"Fable.Remoting.Client.ProxyRequestException\", void 0, ProxyRequestException, class_type(\"System.Exception\"));\r\n}\r\n\r\nexport function ProxyRequestException_$ctor_76BC5104(response, errorMsg, reponseText) {\r\n    return new ProxyRequestException(response, errorMsg, reponseText);\r\n}\r\n\r\nexport function ProxyRequestException__get_Response(this$) {\r\n    return this$.response;\r\n}\r\n\r\nexport function ProxyRequestException__get_StatusCode(this$) {\r\n    return this$.response.StatusCode;\r\n}\r\n\r\nexport function ProxyRequestException__get_ResponseText(this$) {\r\n    return this$.reponseText;\r\n}\r\n\r\n","import { fromContinuations } from \"../fable-library.3.1.2/Async.js\";\r\nimport { class_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { isNullOrWhiteSpace } from \"../fable-library.3.1.2/String.js\";\r\n\r\nexport function InternalUtilities_toUInt8Array(data) {\r\n    if (data instanceof Uint8Array) {\r\n        return data;\r\n    }\r\n    else {\r\n        return new Uint8Array(data);\r\n    }\r\n}\r\n\r\nexport function Browser_Types_File__File_ReadAsByteArray(instance) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg1) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](new Uint8Array(reader.result));\r\n            }\r\n        });\r\n        reader.readAsArrayBuffer(instance);\r\n    });\r\n}\r\n\r\nexport function Browser_Types_File__File_ReadAsDataUrl(instance) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg4) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsDataURL(instance);\r\n    });\r\n}\r\n\r\nexport function Browser_Types_File__File_ReadAsText(instance) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg7) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsText(instance);\r\n    });\r\n}\r\n\r\nexport class ByteArrayExtensions {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function ByteArrayExtensions$reflection() {\r\n    return class_type(\"Fable.Remoting.Client.ByteArrayExtensions\", void 0, ByteArrayExtensions);\r\n}\r\n\r\nexport function ByteArrayExtensions_SaveFileAs_72B26259(content, fileName) {\r\n    if (isNullOrWhiteSpace(fileName)) {\r\n    }\r\n    else {\r\n        const binaryData = InternalUtilities_toUInt8Array(content);\r\n        const blob = new Blob([binaryData.buffer], { type: \"application/octet-stream\" });\r\n        const dataUrl = window.URL.createObjectURL(blob);\r\n        const anchor = document.createElement(\"a\");\r\n        anchor.style = \"display: none\";\r\n        anchor.href = dataUrl;\r\n        anchor.download = fileName;\r\n        anchor.rel = \"noopener\";\r\n        anchor.click();\r\n        anchor.remove();\r\n        const value = window.setTimeout(() => {\r\n            URL.revokeObjectURL(dataUrl);\r\n        }, 40 * 1000);\r\n        void value;\r\n    }\r\n}\r\n\r\nexport function ByteArrayExtensions_SaveFileAs_451DD142(content, fileName, mimeType) {\r\n    if (isNullOrWhiteSpace(fileName)) {\r\n    }\r\n    else {\r\n        const binaryData = InternalUtilities_toUInt8Array(content);\r\n        const blob = new Blob([binaryData.buffer], { type: mimeType });\r\n        const dataUrl = window.URL.createObjectURL(blob);\r\n        const anchor = document.createElement(\"a\");\r\n        anchor.style = \"display: none\";\r\n        anchor.href = dataUrl;\r\n        anchor.download = fileName;\r\n        anchor.rel = \"noopener\";\r\n        anchor.click();\r\n        anchor.remove();\r\n        const value = window.setTimeout(() => {\r\n            URL.revokeObjectURL(dataUrl);\r\n        }, 40 * 1000);\r\n        void value;\r\n    }\r\n}\r\n\r\nexport function ByteArrayExtensions_AsDataUrl_6C95DA22(content) {\r\n    const binaryData = InternalUtilities_toUInt8Array(content);\r\n    const blob = new Blob([binaryData.buffer], { type: \"application/octet-stream\" });\r\n    return window.URL.createObjectURL(blob);\r\n}\r\n\r\nexport function ByteArrayExtensions_AsDataUrl_72B26259(content, mimeType) {\r\n    const binaryData = InternalUtilities_toUInt8Array(content);\r\n    const blob = new Blob([binaryData.buffer], { type: mimeType });\r\n    return window.URL.createObjectURL(blob);\r\n}\r\n\r\n","import { HttpResponse, HttpRequest, RequestBody, HttpMethod as HttpMethod_1 } from \"./Types.fs.js\";\r\nimport { empty } from \"../fable-library.3.1.2/List.js\";\r\nimport { fromContinuations } from \"../fable-library.3.1.2/Async.js\";\r\nimport { getEnumerator } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { some } from \"../fable-library.3.1.2/Option.js\";\r\nimport { InternalUtilities_toUInt8Array } from \"./Extensions.fs.js\";\r\n\r\nconst defaultRequestConfig = new HttpRequest(new HttpMethod_1(0), \"/\", empty(), new RequestBody(0), false);\r\n\r\nexport function get$(url) {\r\n    return new HttpRequest(new HttpMethod_1(0), url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\r\n}\r\n\r\nexport function post(url) {\r\n    return new HttpRequest(new HttpMethod_1(1), url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\r\n}\r\n\r\nexport function request(method, url) {\r\n    return new HttpRequest(method, url, defaultRequestConfig.Headers, defaultRequestConfig.RequestBody, defaultRequestConfig.WithCredentials);\r\n}\r\n\r\nexport function withHeaders(headers, req) {\r\n    return new HttpRequest(req.HttpMethod, req.Url, headers, req.RequestBody, req.WithCredentials);\r\n}\r\n\r\nexport function withCredentials(withCredentials_1, req) {\r\n    return new HttpRequest(req.HttpMethod, req.Url, req.Headers, req.RequestBody, withCredentials_1);\r\n}\r\n\r\nexport function withBody(body, req) {\r\n    return new HttpRequest(req.HttpMethod, req.Url, req.Headers, body, req.WithCredentials);\r\n}\r\n\r\nexport function send(req) {\r\n    return fromContinuations((tupledArg) => {\r\n        const xhr = new XMLHttpRequest();\r\n        if (req.HttpMethod.tag === 1) {\r\n            xhr.open(\"POST\", req.Url);\r\n        }\r\n        else {\r\n            xhr.open(\"GET\", req.Url);\r\n        }\r\n        const enumerator = getEnumerator(req.Headers);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                xhr.setRequestHeader(forLoopVar[0], forLoopVar[1]);\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        xhr.withCredentials = true;\r\n        xhr.onreadystatechange = (() => {\r\n            if (xhr.readyState === 4) {\r\n                tupledArg[0](new HttpResponse(xhr.status, xhr.responseText));\r\n            }\r\n            else {\r\n                void undefined;\r\n            }\r\n        });\r\n        const matchValue_4 = req.RequestBody;\r\n        switch (matchValue_4.tag) {\r\n            case 1: {\r\n                xhr.send(some(matchValue_4.fields[0]));\r\n                break;\r\n            }\r\n            case 2: {\r\n                xhr.send(some(InternalUtilities_toUInt8Array(matchValue_4.fields[0])));\r\n                break;\r\n            }\r\n            default: {\r\n                xhr.send();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function sendAndReadBinary(req) {\r\n    return fromContinuations((tupledArg) => {\r\n        const xhr = new XMLHttpRequest();\r\n        if (req.HttpMethod.tag === 1) {\r\n            xhr.open(\"POST\", req.Url);\r\n        }\r\n        else {\r\n            xhr.open(\"GET\", req.Url);\r\n        }\r\n        xhr.responseType = \"arraybuffer\";\r\n        const enumerator = getEnumerator(req.Headers);\r\n        try {\r\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                xhr.setRequestHeader(forLoopVar[0], forLoopVar[1]);\r\n            }\r\n        }\r\n        finally {\r\n            enumerator.Dispose();\r\n        }\r\n        xhr.withCredentials = req.WithCredentials;\r\n        xhr.onreadystatechange = (() => {\r\n            if (xhr.readyState === 4) {\r\n                tupledArg[0]([new Uint8Array(xhr.response), xhr.status]);\r\n            }\r\n            else {\r\n                void undefined;\r\n            }\r\n        });\r\n        const matchValue_4 = req.RequestBody;\r\n        switch (matchValue_4.tag) {\r\n            case 1: {\r\n                xhr.send(some(matchValue_4.fields[0]));\r\n                break;\r\n            }\r\n            case 2: {\r\n                xhr.send(some(InternalUtilities_toUInt8Array(matchValue_4.fields[0])));\r\n                break;\r\n            }\r\n            default: {\r\n                xhr.send();\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n","// tslint:disable:max-line-length\nimport { fromNumber, op_Division, op_Multiply, toNumber } from \"./Long.js\";\nimport { comparePrimitives, padLeftAndRightWithZeros, padWithZeros } from \"./Util.js\";\n// TimeSpan in runtime just becomes a number representing milliseconds\n/**\n * Calls:\n * - `Math.ceil` if the `value` is **negative**\n * - `Math.floor` if the `value` is **positive**\n * @param value Value to round\n */\nfunction signedRound(value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n}\nexport function create(d = 0, h = 0, m = 0, s = 0, ms = 0) {\n    switch (arguments.length) {\n        case 1:\n            // ticks\n            return fromTicks(arguments[0]);\n        case 3:\n            // h,m,s\n            d = 0, h = arguments[0], m = arguments[1], s = arguments[2], ms = 0;\n            break;\n        default:\n            // d,h,m,s,ms\n            break;\n    }\n    return d * 86400000 + h * 3600000 + m * 60000 + s * 1000 + ms;\n}\nexport function fromTicks(ticks) {\n    return toNumber(op_Division(ticks, 10000));\n}\nexport function fromDays(d) {\n    return create(d, 0, 0, 0);\n}\nexport function fromHours(h) {\n    return create(h, 0, 0);\n}\nexport function fromMinutes(m) {\n    return create(0, m, 0);\n}\nexport function fromSeconds(s) {\n    return create(0, 0, s);\n}\nexport function days(ts) {\n    return signedRound(ts / 86400000);\n}\nexport function hours(ts) {\n    return signedRound(ts % 86400000 / 3600000);\n}\nexport function minutes(ts) {\n    return signedRound(ts % 3600000 / 60000);\n}\nexport function seconds(ts) {\n    return signedRound(ts % 60000 / 1000);\n}\nexport function milliseconds(ts) {\n    return signedRound(ts % 1000);\n}\nexport function ticks(ts) {\n    return op_Multiply(fromNumber(ts), 10000);\n}\nexport function totalDays(ts) {\n    return ts / 86400000;\n}\nexport function totalHours(ts) {\n    return ts / 3600000;\n}\nexport function totalMinutes(ts) {\n    return ts / 60000;\n}\nexport function totalSeconds(ts) {\n    return ts / 1000;\n}\nexport function negate(ts) {\n    return ts * -1;\n}\nexport function add(ts1, ts2) {\n    return ts1 + ts2;\n}\nexport function subtract(ts1, ts2) {\n    return ts1 - ts2;\n}\nexport const op_Addition = add;\nexport const op_Subtraction = subtract;\nexport const compare = comparePrimitives;\nexport const compareTo = comparePrimitives;\nexport function duration(x) {\n    return Math.abs(x);\n}\nexport function toString(ts, format = \"c\", _provider) {\n    if ([\"c\", \"g\", \"G\"].indexOf(format) === -1) {\n        throw new Error(\"Custom formats are not supported\");\n    }\n    const d = Math.abs(days(ts));\n    const h = Math.abs(hours(ts));\n    const m = Math.abs(minutes(ts));\n    const s = Math.abs(seconds(ts));\n    const ms = Math.abs(milliseconds(ts));\n    const sign = ts < 0 ? \"-\" : \"\";\n    return `${sign}${d === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"c\" ? d + \".\" : d + \":\"}${format === \"g\" ? h : padWithZeros(h, 2)}:${padWithZeros(m, 2)}:${padWithZeros(s, 2)}${ms === 0 && (format === \"c\" || format === \"g\") ? \"\" : format === \"g\" ? \".\" + padWithZeros(ms, 3) : \".\" + padLeftAndRightWithZeros(ms, 3, 7)}`;\n}\nexport function parse(str) {\n    const firstDot = str.search(\"\\\\.\");\n    const firstColon = str.search(\"\\\\:\");\n    if (firstDot === -1 && firstColon === -1) { // There is only a day ex: 4\n        const d = parseInt(str, 0);\n        if (isNaN(d)) {\n            throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n        }\n        else {\n            return create(d, 0, 0, 0, 0);\n        }\n    }\n    if (firstColon > 0) { // process time part\n        // WIP: (-?)(((\\d+)\\.)?([0-9]|0[0-9]|1[0-9]|2[0-3]):(\\d+)(:\\d+(\\.\\d{1,7})?)?|\\d+(?:(?!\\.)))\n        const r = /^(-?)((\\d+)\\.)?(?:0*)([0-9]|0[0-9]|1[0-9]|2[0-3]):(?:0*)([0-5][0-9]|[0-9])(:(?:0*)([0-5][0-9]|[0-9]))?\\.?(\\d+)?$/.exec(str);\n        if (r != null && r[4] != null && r[5] != null) {\n            let d = 0;\n            let ms = 0;\n            let s = 0;\n            const sign = r[1] != null && r[1] === \"-\" ? -1 : 1;\n            const h = +r[4];\n            const m = +r[5];\n            if (r[3] != null) {\n                d = +r[3];\n            }\n            if (r[7] != null) {\n                s = +r[7];\n            }\n            if (r[8] != null) {\n                // Depending on the number of decimals passed, we need to adapt the numbers\n                switch (r[8].length) {\n                    case 1:\n                        ms = +r[8] * 100;\n                        break;\n                    case 2:\n                        ms = +r[8] * 10;\n                        break;\n                    case 3:\n                        ms = +r[8];\n                        break;\n                    case 4:\n                        ms = +r[8] / 10;\n                        break;\n                    case 5:\n                        ms = +r[8] / 100;\n                        break;\n                    case 6:\n                        ms = +r[8] / 1000;\n                        break;\n                    case 7:\n                        ms = +r[8] / 10000;\n                        break;\n                    default:\n                        throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n                }\n            }\n            return sign * create(d, h, m, s, ms);\n        }\n    }\n    throw new Error(`String '${str}' was not recognized as a valid TimeSpan.`);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n","import { float64_type, float32_type, isEnum, int8_type, fullName, uint16_type, uint32_type, array_type, uint8_type, int16_type, getTupleElements, makeTuple, isTuple, getElementType, isArray, list_type, option_type, isGenericType, makeUnion, getUnionCaseFields, getUnionCases, int32_type, isUnion, getRecordElements, makeRecord, isRecord, obj_type, getGenericTypeDefinition, equals, name, getGenerics, class_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { get_UTF8 } from \"../fable-library.3.1.2/Encoding.js\";\r\nimport { isLittleEndian, toDouble, toSingle, toInt64, toUInt64, toInt32, toUInt32, toInt16, toUInt16 } from \"../fable-library.3.1.2/BitConverter.js\";\r\nimport { printf, toFail } from \"../fable-library.3.1.2/String.js\";\r\nimport { head, map, fill } from \"../fable-library.3.1.2/Array.js\";\r\nimport { Dictionary } from \"../fable-library.3.1.2/MutableMap.js\";\r\nimport { compare, structuralHash, equals as equals_1 } from \"../fable-library.3.1.2/Util.js\";\r\nimport { addToDict } from \"../fable-library.3.1.2/MapUtil.js\";\r\nimport { ofArray } from \"../fable-library.3.1.2/Map.js\";\r\nimport { FSharpSet__Add, empty } from \"../fable-library.3.1.2/Set.js\";\r\nimport { some } from \"../fable-library.3.1.2/Option.js\";\r\nimport { ofSeq } from \"../fable-library.3.1.2/List.js\";\r\nimport { rangeNumber, singleton, collect, delay } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { fromTicks } from \"../fable-library.3.1.2/DateOffset.js\";\r\nimport { fromTicks as fromTicks_2, fromMinutes } from \"../fable-library.3.1.2/TimeSpan.js\";\r\nimport { arrayToGuid } from \"../fable-library.3.1.2/Guid.js\";\r\nimport { fromByteArray } from \"../fable-library.3.1.2/BigInt.js\";\r\nimport { toNumber, fromValue, toInt, fromInteger } from \"../fable-library.3.1.2/Long.js\";\r\nimport { fromTicks as fromTicks_1 } from \"../fable-library.3.1.2/Date.js\";\r\nimport Decimal from \"../fable-library.3.1.2/Decimal.js\";\r\n\r\nexport function interpretStringAs(typ, str) {\r\n    return str;\r\n}\r\n\r\nexport class Reader {\r\n    constructor(data) {\r\n        this.data = data;\r\n        this.pos = 0;\r\n    }\r\n}\r\n\r\nexport function Reader$reflection() {\r\n    return class_type(\"Fable.Remoting.MsgPack.Read.Reader\", void 0, Reader);\r\n}\r\n\r\nexport function Reader_$ctor_6C95DA22(data) {\r\n    return new Reader(data);\r\n}\r\n\r\nexport function Reader__ReadByte(_) {\r\n    _.pos = (_.pos + 1);\r\n    return _.data[_.pos - 1];\r\n}\r\n\r\nexport function Reader__ReadRawBin_Z524259A4(_, len) {\r\n    _.pos = (_.pos + len);\r\n    return _.data.slice(_.pos - len, (_.pos - 1) + 1);\r\n}\r\n\r\nexport function Reader__ReadString_Z524259A4(_, len) {\r\n    _.pos = (_.pos + len);\r\n    return get_UTF8().getString(_.data, _.pos - len, len);\r\n}\r\n\r\nexport function Reader__ReadUInt8(x) {\r\n    return Reader__ReadByte(x);\r\n}\r\n\r\nexport function Reader__ReadInt8(x) {\r\n    const value = Reader__ReadByte(x);\r\n    return ((value + 0x80 & 0xFF) - 0x80) | 0;\r\n}\r\n\r\nexport function Reader__ReadUInt16(_) {\r\n    return Reader__readInt(_, 2, (tupledArg) => toUInt16(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadInt16(_) {\r\n    return Reader__readInt(_, 2, (tupledArg) => toInt16(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadUInt32(_) {\r\n    return Reader__readInt(_, 4, (tupledArg) => toUInt32(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadInt32(_) {\r\n    return Reader__readInt(_, 4, (tupledArg) => toInt32(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadUInt64(_) {\r\n    return Reader__readInt(_, 8, (tupledArg) => toUInt64(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadInt64(_) {\r\n    return Reader__readInt(_, 8, (tupledArg) => toInt64(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadFloat32(_) {\r\n    return Reader__readInt(_, 4, (tupledArg) => toSingle(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadFloat64(_) {\r\n    return Reader__readInt(_, 8, (tupledArg) => toDouble(tupledArg[0], tupledArg[1]));\r\n}\r\n\r\nexport function Reader__ReadMap_412036CA(x, len, t) {\r\n    const args = getGenerics(t);\r\n    if (args.length !== 2) {\r\n        const arg10 = name(t);\r\n        toFail(printf(\"Expecting %s, but the data contains a map.\"))(arg10);\r\n    }\r\n    let pairs;\r\n    const arr = fill(new Array(len), 0, len, null);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        arr[i] = [Reader__Read_24524716(x, args[0]), Reader__Read_24524716(x, args[1])];\r\n    }\r\n    pairs = arr;\r\n    if (equals(getGenericTypeDefinition(t), class_type(\"System.Collections.Generic.Dictionary`2\", [obj_type, obj_type]))) {\r\n        const dict = new Dictionary([], {\r\n            Equals: equals_1,\r\n            GetHashCode: structuralHash,\r\n        });\r\n        pairs.forEach((tupledArg) => {\r\n            addToDict(dict, tupledArg[0], tupledArg[1]);\r\n        });\r\n        return dict;\r\n    }\r\n    else {\r\n        return ofArray(pairs);\r\n    }\r\n}\r\n\r\nexport function Reader__ReadSet_412036CA(x, len, t) {\r\n    const args = getGenerics(t);\r\n    if (args.length !== 1) {\r\n        const arg10 = name(t);\r\n        toFail(printf(\"Expecting %s, but the data contains a set.\"))(arg10);\r\n    }\r\n    let set$ = empty({\r\n        Compare: compare,\r\n    });\r\n    for (let forLoopVar = 0; forLoopVar <= (len - 1); forLoopVar++) {\r\n        set$ = FSharpSet__Add(set$, Reader__Read_24524716(x, args[0]));\r\n    }\r\n    return set$;\r\n}\r\n\r\nexport function Reader__ReadRawArray_412036CA(x, len, elementType) {\r\n    const arr = fill(new Array(len), 0, len, null);\r\n    for (let i = 0; i <= (len - 1); i++) {\r\n        arr[i] = Reader__Read_24524716(x, elementType);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport function Reader__ReadArray_412036CA(x, len, t) {\r\n    let value;\r\n    if (isRecord(t)) {\r\n        return makeRecord(t, map((prop) => Reader__Read_24524716(x, prop[1]), getRecordElements(t)));\r\n    }\r\n    else if (isUnion(t, true)) {\r\n        const tag = Reader__Read_24524716(x, int32_type);\r\n        const case$ = getUnionCases(t, true).find((x_1) => (x_1.tag === tag));\r\n        const fieldTypes = map((x_2) => x_2[1], getUnionCaseFields(case$));\r\n        return makeUnion(case$, (fieldTypes.length === 1) ? [Reader__Read_24524716(x, fieldTypes[0])] : ((value = Reader__ReadByte(x), void value), map((arg00) => Reader__Read_24524716(x, arg00), fieldTypes)), true);\r\n    }\r\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), option_type(obj_type)) : false) {\r\n        if (Reader__ReadByte(x) === 0) {\r\n            const value_1 = Reader__ReadByte(x);\r\n            void value_1;\r\n            return null;\r\n        }\r\n        else {\r\n            return some(Reader__Read_24524716(x, head(getGenerics(t))));\r\n        }\r\n    }\r\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), list_type(obj_type)) : false) {\r\n        const elementType = head(getGenerics(t));\r\n        return ofSeq(delay(() => collect((matchValue) => singleton(Reader__Read_24524716(x, elementType)), rangeNumber(0, 1, len - 1))));\r\n    }\r\n    else if (isArray(t)) {\r\n        return Reader__ReadRawArray_412036CA(x, len, getElementType(t));\r\n    }\r\n    else if (isTuple(t)) {\r\n        return makeTuple(map((arg00_1) => Reader__Read_24524716(x, arg00_1), getTupleElements(t)), t);\r\n    }\r\n    else if (equals(t, class_type(\"System.DateTimeOffset\"))) {\r\n        return fromTicks(Reader__Read_24524716(x, class_type(\"System.Int64\")), fromMinutes(Reader__Read_24524716(x, int16_type)));\r\n    }\r\n    else if (isGenericType(t) ? equals(getGenericTypeDefinition(t), class_type(\"Microsoft.FSharp.Collections.FSharpSet`1\", [obj_type])) : false) {\r\n        return Reader__ReadSet_412036CA(x, len, t);\r\n    }\r\n    else {\r\n        const arg20 = x.pos | 0;\r\n        const arg10 = name(t);\r\n        return toFail(printf(\"Expecting %s at position %d, but the data contains an array.\"))(arg10)(arg20);\r\n    }\r\n}\r\n\r\nexport function Reader__ReadBin_412036CA(x, len, t) {\r\n    if (equals(t, class_type(\"System.Guid\"))) {\r\n        return arrayToGuid(Reader__ReadRawBin_Z524259A4(x, len));\r\n    }\r\n    else if (equals(t, array_type(uint8_type))) {\r\n        return Reader__ReadRawBin_Z524259A4(x, len);\r\n    }\r\n    else if (equals(t, class_type(\"System.Numerics.BigInteger\"))) {\r\n        return fromByteArray(Reader__ReadRawBin_Z524259A4(x, len));\r\n    }\r\n    else {\r\n        const arg20 = x.pos | 0;\r\n        const arg10 = name(t);\r\n        return toFail(printf(\"Expecting %s at position %d, but the data contains bin.\"))(arg10)(arg20);\r\n    }\r\n}\r\n\r\nexport function Reader__Read_24524716(x, t) {\r\n    const matchValue = Reader__ReadByte(x);\r\n    if ((matchValue | 31) === 191) {\r\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~(matchValue & 31))));\r\n    }\r\n    else if (matchValue === 217) {\r\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~Reader__ReadByte(x))));\r\n    }\r\n    else if (matchValue === 218) {\r\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~Reader__ReadUInt16(x))));\r\n    }\r\n    else if (matchValue === 219) {\r\n        return interpretStringAs(t, Reader__ReadString_Z524259A4(x, ~(~Reader__ReadUInt32(x))));\r\n    }\r\n    else if ((matchValue | 127) === 127) {\r\n        const typ = t;\r\n        const n = matchValue;\r\n        if (equals(typ, int32_type)) {\r\n            return ~(~n);\r\n        }\r\n        else if (equals(typ, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n, false, 4);\r\n        }\r\n        else if (equals(typ, int16_type)) {\r\n            return (n + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n, false, 4));\r\n        }\r\n        else if (equals(typ, uint32_type)) {\r\n            return n;\r\n        }\r\n        else if (equals(typ, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n, true, 4);\r\n        }\r\n        else if (equals(typ, uint16_type)) {\r\n            return n;\r\n        }\r\n        else if (equals(typ, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n, false, 4));\r\n        }\r\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (n + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return ~(~n);\r\n        }\r\n        else if (fullName(typ) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n, false, 4);\r\n        }\r\n        else if (equals(typ, uint8_type)) {\r\n            return n;\r\n        }\r\n        else if (equals(typ, int8_type)) {\r\n            return (n + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ)) {\r\n            return n;\r\n        }\r\n        else {\r\n            const arg20 = name(typ);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n)(arg20);\r\n        }\r\n    }\r\n    else if ((matchValue | 31) === 255) {\r\n        const typ_1 = t;\r\n        const n_2 = ((matchValue + 0x80 & 0xFF) - 0x80) | 0;\r\n        if (equals(typ_1, int32_type)) {\r\n            return n_2;\r\n        }\r\n        else if (equals(typ_1, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_2, false, 0);\r\n        }\r\n        else if (equals(typ_1, int16_type)) {\r\n            return n_2;\r\n        }\r\n        else if (equals(typ_1, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_2, false, 0));\r\n        }\r\n        else if (equals(typ_1, uint32_type)) {\r\n            return n_2 >>> 0;\r\n        }\r\n        else if (equals(typ_1, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_2, true, 0);\r\n        }\r\n        else if (equals(typ_1, uint16_type)) {\r\n            return n_2 & 0xFFFF;\r\n        }\r\n        else if (equals(typ_1, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_2, false, 0));\r\n        }\r\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return n_2;\r\n        }\r\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return n_2;\r\n        }\r\n        else if (fullName(typ_1) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_2, false, 0);\r\n        }\r\n        else if (equals(typ_1, uint8_type)) {\r\n            return n_2 & 0xFF;\r\n        }\r\n        else if (equals(typ_1, int8_type)) {\r\n            return n_2;\r\n        }\r\n        else if (isEnum(typ_1)) {\r\n            return n_2;\r\n        }\r\n        else {\r\n            const arg20_1 = name(typ_1);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_2)(arg20_1);\r\n        }\r\n    }\r\n    else if (matchValue === 192) {\r\n        return null;\r\n    }\r\n    else if (matchValue === 194) {\r\n        return false;\r\n    }\r\n    else if (matchValue === 195) {\r\n        return true;\r\n    }\r\n    else if (matchValue === 202) {\r\n        const typ_10 = t;\r\n        const n_20 = Reader__ReadFloat32(x);\r\n        if (equals(typ_10, float32_type)) {\r\n            return n_20;\r\n        }\r\n        else if (equals(typ_10, float64_type)) {\r\n            return n_20;\r\n        }\r\n        else if (equals(typ_10, class_type(\"System.Decimal\"))) {\r\n            return new Decimal(n_20);\r\n        }\r\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.float32`1\") {\r\n            return n_20;\r\n        }\r\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.float`1\") {\r\n            return n_20;\r\n        }\r\n        else if (fullName(typ_10) === \"Microsoft.FSharp.Core.decimal`1\") {\r\n            return new Decimal(n_20);\r\n        }\r\n        else {\r\n            const arg20_10 = name(typ_10);\r\n            return toFail(printf(\"Cannot interpret float %A as %s.\"))(n_20)(arg20_10);\r\n        }\r\n    }\r\n    else if (matchValue === 203) {\r\n        const typ_11 = t;\r\n        const n_22 = Reader__ReadFloat64(x);\r\n        if (equals(typ_11, float32_type)) {\r\n            return n_22;\r\n        }\r\n        else if (equals(typ_11, float64_type)) {\r\n            return n_22;\r\n        }\r\n        else if (equals(typ_11, class_type(\"System.Decimal\"))) {\r\n            return new Decimal(n_22);\r\n        }\r\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.float32`1\") {\r\n            return n_22;\r\n        }\r\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.float`1\") {\r\n            return n_22;\r\n        }\r\n        else if (fullName(typ_11) === \"Microsoft.FSharp.Core.decimal`1\") {\r\n            return new Decimal(n_22);\r\n        }\r\n        else {\r\n            const arg20_11 = name(typ_11);\r\n            return toFail(printf(\"Cannot interpret float %A as %s.\"))(n_22)(arg20_11);\r\n        }\r\n    }\r\n    else if (matchValue === 204) {\r\n        const typ_6 = t;\r\n        const n_12 = Reader__ReadUInt8(x);\r\n        if (equals(typ_6, int32_type)) {\r\n            return ~(~n_12);\r\n        }\r\n        else if (equals(typ_6, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_12, false, 4);\r\n        }\r\n        else if (equals(typ_6, int16_type)) {\r\n            return (n_12 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ_6, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_12, false, 4));\r\n        }\r\n        else if (equals(typ_6, uint32_type)) {\r\n            return n_12;\r\n        }\r\n        else if (equals(typ_6, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_12, true, 4);\r\n        }\r\n        else if (equals(typ_6, uint16_type)) {\r\n            return n_12;\r\n        }\r\n        else if (equals(typ_6, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_12, false, 4));\r\n        }\r\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (n_12 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return ~(~n_12);\r\n        }\r\n        else if (fullName(typ_6) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_12, false, 4);\r\n        }\r\n        else if (equals(typ_6, uint8_type)) {\r\n            return n_12;\r\n        }\r\n        else if (equals(typ_6, int8_type)) {\r\n            return (n_12 + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_6)) {\r\n            return n_12;\r\n        }\r\n        else {\r\n            const arg20_6 = name(typ_6);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_12)(arg20_6);\r\n        }\r\n    }\r\n    else if (matchValue === 205) {\r\n        const typ_7 = t;\r\n        const n_14 = Reader__ReadUInt16(x);\r\n        if (equals(typ_7, int32_type)) {\r\n            return ~(~n_14);\r\n        }\r\n        else if (equals(typ_7, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_14, false, 5);\r\n        }\r\n        else if (equals(typ_7, int16_type)) {\r\n            return (n_14 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ_7, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_14, false, 5));\r\n        }\r\n        else if (equals(typ_7, uint32_type)) {\r\n            return n_14;\r\n        }\r\n        else if (equals(typ_7, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_14, true, 5);\r\n        }\r\n        else if (equals(typ_7, uint16_type)) {\r\n            return n_14;\r\n        }\r\n        else if (equals(typ_7, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_14, false, 5));\r\n        }\r\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (n_14 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return ~(~n_14);\r\n        }\r\n        else if (fullName(typ_7) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_14, false, 5);\r\n        }\r\n        else if (equals(typ_7, uint8_type)) {\r\n            return n_14 & 0xFF;\r\n        }\r\n        else if (equals(typ_7, int8_type)) {\r\n            return (n_14 + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_7)) {\r\n            return n_14;\r\n        }\r\n        else {\r\n            const arg20_7 = name(typ_7);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_14)(arg20_7);\r\n        }\r\n    }\r\n    else if (matchValue === 206) {\r\n        const typ_8 = t;\r\n        const n_16 = Reader__ReadUInt32(x);\r\n        if (equals(typ_8, int32_type)) {\r\n            return ~(~n_16);\r\n        }\r\n        else if (equals(typ_8, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_16, false, 6);\r\n        }\r\n        else if (equals(typ_8, int16_type)) {\r\n            return (n_16 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ_8, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_16, false, 6));\r\n        }\r\n        else if (equals(typ_8, uint32_type)) {\r\n            return n_16;\r\n        }\r\n        else if (equals(typ_8, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_16, true, 6);\r\n        }\r\n        else if (equals(typ_8, uint16_type)) {\r\n            return n_16 & 0xFFFF;\r\n        }\r\n        else if (equals(typ_8, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_16, false, 6));\r\n        }\r\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (n_16 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return ~(~n_16);\r\n        }\r\n        else if (fullName(typ_8) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_16, false, 6);\r\n        }\r\n        else if (equals(typ_8, uint8_type)) {\r\n            return n_16 & 0xFF;\r\n        }\r\n        else if (equals(typ_8, int8_type)) {\r\n            return (n_16 + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_8)) {\r\n            return n_16;\r\n        }\r\n        else {\r\n            const arg20_8 = name(typ_8);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_16)(arg20_8);\r\n        }\r\n    }\r\n    else if (matchValue === 207) {\r\n        const typ_9 = t;\r\n        const n_18 = Reader__ReadUInt64(x);\r\n        if (equals(typ_9, int32_type)) {\r\n            return ~(~toInt(n_18));\r\n        }\r\n        else if (equals(typ_9, class_type(\"System.Int64\"))) {\r\n            return fromValue(n_18, false);\r\n        }\r\n        else if (equals(typ_9, int16_type)) {\r\n            return (toInt(n_18) + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ_9, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromValue(n_18, false));\r\n        }\r\n        else if (equals(typ_9, uint32_type)) {\r\n            return toInt(n_18) >>> 0;\r\n        }\r\n        else if (equals(typ_9, class_type(\"System.UInt64\"))) {\r\n            return fromValue(n_18, true);\r\n        }\r\n        else if (equals(typ_9, uint16_type)) {\r\n            return toInt(n_18) & 0xFFFF;\r\n        }\r\n        else if (equals(typ_9, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromValue(n_18, false));\r\n        }\r\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (toInt(n_18) + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return ~(~toInt(n_18));\r\n        }\r\n        else if (fullName(typ_9) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromValue(n_18, false);\r\n        }\r\n        else if (equals(typ_9, uint8_type)) {\r\n            return toInt(n_18) & 0xFF;\r\n        }\r\n        else if (equals(typ_9, int8_type)) {\r\n            return (toInt(n_18) + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_9)) {\r\n            return toNumber(n_18);\r\n        }\r\n        else {\r\n            const arg20_9 = name(typ_9);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_18)(arg20_9);\r\n        }\r\n    }\r\n    else if (matchValue === 208) {\r\n        const typ_5 = t;\r\n        const n_10 = Reader__ReadInt8(x) | 0;\r\n        if (equals(typ_5, int32_type)) {\r\n            return n_10;\r\n        }\r\n        else if (equals(typ_5, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_10, false, 0);\r\n        }\r\n        else if (equals(typ_5, int16_type)) {\r\n            return n_10;\r\n        }\r\n        else if (equals(typ_5, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_10, false, 0));\r\n        }\r\n        else if (equals(typ_5, uint32_type)) {\r\n            return n_10 >>> 0;\r\n        }\r\n        else if (equals(typ_5, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_10, true, 0);\r\n        }\r\n        else if (equals(typ_5, uint16_type)) {\r\n            return n_10 & 0xFFFF;\r\n        }\r\n        else if (equals(typ_5, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_10, false, 0));\r\n        }\r\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return n_10;\r\n        }\r\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return n_10;\r\n        }\r\n        else if (fullName(typ_5) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_10, false, 0);\r\n        }\r\n        else if (equals(typ_5, uint8_type)) {\r\n            return n_10 & 0xFF;\r\n        }\r\n        else if (equals(typ_5, int8_type)) {\r\n            return n_10;\r\n        }\r\n        else if (isEnum(typ_5)) {\r\n            return n_10;\r\n        }\r\n        else {\r\n            const arg20_5 = name(typ_5);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_10)(arg20_5);\r\n        }\r\n    }\r\n    else if (matchValue === 209) {\r\n        const typ_4 = t;\r\n        const n_8 = Reader__ReadInt16(x) | 0;\r\n        if (equals(typ_4, int32_type)) {\r\n            return n_8;\r\n        }\r\n        else if (equals(typ_4, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_8, false, 1);\r\n        }\r\n        else if (equals(typ_4, int16_type)) {\r\n            return n_8;\r\n        }\r\n        else if (equals(typ_4, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_8, false, 1));\r\n        }\r\n        else if (equals(typ_4, uint32_type)) {\r\n            return n_8 >>> 0;\r\n        }\r\n        else if (equals(typ_4, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_8, true, 1);\r\n        }\r\n        else if (equals(typ_4, uint16_type)) {\r\n            return n_8 & 0xFFFF;\r\n        }\r\n        else if (equals(typ_4, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_8, false, 1));\r\n        }\r\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return n_8;\r\n        }\r\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return n_8;\r\n        }\r\n        else if (fullName(typ_4) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_8, false, 1);\r\n        }\r\n        else if (equals(typ_4, uint8_type)) {\r\n            return n_8 & 0xFF;\r\n        }\r\n        else if (equals(typ_4, int8_type)) {\r\n            return (n_8 + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_4)) {\r\n            return n_8;\r\n        }\r\n        else {\r\n            const arg20_4 = name(typ_4);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_8)(arg20_4);\r\n        }\r\n    }\r\n    else if (matchValue === 210) {\r\n        const typ_3 = t;\r\n        const n_6 = Reader__ReadInt32(x) | 0;\r\n        if (equals(typ_3, int32_type)) {\r\n            return n_6;\r\n        }\r\n        else if (equals(typ_3, class_type(\"System.Int64\"))) {\r\n            return fromInteger(n_6, false, 2);\r\n        }\r\n        else if (equals(typ_3, int16_type)) {\r\n            return (n_6 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ_3, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromInteger(n_6, false, 2));\r\n        }\r\n        else if (equals(typ_3, uint32_type)) {\r\n            return n_6 >>> 0;\r\n        }\r\n        else if (equals(typ_3, class_type(\"System.UInt64\"))) {\r\n            return fromInteger(n_6, true, 2);\r\n        }\r\n        else if (equals(typ_3, uint16_type)) {\r\n            return n_6 & 0xFFFF;\r\n        }\r\n        else if (equals(typ_3, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromInteger(n_6, false, 2));\r\n        }\r\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (n_6 + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return n_6;\r\n        }\r\n        else if (fullName(typ_3) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromInteger(n_6, false, 2);\r\n        }\r\n        else if (equals(typ_3, uint8_type)) {\r\n            return n_6 & 0xFF;\r\n        }\r\n        else if (equals(typ_3, int8_type)) {\r\n            return (n_6 + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_3)) {\r\n            return n_6;\r\n        }\r\n        else {\r\n            const arg20_3 = name(typ_3);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_6)(arg20_3);\r\n        }\r\n    }\r\n    else if (matchValue === 211) {\r\n        const typ_2 = t;\r\n        const n_4 = Reader__ReadInt64(x);\r\n        if (equals(typ_2, int32_type)) {\r\n            return ~(~toInt(n_4));\r\n        }\r\n        else if (equals(typ_2, class_type(\"System.Int64\"))) {\r\n            return fromValue(n_4, false);\r\n        }\r\n        else if (equals(typ_2, int16_type)) {\r\n            return (toInt(n_4) + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (equals(typ_2, class_type(\"System.DateTime\"))) {\r\n            return fromTicks_1(fromValue(n_4, false));\r\n        }\r\n        else if (equals(typ_2, uint32_type)) {\r\n            return toInt(n_4) >>> 0;\r\n        }\r\n        else if (equals(typ_2, class_type(\"System.UInt64\"))) {\r\n            return fromValue(n_4, true);\r\n        }\r\n        else if (equals(typ_2, uint16_type)) {\r\n            return toInt(n_4) & 0xFFFF;\r\n        }\r\n        else if (equals(typ_2, class_type(\"System.TimeSpan\"))) {\r\n            return fromTicks_2(fromValue(n_4, false));\r\n        }\r\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int16`1\") {\r\n            return (toInt(n_4) + 0x8000 & 0xFFFF) - 0x8000;\r\n        }\r\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int32`1\") {\r\n            return ~(~toInt(n_4));\r\n        }\r\n        else if (fullName(typ_2) === \"Microsoft.FSharp.Core.int64`1\") {\r\n            return fromValue(n_4, false);\r\n        }\r\n        else if (equals(typ_2, uint8_type)) {\r\n            return toInt(n_4) & 0xFF;\r\n        }\r\n        else if (equals(typ_2, int8_type)) {\r\n            return (toInt(n_4) + 0x80 & 0xFF) - 0x80;\r\n        }\r\n        else if (isEnum(typ_2)) {\r\n            return toNumber(n_4);\r\n        }\r\n        else {\r\n            const arg20_2 = name(typ_2);\r\n            return toFail(printf(\"Cannot interpret integer %A as %s.\"))(n_4)(arg20_2);\r\n        }\r\n    }\r\n    else if ((matchValue | 15) === 159) {\r\n        return Reader__ReadArray_412036CA(x, ~(~(matchValue & 15)), t);\r\n    }\r\n    else if (matchValue === 220) {\r\n        return Reader__ReadArray_412036CA(x, ~(~Reader__ReadUInt16(x)), t);\r\n    }\r\n    else if (matchValue === 221) {\r\n        return Reader__ReadArray_412036CA(x, ~(~Reader__ReadUInt32(x)), t);\r\n    }\r\n    else if ((matchValue | 15) === 143) {\r\n        return Reader__ReadMap_412036CA(x, ~(~(matchValue & 15)), t);\r\n    }\r\n    else {\r\n        switch (matchValue) {\r\n            case 196: {\r\n                return Reader__ReadBin_412036CA(x, ~(~Reader__ReadByte(x)), t);\r\n            }\r\n            case 197: {\r\n                return Reader__ReadBin_412036CA(x, ~(~Reader__ReadUInt16(x)), t);\r\n            }\r\n            case 198: {\r\n                return Reader__ReadBin_412036CA(x, ~(~Reader__ReadUInt32(x)), t);\r\n            }\r\n            case 222: {\r\n                return Reader__ReadMap_412036CA(x, ~(~Reader__ReadUInt16(x)), t);\r\n            }\r\n            case 223: {\r\n                return Reader__ReadMap_412036CA(x, ~(~Reader__ReadUInt32(x)), t);\r\n            }\r\n            default: {\r\n                const arg30 = name(t);\r\n                const arg10_12 = x.pos | 0;\r\n                return toFail(printf(\"Position %d, byte %d, expected type %s.\"))(arg10_12)(matchValue)(arg30);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction Reader__readInt(this$, len, m) {\r\n    if (isLittleEndian()) {\r\n        const arr = new Uint8Array(len);\r\n        for (let i = 0; i <= (len - 1); i++) {\r\n            arr[i] = this$.data[((this$.pos + len) - 1) - i];\r\n        }\r\n        this$.pos = (this$.pos + len);\r\n        return m([arr, 0]);\r\n    }\r\n    else {\r\n        this$.pos = (this$.pos + len);\r\n        return m([this$.data, this$.pos - len]);\r\n    }\r\n}\r\n\r\n","import { fromContinuations } from \"../fable-library.3.1.2/Async.js\";\r\nimport { toFail, printf, toText, trimEnd } from \"../fable-library.3.1.2/String.js\";\r\nimport { isGenericType, getFunctionElements, isFunction, getGenerics } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { head, take, equalsWith, last } from \"../fable-library.3.1.2/Array.js\";\r\nimport { compare } from \"../fable-library.3.1.2/Util.js\";\r\nimport { singleton } from \"../fable-library.3.1.2/AsyncBuilder.js\";\r\nimport { ofSeq } from \"../fable-library.3.1.2/List.js\";\r\nimport { empty, singleton as singleton_1, append, delay } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { ProxyRequestException_$ctor_76BC5104, HttpResponse, RequestBody } from \"./Types.fs.js\";\r\nimport { Convert_fromJsonAs, Convert_arrayLike, Convert_serialize } from \"../Fable.SimpleJson.3.17.0/Json.Converter.fs.js\";\r\nimport { TypeInfo } from \"../Fable.SimpleJson.3.17.0/TypeInfo.fs.js\";\r\nimport { send, get$, post, withBody, withHeaders, sendAndReadBinary } from \"./Http.fs.js\";\r\nimport { SimpleJson_parseNative } from \"../Fable.SimpleJson.3.17.0/SimpleJson.fs.js\";\r\nimport { Reader_$ctor_6C95DA22, Reader__Read_24524716 } from \"../Fable.Remoting.MsgPack.1.6.2/Read.fs.js\";\r\n\r\nexport function Blob_readBlobAsText(blob) {\r\n    return fromContinuations((tupledArg) => {\r\n        const reader = new FileReader();\r\n        reader.onload = ((_arg1) => {\r\n            if (reader.readyState === 2) {\r\n                tupledArg[0](reader.result);\r\n            }\r\n        });\r\n        reader.readAsText(blob);\r\n    });\r\n}\r\n\r\nexport function Proxy_combineRouteWithBaseUrl(route, baseUrl) {\r\n    if (baseUrl != null) {\r\n        const arg10 = trimEnd(baseUrl, \"/\");\r\n        return toText(printf(\"%s%s\"))(arg10)(route);\r\n    }\r\n    else {\r\n        return route;\r\n    }\r\n}\r\n\r\nexport function Proxy_extractAsyncArg(asyncType) {\r\n    return getGenerics(asyncType)[0];\r\n}\r\n\r\nexport function Proxy_isByteArray(_arg1) {\r\n    if (_arg1.tag === 25) {\r\n        if (_arg1.fields[0]().tag === 12) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Proxy_isAsyncOfByteArray(_arg1) {\r\n    if (_arg1.tag === 20) {\r\n        const matchValue = _arg1.fields[0]();\r\n        if (matchValue.tag === 25) {\r\n            if (matchValue.fields[0]().tag === 12) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Proxy_proxyFetch(options, typeName, func, fieldType) {\r\n    let funcArgs;\r\n    const matchValue = func.FieldType;\r\n    switch (matchValue.tag) {\r\n        case 20: {\r\n            funcArgs = [func.FieldType];\r\n            break;\r\n        }\r\n        case 21: {\r\n            funcArgs = [func.FieldType];\r\n            break;\r\n        }\r\n        case 32: {\r\n            funcArgs = matchValue.fields[0]();\r\n            break;\r\n        }\r\n        default: {\r\n            funcArgs = toFail(printf(\"Field %s does not have a valid definiton\"))(func.FieldName);\r\n        }\r\n    }\r\n    const argumentCount = (funcArgs.length - 1) | 0;\r\n    const returnTypeAsync = last(funcArgs);\r\n    const returnType = (returnTypeAsync.tag === 20) ? returnTypeAsync.fields[0]() : ((returnTypeAsync.tag === 21) ? returnTypeAsync.fields[0]() : toFail(printf(\"Expected field %s to have a return type of Async\\u003c\\u0027t\\u003e\"))(func.FieldName));\r\n    const readAsBinary = Proxy_isAsyncOfByteArray(returnTypeAsync);\r\n    let binaryInput;\r\n    const matchValue_1 = func.FieldType;\r\n    if (matchValue_1.tag === 32) {\r\n        const matchValue_2 = matchValue_1.fields[0]();\r\n        if ((!equalsWith(compare, matchValue_2, null)) ? (matchValue_2.length === 2) : false) {\r\n            const output = matchValue_2[1];\r\n            binaryInput = Proxy_isByteArray(matchValue_2[0]);\r\n        }\r\n        else {\r\n            binaryInput = false;\r\n        }\r\n    }\r\n    else {\r\n        binaryInput = false;\r\n    }\r\n    const url = Proxy_combineRouteWithBaseUrl(options.RouteBuilder(typeName, func.FieldName), options.BaseUrl);\r\n    const funcNeedParameters = ((!equalsWith(compare, funcArgs, null)) ? (funcArgs.length === 1) : false) ? ((funcArgs[0].tag === 20) ? false : ((funcArgs[0].tag === 21) ? false : true)) : (((!equalsWith(compare, funcArgs, null)) ? (funcArgs.length === 2) : false) ? ((funcArgs[0].tag === 0) ? ((funcArgs[1].tag === 20) ? false : true) : true) : true);\r\n    return (arg0) => ((arg1) => ((arg2) => ((arg3) => ((arg4) => ((arg5) => ((arg6) => ((arg7) => {\r\n        const inputArguments = funcNeedParameters ? take(argumentCount, [arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7]) : [];\r\n        const inputArgumentTypes = take(argumentCount, funcArgs);\r\n        const contentType = binaryInput ? \"application/octet-stream\" : \"application/json; charset=utf8\";\r\n        return singleton.Delay(() => {\r\n            const headers = ofSeq(delay(() => append(singleton_1([\"Content-Type\", contentType]), delay(() => append(singleton_1([\"x-remoting-proxy\", \"true\"]), delay(() => append(options.CustomHeaders, delay(() => {\r\n                const matchValue_3 = options.Authorization;\r\n                if (matchValue_3 == null) {\r\n                    return empty();\r\n                }\r\n                else {\r\n                    return singleton_1([\"Authorization\", matchValue_3]);\r\n                }\r\n            }))))))));\r\n            let requestBody;\r\n            if (binaryInput) {\r\n                requestBody = (new RequestBody(2, arg0));\r\n            }\r\n            else {\r\n                const matchValue_4 = inputArgumentTypes.length | 0;\r\n                let pattern_matching_result;\r\n                if (matchValue_4 === 1) {\r\n                    if (!Convert_arrayLike(inputArgumentTypes[0])) {\r\n                        pattern_matching_result = 0;\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                switch (pattern_matching_result) {\r\n                    case 0: {\r\n                        requestBody = (new RequestBody(1, Convert_serialize(inputArguments[0], new TypeInfo(27, () => inputArgumentTypes))));\r\n                        break;\r\n                    }\r\n                    case 1: {\r\n                        requestBody = ((matchValue_4 === 1) ? (new RequestBody(1, Convert_serialize([inputArguments[0]], new TypeInfo(25, () => inputArgumentTypes[0])))) : (new RequestBody(1, Convert_serialize(inputArguments, new TypeInfo(27, () => inputArgumentTypes)))));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return (options.ResponseSerialization.tag === 0) ? (readAsBinary ? singleton.Bind(funcNeedParameters ? sendAndReadBinary(withHeaders(headers, withBody(requestBody, post(url)))) : sendAndReadBinary(withHeaders(headers, get$(url))), (_arg4) => {\r\n                const statusCode_1 = _arg4[1] | 0;\r\n                const response_3 = _arg4[0];\r\n                switch (statusCode_1) {\r\n                    case 200: {\r\n                        return singleton.Return(response_3);\r\n                    }\r\n                    case 500: {\r\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response_3.buffer], { type: 'text/plain' })), (_arg5) => {\r\n                            const response_4 = new HttpResponse(statusCode_1, _arg5);\r\n                            return singleton.ReturnFrom((() => {\r\n                                throw ProxyRequestException_$ctor_76BC5104(response_4, toText(printf(\"Internal server error (500) while making request to %s\"))(url), response_4.ResponseBody);\r\n                            })());\r\n                        });\r\n                    }\r\n                    default: {\r\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response_3.buffer], { type: 'text/plain' })), (_arg6) => {\r\n                            const response_5 = new HttpResponse(statusCode_1, _arg6);\r\n                            return singleton.ReturnFrom((() => {\r\n                                throw ProxyRequestException_$ctor_76BC5104(response_5, toText(printf(\"Http error (%d) while making request to %s\"))(statusCode_1)(url), response_5.ResponseBody);\r\n                            })());\r\n                        });\r\n                    }\r\n                }\r\n            }) : singleton.Bind(funcNeedParameters ? send(withHeaders(headers, withBody(requestBody, post(url)))) : send(withHeaders(headers, get$(url))), (_arg7) => {\r\n                const response_6 = _arg7;\r\n                const matchValue_6 = response_6.StatusCode | 0;\r\n                switch (matchValue_6) {\r\n                    case 200: {\r\n                        return singleton.Return(Convert_fromJsonAs(SimpleJson_parseNative(response_6.ResponseBody), returnType));\r\n                    }\r\n                    case 500: {\r\n                        return singleton.ReturnFrom((() => {\r\n                            throw ProxyRequestException_$ctor_76BC5104(response_6, toText(printf(\"Internal server error (500) while making request to %s\"))(url), response_6.ResponseBody);\r\n                        })());\r\n                    }\r\n                    default: {\r\n                        return singleton.ReturnFrom((() => {\r\n                            throw ProxyRequestException_$ctor_76BC5104(response_6, toText(printf(\"Http error (%d) from server occured while making request to %s\"))(matchValue_6)(url), response_6.ResponseBody);\r\n                        })());\r\n                    }\r\n                }\r\n            })) : singleton.Bind(funcNeedParameters ? sendAndReadBinary(withHeaders(headers, withBody(requestBody, post(url)))) : sendAndReadBinary(withHeaders(headers, get$(url))), (_arg1_1) => {\r\n                const statusCode = _arg1_1[1] | 0;\r\n                const response = _arg1_1[0];\r\n                switch (statusCode) {\r\n                    case 200: {\r\n                        const getReturnType = (typ_mut) => {\r\n                            getReturnType:\r\n                            while (true) {\r\n                                const typ = typ_mut;\r\n                                if (isFunction(typ)) {\r\n                                    typ_mut = getFunctionElements(typ)[1];\r\n                                    continue getReturnType;\r\n                                }\r\n                                else if (isGenericType(typ)) {\r\n                                    return head(getGenerics(typ));\r\n                                }\r\n                                else {\r\n                                    return typ;\r\n                                }\r\n                                break;\r\n                            }\r\n                        };\r\n                        return singleton.Return(Reader__Read_24524716(Reader_$ctor_6C95DA22(response), getReturnType(fieldType)));\r\n                    }\r\n                    case 500: {\r\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response.buffer], { type: 'text/plain' })), (_arg2_1) => {\r\n                            const response_1 = new HttpResponse(statusCode, _arg2_1);\r\n                            return singleton.ReturnFrom((() => {\r\n                                throw ProxyRequestException_$ctor_76BC5104(response_1, toText(printf(\"Internal server error (500) while making request to %s\"))(url), response_1.ResponseBody);\r\n                            })());\r\n                        });\r\n                    }\r\n                    default: {\r\n                        return singleton.Bind(Blob_readBlobAsText(new Blob([response.buffer], { type: 'text/plain' })), (_arg3_1) => {\r\n                            const response_2 = new HttpResponse(statusCode, _arg3_1);\r\n                            return singleton.ReturnFrom((() => {\r\n                                throw ProxyRequestException_$ctor_76BC5104(response_2, toText(printf(\"Http error (%d) while making request to %s\"))(statusCode)(url), response_2.ResponseBody);\r\n                            })());\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    })))))));\r\n}\r\n\r\n","import { singleton, concat, map, empty, iterate } from \"../fable-library.3.1.2/List.js\";\r\nimport { singleton as singleton_1 } from \"../fable-library.3.1.2/AsyncBuilder.js\";\r\nimport { startImmediate, catchAsync } from \"../fable-library.3.1.2/Async.js\";\r\nimport { Timer_delay } from \"./prelude.fs.js\";\r\n\r\nexport function Cmd_exec(onError, dispatch, cmd) {\r\n    iterate((call) => {\r\n        try {\r\n            call(dispatch);\r\n        }\r\n        catch (ex) {\r\n            onError(ex);\r\n        }\r\n    }, cmd);\r\n}\r\n\r\nexport function Cmd_none() {\r\n    return empty();\r\n}\r\n\r\nexport function Cmd_map(f, cmd) {\r\n    return map((g) => ((arg_1) => {\r\n        g((arg) => {\r\n            arg_1(f(arg));\r\n        });\r\n    }), cmd);\r\n}\r\n\r\nexport function Cmd_batch(cmds) {\r\n    return concat(cmds);\r\n}\r\n\r\nexport function Cmd_ofSub(sub) {\r\n    return singleton(sub);\r\n}\r\n\r\nexport function Cmd_OfFunc_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            return dispatch(ofSuccess(task(arg)));\r\n        }\r\n        catch (x) {\r\n            return dispatch(ofError(x));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_perform(task, arg, ofSuccess) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            dispatch(ofSuccess(task(arg)));\r\n        }\r\n        catch (x) {\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_attempt(task, arg, ofError) {\r\n    return singleton((dispatch) => {\r\n        try {\r\n            task(arg);\r\n        }\r\n        catch (x) {\r\n            dispatch(ofError(x));\r\n        }\r\n    });\r\n}\r\n\r\nexport function Cmd_OfFunc_result(msg) {\r\n    return singleton((dispatch) => {\r\n        dispatch(msg);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_either(start, task, arg, ofSuccess, ofError) {\r\n    return singleton((arg_1) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            arg_1((r.tag === 1) ? ofError(r.fields[0]) : ofSuccess(r.fields[0]));\r\n            return singleton_1.Zero();\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_perform(start, task, arg, ofSuccess) {\r\n    return singleton((arg_1) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 0) {\r\n                arg_1(ofSuccess(r.fields[0]));\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_attempt(start, task, arg, ofError) {\r\n    return singleton((arg_1) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(catchAsync(task(arg)), (_arg1) => {\r\n            const r = _arg1;\r\n            if (r.tag === 1) {\r\n                arg_1(ofError(r.fields[0]));\r\n                return singleton_1.Zero();\r\n            }\r\n            else {\r\n                return singleton_1.Zero();\r\n            }\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsyncWith_result(start, task) {\r\n    return singleton((arg) => {\r\n        start(singleton_1.Delay(() => singleton_1.Bind(task, (_arg1) => {\r\n            arg(_arg1);\r\n            return singleton_1.Zero();\r\n        })));\r\n    });\r\n}\r\n\r\nexport function Cmd_OfAsync_start(x) {\r\n    Timer_delay(0, (_arg1) => {\r\n        startImmediate(x);\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_either(task, arg, ofSuccess, ofError) {\r\n    return singleton((dispatch) => {\r\n        const value_1 = task(arg).then((arg_1) => dispatch(ofSuccess(arg_1))).catch((arg_3) => dispatch(ofError(arg_3)));\r\n        void value_1;\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_perform(task, arg, ofSuccess) {\r\n    return singleton((dispatch) => {\r\n        const value = task(arg).then((arg_1) => dispatch(ofSuccess(arg_1)));\r\n        void value;\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_attempt(task, arg, ofError) {\r\n    return singleton((dispatch) => {\r\n        const value_1 = task(arg).catch((arg_2) => {\r\n            dispatch(ofError(arg_2));\r\n        });\r\n        void value_1;\r\n    });\r\n}\r\n\r\nexport function Cmd_OfPromise_result(task) {\r\n    return singleton((dispatch) => {\r\n        const value = task.then(dispatch);\r\n        void value;\r\n    });\r\n}\r\n\r\nexport function Cmd_attemptFunc(task, arg, ofError) {\r\n    return Cmd_OfFunc_attempt(task, arg, ofError);\r\n}\r\n\r\n","import { RemotingModule_createApi, RemotingModule_withRouteBuilder, Remoting_buildProxy_Z15584635 } from \"./.fable/Fable.Remoting.Client.7.2.0/Remoting.fs.js\";\r\nimport { uncurry } from \"./.fable/fable-library.3.1.2/Util.js\";\r\nimport { Domain_GameModel$reflection, Domain_GameIdModule_create, Domain_GameIdModule_extract, Domain_GameModelModule_$007CGotGameId$007C_$007C, Api_IPokerApi$reflection, Route_builder } from \"../Shared/Shared.fs.js\";\r\nimport { Cmd_ofSub } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\r\nimport { startImmediate } from \"./.fable/fable-library.3.1.2/Async.js\";\r\nimport { singleton } from \"./.fable/fable-library.3.1.2/AsyncBuilder.js\";\r\nimport { Msg } from \"./Models.fs.js\";\r\nimport { empty, singleton as singleton_1 } from \"./.fable/fable-library.3.1.2/List.js\";\r\nimport { some } from \"./.fable/fable-library.3.1.2/Option.js\";\r\nimport { removeAllCookies, setGameId, setCurrentPlayer, getGameId, getCurrentPlayer } from \"./Cookies.fs.js\";\r\nimport { toString, Record } from \"./.fable/fable-library.3.1.2/Types.js\";\r\nimport { record_type, string_type } from \"./.fable/fable-library.3.1.2/Reflection.js\";\r\nimport { printf, toConsole, interpolate, toText } from \"./.fable/fable-library.3.1.2/String.js\";\r\nimport { PromiseBuilder__Delay_62FBFDE1, PromiseBuilder__Run_212F1D4B } from \"./.fable/Fable.Promise.2.0.0/Promise.fs.js\";\r\nimport { promise } from \"./.fable/Fable.Promise.2.0.0/PromiseImpl.fs.js\";\r\nimport { SimpleJson_tryParse } from \"./.fable/Fable.SimpleJson.3.17.0/SimpleJson.fs.js\";\r\nimport { Convert_fromJson } from \"./.fable/Fable.SimpleJson.3.17.0/Json.Converter.fs.js\";\r\nimport { createTypeInfo } from \"./.fable/Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js\";\r\n\r\nexport const pokerApi = Remoting_buildProxy_Z15584635(RemotingModule_withRouteBuilder(uncurry(2, Route_builder), RemotingModule_createApi()), {\r\n    ResolveType: Api_IPokerApi$reflection,\r\n});\r\n\r\nfunction sendCommandWithSucceed(f, succeedDispatch) {\r\n    return Cmd_ofSub((dispatch) => {\r\n        startImmediate(singleton.Delay(() => {\r\n            dispatch(new Msg(15, true));\r\n            return singleton.Bind(f(), (_arg1) => {\r\n                const state = _arg1;\r\n                return singleton.Combine((state.tag === 1) ? (dispatch(new Msg(12, state.fields[0])), singleton.Zero()) : (dispatch(new Msg(7, state.fields[0])), (succeedDispatch(dispatch), singleton.Zero())), singleton.Delay(() => {\r\n                    dispatch(new Msg(15, false));\r\n                    return singleton.Zero();\r\n                }));\r\n            });\r\n        }));\r\n    });\r\n}\r\n\r\nfunction sendCommand(f) {\r\n    return sendCommandWithSucceed(f, (value) => {\r\n        void value;\r\n    });\r\n}\r\n\r\nexport function loadState(gameId) {\r\n    return sendCommand(() => pokerApi.getState(gameId));\r\n}\r\n\r\nexport function createGame(currentPlayer) {\r\n    return Cmd_ofSub((dispatch) => {\r\n        startImmediate(singleton.Delay(() => {\r\n            dispatch(new Msg(15, true));\r\n            return singleton.Bind(pokerApi.createGame(currentPlayer), (_arg1) => {\r\n                let state_1, activePatternResult39402, gameId;\r\n                const state = _arg1;\r\n                return singleton.Combine((state.tag === 1) ? (dispatch(new Msg(12, state.fields[0])), singleton.Zero()) : (state_1 = state.fields[0], (dispatch(new Msg(7, state_1)), (activePatternResult39402 = Domain_GameModelModule_$007CGotGameId$007C_$007C(state_1), (activePatternResult39402 != null) ? (gameId = activePatternResult39402, (dispatch(new Msg(8, currentPlayer)), (dispatch(new Msg(9, gameId)), (dispatch(new Msg(5, gameId)), (dispatch(new Msg(17)), (dispatch(new Msg(16, singleton_1(Domain_GameIdModule_extract(gameId)))), singleton.Zero())))))) : (dispatch(new Msg(12, \"Game Server doesn\\u0027t switch to the right Game State. Please try again!\")), singleton.Zero())))), singleton.Delay(() => {\r\n                    dispatch(new Msg(15, false));\r\n                    return singleton.Zero();\r\n                }));\r\n            });\r\n        }));\r\n    });\r\n}\r\n\r\nexport function resetWhenGameNotExists(id) {\r\n    return Cmd_ofSub((dispatch) => {\r\n        startImmediate(singleton.Delay(() => {\r\n            dispatch(new Msg(15, true));\r\n            return singleton.Combine((id !== \"\") ? singleton.Bind(pokerApi.getState(Domain_GameIdModule_create(id)), (_arg1) => {\r\n                const state = _arg1;\r\n                if (state.tag === 1) {\r\n                    console.log(some(state.fields[0]));\r\n                    dispatch(new Msg(19));\r\n                    dispatch(new Msg(16, empty()));\r\n                    return singleton.Zero();\r\n                }\r\n                else {\r\n                    return singleton.Zero();\r\n                }\r\n            }) : (void 0, singleton.Zero()), singleton.Delay(() => {\r\n                dispatch(new Msg(15, false));\r\n                return singleton.Zero();\r\n            }));\r\n        }));\r\n    });\r\n}\r\n\r\nexport function joinGameFromCookiesOrCheckGameExisits() {\r\n    return Cmd_ofSub((dispatch) => {\r\n        startImmediate(singleton.Delay(() => {\r\n            let matchValue, currentPlayer, gameId;\r\n            dispatch(new Msg(15, true));\r\n            return singleton.Combine((matchValue = [getCurrentPlayer(), getGameId()], (matchValue[0] != null) ? ((matchValue[1] != null) ? (currentPlayer = matchValue[0], (gameId = matchValue[1], singleton.Bind(pokerApi.joinGame(gameId, currentPlayer), (_arg1) => {\r\n                const state = _arg1;\r\n                if (state.tag === 1) {\r\n                    console.log(some(state.fields[0]));\r\n                    dispatch(new Msg(19));\r\n                    return singleton.Zero();\r\n                }\r\n                else {\r\n                    const state_1 = state.fields[0];\r\n                    dispatch(new Msg(7, state_1));\r\n                    const activePatternResult39417 = Domain_GameModelModule_$007CGotGameId$007C_$007C(state_1);\r\n                    if (activePatternResult39417 != null) {\r\n                        const gameId_1 = activePatternResult39417;\r\n                        dispatch(new Msg(8, currentPlayer));\r\n                        dispatch(new Msg(9, gameId_1));\r\n                        dispatch(new Msg(5, gameId_1));\r\n                        dispatch(new Msg(17));\r\n                        dispatch(new Msg(16, singleton_1(Domain_GameIdModule_extract(gameId_1))));\r\n                        return singleton.Zero();\r\n                    }\r\n                    else {\r\n                        dispatch(new Msg(12, \"Game Server doesn\\u0027t switch to the right Game State. Please try again!\"));\r\n                        return singleton.Zero();\r\n                    }\r\n                }\r\n            }))) : (void 0, singleton.Zero())) : (void 0, singleton.Zero())), singleton.Delay(() => {\r\n                dispatch(new Msg(15, false));\r\n                return singleton.Zero();\r\n            }));\r\n        }));\r\n    });\r\n}\r\n\r\nexport function joinGame(gameId, currentPlayer) {\r\n    return Cmd_ofSub((dispatch) => {\r\n        startImmediate(singleton.Delay(() => {\r\n            dispatch(new Msg(15, true));\r\n            return singleton.Bind(pokerApi.joinGame(gameId, currentPlayer), (_arg1) => {\r\n                let state_1, activePatternResult39425, gameId_1;\r\n                const state = _arg1;\r\n                return singleton.Combine((state.tag === 1) ? (dispatch(new Msg(12, state.fields[0])), singleton.Zero()) : (state_1 = state.fields[0], (dispatch(new Msg(7, state_1)), (activePatternResult39425 = Domain_GameModelModule_$007CGotGameId$007C_$007C(state_1), (activePatternResult39425 != null) ? (gameId_1 = activePatternResult39425, (dispatch(new Msg(8, currentPlayer)), (dispatch(new Msg(9, gameId_1)), (dispatch(new Msg(5, gameId_1)), (dispatch(new Msg(17)), (dispatch(new Msg(16, singleton_1(Domain_GameIdModule_extract(gameId_1)))), singleton.Zero())))))) : (dispatch(new Msg(12, \"Game Server doesn\\u0027t switch to the right Game State. Please try again!\")), singleton.Zero())))), singleton.Delay(() => {\r\n                    dispatch(new Msg(15, false));\r\n                    return singleton.Zero();\r\n                }));\r\n            });\r\n        }));\r\n    });\r\n}\r\n\r\nexport function endGame(gameId, currentPlayer) {\r\n    return sendCommand(() => pokerApi.endGame(gameId, currentPlayer));\r\n}\r\n\r\nexport function leaveGame(gameId, currentPlayer, playerToLeave) {\r\n    return sendCommand(() => pokerApi.leaveGame(gameId, currentPlayer, playerToLeave));\r\n}\r\n\r\nexport function startRound(gameId, currentPlayer) {\r\n    return sendCommand(() => pokerApi.startRound(gameId, currentPlayer));\r\n}\r\n\r\nexport function finishRound(gameId, currentPlayer) {\r\n    return sendCommand(() => pokerApi.finishRound(gameId, currentPlayer));\r\n}\r\n\r\nexport function playCard(gameId, currentPlayer, card) {\r\n    return sendCommand(() => pokerApi.playCard(gameId, currentPlayer, card));\r\n}\r\n\r\nexport function setCookies(gameId, player) {\r\n    return Cmd_ofSub((_arg1) => {\r\n        setCurrentPlayer(player);\r\n        setGameId(gameId);\r\n    });\r\n}\r\n\r\nexport function removeCookies() {\r\n    return Cmd_ofSub((_arg1) => {\r\n        removeAllCookies();\r\n    });\r\n}\r\n\r\nexport class WebSocket_ChannelMessage extends Record {\r\n    constructor(Topic, Payload) {\r\n        super();\r\n        this.Topic = Topic;\r\n        this.Payload = Payload;\r\n    }\r\n}\r\n\r\nexport function WebSocket_ChannelMessage$reflection() {\r\n    return record_type(\"Commands.WebSocket.ChannelMessage\", [], WebSocket_ChannelMessage, () => [[\"Topic\", string_type], [\"Payload\", string_type]]);\r\n}\r\n\r\nexport function WebSocket_connectWebSocketCmd(gameId) {\r\n    return Cmd_ofSub((dispatch) => {\r\n        const connect = (ws) => {\r\n            const url = toText(interpolate(\"%P()://%P()/socket/poker\", [(window.location.protocol === \"https:\") ? \"wss\" : \"ws\", window.location.host]));\r\n            const ws_2 = (ws != null) ? ws : (new WebSocket(url));\r\n            ws_2.onopen = ((_arg1) => {\r\n                toConsole(printf(\"connection opened!\"));\r\n            });\r\n            ws_2.onclose = ((e) => {\r\n                toConsole(printf(\"connection closed!\"));\r\n                return (e.code !== 4999) ? PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => ((new Promise(resolve => setTimeout(resolve, 2000))).then((() => {\r\n                    const value_1 = connect(ws_2);\r\n                    void value_1;\r\n                    return Promise.resolve();\r\n                }))))) : PromiseBuilder__Run_212F1D4B(promise, PromiseBuilder__Delay_62FBFDE1(promise, () => (Promise.resolve(undefined))));\r\n            });\r\n            ws_2.onmessage = ((msg) => {\r\n                let matchValue_1;\r\n                let msg_1;\r\n                const matchValue = SimpleJson_tryParse(toString(msg.data));\r\n                if (matchValue != null) {\r\n                    msg_1 = Convert_fromJson(matchValue, createTypeInfo(WebSocket_ChannelMessage$reflection()));\r\n                }\r\n                else {\r\n                    throw (new Error(\"Couldn\\u0027t parse the input JSON string because it seems to be invalid\"));\r\n                }\r\n                if (Domain_GameIdModule_extract(gameId) === msg_1.Topic) {\r\n                    dispatch(new Msg(7, (matchValue_1 = SimpleJson_tryParse(msg_1.Payload), (matchValue_1 != null) ? Convert_fromJson(matchValue_1, createTypeInfo(Domain_GameModel$reflection())) : (() => {\r\n                        throw (new Error(\"Couldn\\u0027t parse the input JSON string because it seems to be invalid\"));\r\n                    })())));\r\n                }\r\n            });\r\n            return ws_2;\r\n        };\r\n        dispatch(new Msg(10, connect(void 0)));\r\n    });\r\n}\r\n\r\nexport function WebSocket_disconnectWebsocket(ws) {\r\n    return Cmd_ofSub((dispatch) => {\r\n        ws.onclose = ((_arg1) => {\r\n            dispatch(new Msg(19));\r\n        });\r\n        ws.close();\r\n    });\r\n}\r\n\r\n","import { empty } from \"../fable-library.3.1.2/List.js\";\r\nimport { uncurry } from \"../fable-library.3.1.2/Util.js\";\r\nimport { toFail, printf, toText } from \"../fable-library.3.1.2/String.js\";\r\nimport { RemoteBuilderOptions, SerializationType } from \"./Types.fs.js\";\r\nimport { fullName, makeRecord, getRecordElements, name as name_1, class_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { value } from \"../fable-library.3.1.2/Option.js\";\r\nimport { createTypeInfo } from \"../Fable.SimpleJson.3.17.0/TypeInfo.Converter.fs.js\";\r\nimport { pick, map } from \"../fable-library.3.1.2/Array.js\";\r\nimport { singleton, collect, delay } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { Proxy_proxyFetch } from \"./Proxy.fs.js\";\r\n\r\nexport function RemotingModule_createApi() {\r\n    let clo1;\r\n    return new RemoteBuilderOptions(empty(), void 0, void 0, false, uncurry(2, (clo1 = toText(printf(\"/%s/%s\")), (arg10) => {\r\n        const clo2 = clo1(arg10);\r\n        return clo2;\r\n    })), new SerializationType(0));\r\n}\r\n\r\nexport function RemotingModule_withRouteBuilder(builder, options) {\r\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, options.WithCredentials, builder, options.ResponseSerialization);\r\n}\r\n\r\nexport function RemotingModule_withBaseUrl(url, options) {\r\n    return new RemoteBuilderOptions(options.CustomHeaders, url, options.Authorization, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\r\n}\r\n\r\nexport function RemotingModule_withCustomHeader(headers, options) {\r\n    return new RemoteBuilderOptions(headers, options.BaseUrl, options.Authorization, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\r\n}\r\n\r\nexport function RemotingModule_withAuthorizationHeader(token, options) {\r\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, token, options.WithCredentials, options.RouteBuilder, options.ResponseSerialization);\r\n}\r\n\r\nexport function RemotingModule_withCredentials(withCredentials, options) {\r\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, withCredentials, options.RouteBuilder, options.ResponseSerialization);\r\n}\r\n\r\nexport function RemotingModule_withBinarySerialization(options) {\r\n    return new RemoteBuilderOptions(options.CustomHeaders, options.BaseUrl, options.Authorization, options.WithCredentials, options.RouteBuilder, new SerializationType(1));\r\n}\r\n\r\nexport class Remoting {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function Remoting$reflection() {\r\n    return class_type(\"Fable.Remoting.Client.Remoting\", void 0, Remoting);\r\n}\r\n\r\nexport function Remoting_$ctor() {\r\n    return new Remoting();\r\n}\r\n\r\nexport function Remoting_buildProxy_Z15584635(options, resolver) {\r\n    const resolvedType = value(resolver).ResolveType();\r\n    const schemaType = createTypeInfo(resolvedType);\r\n    if (schemaType.tag === 34) {\r\n        const patternInput = schemaType.fields[0]();\r\n        const recordType = patternInput[1];\r\n        const fieldTypes = map((prop) => [name_1(prop), prop[1]], getRecordElements(recordType));\r\n        return makeRecord(recordType, Array.from(delay(() => collect((field) => {\r\n            let n, matchValue, fieldType, fn;\r\n            return singleton((n = ((matchValue = field.FieldType, (matchValue.tag === 20) ? 0 : ((matchValue.tag === 21) ? 0 : ((matchValue.tag === 32) ? (matchValue.fields[0]().length - 1) : 0))) | 0), (fieldType = pick((tupledArg) => {\r\n                if (tupledArg[0] === field.FieldName) {\r\n                    return tupledArg[1];\r\n                }\r\n                else {\r\n                    return void 0;\r\n                }\r\n            }, fieldTypes), (fn = Proxy_proxyFetch(options, name_1(recordType), field, fieldType), (n === 0) ? fn(null)(null)(null)(null)(null)(null)(null)(null) : ((n === 1) ? ((a) => fn(a)(null)(null)(null)(null)(null)(null)(null)) : ((n === 2) ? ((delegateArg0, delegateArg1) => fn(delegateArg0)(delegateArg1)(null)(null)(null)(null)(null)(null)) : ((n === 3) ? ((delegateArg0_1, delegateArg1_1, delegateArg2) => fn(delegateArg0_1)(delegateArg1_1)(delegateArg2)(null)(null)(null)(null)(null)) : ((n === 4) ? ((delegateArg0_2, delegateArg1_2, delegateArg2_1, delegateArg3) => fn(delegateArg0_2)(delegateArg1_2)(delegateArg2_1)(delegateArg3)(null)(null)(null)(null)) : ((n === 5) ? ((delegateArg0_3, delegateArg1_3, delegateArg2_2, delegateArg3_1, delegateArg4) => fn(delegateArg0_3)(delegateArg1_3)(delegateArg2_2)(delegateArg3_1)(delegateArg4)(null)(null)(null)) : ((n === 6) ? ((delegateArg0_4, delegateArg1_4, delegateArg2_3, delegateArg3_2, delegateArg4_1, delegateArg5) => fn(delegateArg0_4)(delegateArg1_4)(delegateArg2_3)(delegateArg3_2)(delegateArg4_1)(delegateArg5)(null)(null)) : ((n === 7) ? ((delegateArg0_5, delegateArg1_5, delegateArg2_4, delegateArg3_3, delegateArg4_2, delegateArg5_1, delegateArg6) => fn(delegateArg0_5)(delegateArg1_5)(delegateArg2_4)(delegateArg3_3)(delegateArg4_2)(delegateArg5_1)(delegateArg6)(null)) : ((n === 8) ? ((delegateArg0_6, delegateArg1_6, delegateArg2_5, delegateArg3_4, delegateArg4_3, delegateArg5_2, delegateArg6_1, delegateArg7) => fn(delegateArg0_6)(delegateArg1_6)(delegateArg2_5)(delegateArg3_4)(delegateArg4_3)(delegateArg5_2)(delegateArg6_1)(delegateArg7)) : toFail(printf(\"Cannot generate proxy function for %s. Only up to 8 arguments are supported. Consider using a record type as input\"))(field.FieldName)))))))))))));\r\n        }, patternInput[0]))));\r\n    }\r\n    else {\r\n        const arg10_1 = fullName(resolvedType);\r\n        return toFail(printf(\"Cannot build proxy. Exepected type %s to be a valid protocol definition which is a record of functions\"))(arg10_1);\r\n    }\r\n}\r\n\r\n","import { substring } from \"../fable-library.3.1.2/String.js\";\r\nimport { getEnumerator } from \"../fable-library.3.1.2/Seq.js\";\r\n\r\nexport function fromFlatEntries(kvs) {\r\n    const setProperty = (target_mut, key_mut, value_mut) => {\r\n        setProperty:\r\n        while (true) {\r\n            const target = target_mut, key = key_mut, value = value_mut;\r\n            const matchValue = key.indexOf(\".\") | 0;\r\n            if (matchValue === -1) {\r\n                target[key] = value;\r\n            }\r\n            else {\r\n                const sepIdx = matchValue | 0;\r\n                const topKey = substring(key, 0, sepIdx);\r\n                const nestedKey = substring(key, sepIdx + 1);\r\n                if (target[topKey] === undefined) {\r\n                    target[topKey] = {};\r\n                }\r\n                target_mut = target[topKey];\r\n                key_mut = nestedKey;\r\n                value_mut = value;\r\n                continue setProperty;\r\n            }\r\n            break;\r\n        }\r\n    };\r\n    const target_1 = {};\r\n    const enumerator = getEnumerator(kvs);\r\n    try {\r\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n            const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n            setProperty(target_1, forLoopVar[0], forLoopVar[1]);\r\n        }\r\n    }\r\n    finally {\r\n        enumerator.Dispose();\r\n    }\r\n    return target_1;\r\n}\r\n\r\n","import { createElement } from \"react\";\r\nimport { fromFlatEntries } from \"./Flatten.fs.js\";\r\n\r\nexport const MuiHelpers_reactElement = createElement;\r\n\r\nexport const MuiHelpers_reactElementTag = createElement;\r\n\r\nexport function MuiHelpers_createElement(el, properties) {\r\n    return MuiHelpers_reactElement(el, fromFlatEntries(properties));\r\n}\r\n\r\nexport function MuiHelpers_createElementTag(tag, properties) {\r\n    return MuiHelpers_reactElementTag(tag, fromFlatEntries(properties));\r\n}\r\n\r\n","import { useTheme, createMuiTheme, responsiveFontSizes, makeStyles } from \"@material-ui/core/styles\";\r\nimport { class_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { createObj } from \"../fable-library.3.1.2/Util.js\";\r\n\r\nexport const StyleImports_makeStyles_get = makeStyles;\r\n\r\nexport const StyleImports_makeStyles_getWithOpts = makeStyles;\r\n\r\nexport const StyleImports_makeStyles_obj = makeStyles;\r\n\r\nexport const StyleImports_makeStyles_objWithOpts = makeStyles;\r\n\r\nexport const StyleImports_responsiveFontSizes = responsiveFontSizes;\r\n\r\nexport const StyleImports_responsiveFontSizes_opts = responsiveFontSizes;\r\n\r\nexport const StyleImports_createMuiTheme_argsArray = createMuiTheme;\r\n\r\nexport const StyleImports_createMuiTheme_unit = createMuiTheme;\r\n\r\nexport const StyleImports_useTheme = useTheme;\r\n\r\nexport class StyleCreator$1 {\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport function StyleCreator$1$reflection(gen0) {\r\n    return class_type(\"Feliz.MaterialUI.StyleCreator`1\", [gen0], StyleCreator$1);\r\n}\r\n\r\nexport function StyleCreator$1_$ctor() {\r\n    return new StyleCreator$1();\r\n}\r\n\r\nexport function StyleCreator$1__create_4EAC9E1E(_, styles) {\r\n    return createObj(styles);\r\n}\r\n\r\nexport function StyleCreator$1__create_A7D96BD(_, getStyles) {\r\n    return (arg_1) => createObj(getStyles(arg_1));\r\n}\r\n\r\n","import { Record } from \"./.fable/fable-library.3.1.2/Types.js\";\r\nimport { record_type, string_type } from \"./.fable/fable-library.3.1.2/Reflection.js\";\r\nimport { StyleImports_createMuiTheme_argsArray, StyleImports_createMuiTheme_unit, StyleCreator$1__create_4EAC9E1E, StyleCreator$1_$ctor, StyleImports_makeStyles_get } from \"./.fable/Feliz.MaterialUI.1.2.5/Styles.fs.js\";\r\nimport { ofSeq, ofArray, singleton } from \"./.fable/fable-library.3.1.2/List.js\";\r\nimport { delay } from \"./.fable/fable-library.3.1.2/Seq.js\";\r\nimport { fromFlatEntries } from \"./.fable/Feliz.MaterialUI.1.2.5/Flatten.fs.js\";\r\nimport indigo from \"@material-ui/core/colors/indigo\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\r\n\r\nexport class CustomStyles extends Record {\r\n    constructor(root, appBar, appBarTitle, content, toolbar, centerPaper, playerCard, loginPaper, loginAvatar, loginForm, loginSubmit) {\r\n        super();\r\n        this.root = root;\r\n        this.appBar = appBar;\r\n        this.appBarTitle = appBarTitle;\r\n        this.content = content;\r\n        this.toolbar = toolbar;\r\n        this.centerPaper = centerPaper;\r\n        this.playerCard = playerCard;\r\n        this.loginPaper = loginPaper;\r\n        this.loginAvatar = loginAvatar;\r\n        this.loginForm = loginForm;\r\n        this.loginSubmit = loginSubmit;\r\n    }\r\n}\r\n\r\nexport function CustomStyles$reflection() {\r\n    return record_type(\"Styling.CustomStyles\", [], CustomStyles, () => [[\"root\", string_type], [\"appBar\", string_type], [\"appBarTitle\", string_type], [\"content\", string_type], [\"toolbar\", string_type], [\"centerPaper\", string_type], [\"playerCard\", string_type], [\"loginPaper\", string_type], [\"loginAvatar\", string_type], [\"loginForm\", string_type], [\"loginSubmit\", string_type]]);\r\n}\r\n\r\nexport const useStyles = StyleImports_makeStyles_get((arg) => {\r\n    let o;\r\n    const theme = arg;\r\n    const styles = StyleCreator$1_$ctor();\r\n    o = (new CustomStyles(StyleCreator$1__create_4EAC9E1E(styles, singleton([\"display\", \"flex\"])), StyleCreator$1__create_4EAC9E1E(styles, singleton([\"zIndex\", theme.zIndex.drawer + 1])), StyleCreator$1__create_4EAC9E1E(styles, singleton([\"flexGrow\", 1])), StyleCreator$1__create_4EAC9E1E(styles, ofArray([[\"width\", 0], [\"flexGrow\", 1], [\"padding\", theme.spacing(3)]])), StyleCreator$1__create_4EAC9E1E(styles, ofSeq(delay(() => (Object.entries(theme.mixins.toolbar))))), StyleCreator$1__create_4EAC9E1E(styles, ofArray([[\"padding\", theme.spacing(3, 2)], [\"display\", \"flex\"], [\"flexDirection\", \"column\"], [\"justifyContent\", \"center\"]])), StyleCreator$1__create_4EAC9E1E(styles, ofArray([[\"padding\", theme.spacing(1)], [\"display\", \"flex\"], [\"flexDirection\", \"column\"], [\"justifyContent\", \"center\"], [\"minHeight\", 220]])), StyleCreator$1__create_4EAC9E1E(styles, ofArray([[\"marginTop\", theme.spacing(8)], [\"display\", \"flex\"], [\"flexDirection\", \"column\"], [\"alignItems\", \"center\"], [\"padding\", 20]])), StyleCreator$1__create_4EAC9E1E(styles, ofArray([[\"margin\", theme.spacing(1)], [\"backgroundColor\", theme.palette.primary.main]])), StyleCreator$1__create_4EAC9E1E(styles, ofArray([[\"width\", 100 + \"%\"], [\"marginTop\", theme.spacing(1)]])), StyleCreator$1__create_4EAC9E1E(styles, singleton([\"margin\", theme.spacing(3, 0, 2)]))));\r\n    return Object.assign({}, o);\r\n});\r\n\r\nexport const Theme_defaultTheme = StyleImports_createMuiTheme_unit();\r\n\r\nexport const Theme_light = (() => {\r\n    const merge = [];\r\n    return StyleImports_createMuiTheme_argsArray(fromFlatEntries(ofArray([[\"palette.type\", \"light\"], [\"palette.primary\", indigo], [\"palette.secondary\", pink], [\"palette.background.default\", Theme_defaultTheme.palette.grey[\"100\"]], [\"typography.h1.fontSize\", \"3rem\"], [\"typography.h2.fontSize\", \"2rem\"], [\"typography.h3.fontSize\", \"1.5rem\"]])), ...merge);\r\n})();\r\n\r\nexport const Theme_dark = (() => {\r\n    const merge = [];\r\n    return StyleImports_createMuiTheme_argsArray(fromFlatEntries(ofArray([[\"palette.type\", \"dark\"], [\"palette.primary\", lightBlue], [\"palette.secondary\", pink], [\"palette.background.default\", Theme_defaultTheme.palette.grey[\"900\"]], [\"typography.h1.fontSize\", \"3rem\"], [\"typography.h2.fontSize\", \"2rem\"], [\"typography.h3.fontSize\", \"1.5rem\"], [\"overrides.MuiAppBar.colorDefault\", {\r\n        backgroundColor: Theme_defaultTheme.palette.grey.A400,\r\n    }], [\"overrides.MuiPaper.root\", {\r\n        backgroundColor: Theme_defaultTheme.palette.grey.A400,\r\n    }], [\"overrides.MuiDrawer.paper\", {\r\n        backgroundColor: Theme_defaultTheme.palette.grey[\"900\"],\r\n    }], [\"props.MuiAppBar\", {\r\n        color: \"default\",\r\n    }]])), ...merge);\r\n})();\r\n\r\nexport const Theme_a = 1;\r\n\r\n","import { MuiHelpers_createElement } from \"./.fable/Feliz.MaterialUI.1.2.5/Mui.fs.js\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { interpolate, toText } from \"./.fable/fable-library.3.1.2/String.js\";\r\nimport { Domain_GameModelModule_$007CGotGameId$007C_$007C, Domain_PlayerModule_extract, Domain_GameIdModule_extract } from \"../Shared/Shared.fs.js\";\r\nimport { useStyles } from \"./Styling.fs.js\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { reactApi } from \"./.fable/Feliz.1.29.0/Interop.fs.js\";\r\nimport { ofArray, ofSeq } from \"./.fable/fable-library.3.1.2/List.js\";\r\nimport { empty, singleton, append, delay } from \"./.fable/fable-library.3.1.2/Seq.js\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Msg } from \"./Models.fs.js\";\r\nimport { createElement } from \"react\";\r\nimport * as react from \"react\";\r\nimport Brightness4 from \"mdi-material-ui/Brightness4\";\r\nimport Brightness7 from \"mdi-material-ui/Brightness7\";\r\nimport GitHub from \"@material-ui/icons/GitHub\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { createObj } from \"./.fable/fable-library.3.1.2/Util.js\";\r\n\r\nexport function joinLink(gameid) {\r\n    return MuiHelpers_createElement(Link, [[\"href\", toText(interpolate(\"%P()/#%P()\", [window.location.origin, Domain_GameIdModule_extract(gameid)]))], [\"variant\", \"h6\"], [\"children\", \"Join Link\"]]);\r\n}\r\n\r\nexport function toolbar(state, dispatch) {\r\n    const c = useStyles();\r\n    let welcomeText;\r\n    const matchValue = state.CurrentPlayer;\r\n    welcomeText = ((matchValue != null) ? toText(interpolate(\" - Welcome %P()!\", [Domain_PlayerModule_extract(matchValue)[1]])) : \"\");\r\n    return MuiHelpers_createElement(Toolbar, [[\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(singleton(MuiHelpers_createElement(Typography, [[\"variant\", \"h6\"], [\"color\", \"inherit\"], [\"children\", toText(interpolate(\"F#ncy Planing Poker%P()\", [welcomeText]))], [\"classes.root\", c.appBarTitle]])), delay(() => {\r\n        let activePatternResult39369, gameId;\r\n        return append((activePatternResult39369 = Domain_GameModelModule_$007CGotGameId$007C_$007C(state.CurrentGameState), (activePatternResult39369 != null) ? (gameId = activePatternResult39369, singleton(joinLink(gameId))) : (void 0, empty())), delay(() => append(singleton(MuiHelpers_createElement(Tooltip, [[\"title\", (state.Theme.tag === 0) ? \"Using dark theme\" : \"Using light theme\"], [\"children\", MuiHelpers_createElement(IconButton, [[\"onClick\", (_arg1) => {\r\n            dispatch(new Msg(14));\r\n        }], [\"color\", \"inherit\"], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => ((state.Theme.tag === 0) ? singleton(react.createElement(Brightness4, {})) : singleton(react.createElement(Brightness7, {})))))))]])]])), delay(() => singleton(MuiHelpers_createElement(Tooltip, [[\"title\", \"F#ncy Planing Poker on GitHub\"], [\"children\", MuiHelpers_createElement(IconButton, [[\"href\", \"https://github.com/DieselMeister/PlaningPoker\"], [\"component\", \"a\"], [\"color\", \"inherit\"], [\"children\", react.createElement(GitHub, {})]])]]))))));\r\n    }))))))]]);\r\n}\r\n\r\nexport function loadingSpinner(isVisible) {\r\n    return MuiHelpers_createElement(Backdrop, [[\"open\", isVisible], [\"in\", isVisible], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(CircularProgress, [[\"color\", \"inherit\"]])])]]);\r\n}\r\n\r\nconst rnd = {};\r\n\r\nexport function card(sizeFactor, isOpen, onClick, value) {\r\n    const pic = (value.tag === 1) ? \"diams\" : ((value.tag === 2) ? \"hearts\" : ((value.tag === 3) ? \"clubs\" : ((value.tag === 4) ? \"spades\" : ((value.tag === 5) ? \"diams\" : ((value.tag === 6) ? \"hearts\" : ((value.tag === 7) ? \"clubs\" : ((value.tag === 8) ? \"spades\" : ((value.tag === 9) ? \"diams\" : ((value.tag === 10) ? \"hearts\" : ((value.tag === 11) ? \"diams\" : ((value.tag === 12) ? \"clubs\" : ((value.tag === 13) ? \"spades\" : \"spades\"))))))))))));\r\n    const rank = (value.tag === 1) ? \"a\" : ((value.tag === 2) ? \"a\" : ((value.tag === 3) ? \"2\" : ((value.tag === 4) ? \"3\" : ((value.tag === 5) ? \"5\" : ((value.tag === 6) ? \"8\" : ((value.tag === 7) ? \"3\" : ((value.tag === 8) ? \"2\" : ((value.tag === 9) ? \"4\" : ((value.tag === 10) ? \"10\" : ((value.tag === 11) ? \"a\" : ((value.tag === 12) ? \"a\" : ((value.tag === 13) ? \"a\" : \"a\"))))))))))));\r\n    const value_1 = (value.tag === 1) ? \"½\" : ((value.tag === 2) ? \"1\" : ((value.tag === 3) ? \"2\" : ((value.tag === 4) ? \"3\" : ((value.tag === 5) ? \"5\" : ((value.tag === 6) ? \"8\" : ((value.tag === 7) ? \"13\" : ((value.tag === 8) ? \"20\" : ((value.tag === 9) ? \"40\" : ((value.tag === 10) ? \"100\" : ((value.tag === 11) ? \"☕\" : ((value.tag === 12) ? \"🛑\" : ((value.tag === 13) ? \"WTF?\" : \"0\"))))))))))));\r\n    const boxWidth = (~(~((110 / 1.5) * sizeFactor))) | 0;\r\n    const boxHeight = (~(~((140 / 1.5) * sizeFactor))) | 0;\r\n    return createElement(\"div\", {\r\n        style: {\r\n            overflow: \"hidden\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            minHeight: boxHeight,\r\n            minWidth: boxWidth,\r\n            height: 100 + \"%\",\r\n            width: 100 + \"%\",\r\n            [\"box-sizing\"]: \"initial\",\r\n        },\r\n        children: reactApi.Children.toArray(Array.from(ofSeq(delay(() => {\r\n            let content;\r\n            return isOpen ? singleton(createElement(\"div\", {\r\n                className: toText(interpolate(\"card rank-%P() %P()\", [rank, pic])),\r\n                onClick: (_arg1) => {\r\n                    onClick();\r\n                },\r\n                style: {\r\n                    boxSizing: \"initial\",\r\n                    transform: (\"scale(\" + sizeFactor) + \")\",\r\n                },\r\n                children: reactApi.Children.toArray([createElement(\"span\", {\r\n                    className: \"rank\",\r\n                    children: toText(interpolate(\"%P()\", [value_1])),\r\n                }), createElement(\"span\", createObj(ofArray([[\"className\", \"suit\"], (content = toText(interpolate(\"\\u0026%P();\", [pic])), [\"dangerouslySetInnerHTML\", {\r\n                    __html: content,\r\n                }])])))]),\r\n            })) : singleton(createElement(\"div\", {\r\n                className: \"playingCards card back\",\r\n                style: {\r\n                    boxSizing: \"initial\",\r\n                    transform: (\"scale(\" + sizeFactor) + \")\",\r\n                },\r\n            }));\r\n        })))),\r\n    });\r\n}\r\n\r\n","import { RouterModule_router, RouterModule_trySeparateLast, RouterModule_encodeQueryString, RouterModule_nav, RouterModule_urlSegments } from \"./.fable/Feliz.Router.3.5.0/Router.fs.js\";\r\nimport { chunkBySize, max, getSlice, length, tryFind, ofArray, singleton as singleton_1, append as append_1, empty as empty_1, exists, ofSeq, item } from \"./.fable/fable-library.3.1.2/List.js\";\r\nimport { Msg, Model, Theme as Theme_1 } from \"./Models.fs.js\";\r\nimport { Domain_GameModelModule_countPlayeredCards, Domain_GameModule_extract, Domain_CardModule_extract, Domain_PlayerModule_extract, Domain_CardValue, Domain_CardModule_create, Domain_Msg, Domain_GameModelModule_$007CGotPlayers$007C_$007C, Domain_GameModelModule_$007CGotGameId$007C_$007C, Domain_PlayerModule_create, Domain_GameIdModule_create, Domain_GameModel } from \"../Shared/Shared.fs.js\";\r\nimport { comparePrimitives, equals } from \"./.fable/fable-library.3.1.2/Util.js\";\r\nimport { getGameId } from \"./Cookies.fs.js\";\r\nimport { removeCookies, setCookies, WebSocket_disconnectWebsocket, WebSocket_connectWebSocketCmd, loadState, playCard, endGame, leaveGame, finishRound, startRound, joinGame, createGame, joinGameFromCookiesOrCheckGameExisits, resetWhenGameNotExists } from \"./Commands.fs.js\";\r\nimport { interpolate, toText } from \"./.fable/fable-library.3.1.2/String.js\";\r\nimport { map, defaultArgWith, some } from \"./.fable/fable-library.3.1.2/Option.js\";\r\nimport { Cmd_ofSub, Cmd_batch, Cmd_none, Cmd_OfFunc_result } from \"./.fable/Fable.Elmish.3.1.0/cmd.fs.js\";\r\nimport { collect, map as map_1, empty, singleton, append, delay } from \"./.fable/fable-library.3.1.2/Seq.js\";\r\nimport { MuiHelpers_createElement } from \"./.fable/Feliz.MaterialUI.1.2.5/Mui.fs.js\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { reactApi } from \"./.fable/Feliz.1.29.0/Interop.fs.js\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { createElement } from \"react\";\r\nimport * as react from \"react\";\r\nimport LockOutlined from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Browser_Types_Event__Event_get_Value } from \"./.fable/Fable.React.7.2.0/Fable.React.Extensions.fs.js\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { toolbar, loadingSpinner, card as card_1 } from \"./Elements.fs.js\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { Theme_dark, Theme_light, useStyles } from \"./Styling.fs.js\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { AlertDialog } from \"./Dialog.fs.js\";\r\n\r\nexport function init(isDarkMode) {\r\n    const currentUrl = RouterModule_urlSegments(window.location.hash, 1);\r\n    const id = (currentUrl.tail == null) ? \"\" : item(0, currentUrl);\r\n    return [new Model(isDarkMode ? (new Theme_1(0)) : (new Theme_1(1)), new Domain_GameModel(0), void 0, void 0, \"\", id, \"\", false, void 0), ((id !== \"\") ? (!equals(getGameId(), Domain_GameIdModule_create(id))) : false) ? resetWhenGameNotExists(id) : joinGameFromCookiesOrCheckGameExisits()];\r\n}\r\n\r\nexport function update(msg, state) {\r\n    let matchValue, gameId_1, player_2, matchValue_1, gameId_2, player_3, matchValue_2, gameId_3, player_4, matchValue_3, gameId_4, player_5, matchValue_4, gameId_5, player_6, activePatternResult39494, gameId_8, currentPlayer, matchValue_7, matchValue_9, gameId_12, player_8;\r\n    console.log(some(toText(interpolate(\"%A%P()\", [msg]))));\r\n    if (msg.tag === 0) {\r\n        if (state.Name === \"\") {\r\n            return [state, Cmd_OfFunc_result(new Msg(12, \"Name is empty!\"))];\r\n        }\r\n        else {\r\n            return [state, createGame(Domain_PlayerModule_create(state.Name))];\r\n        }\r\n    }\r\n    else if (msg.tag === 1) {\r\n        if (state.Id === \"\") {\r\n            return [state, Cmd_OfFunc_result(new Msg(12, \"Id is empty!\"))];\r\n        }\r\n        else if (state.Name === \"\") {\r\n            return [state, Cmd_OfFunc_result(new Msg(12, \"Name is empty!\"))];\r\n        }\r\n        else {\r\n            const player_1 = Domain_PlayerModule_create(state.Name);\r\n            return [state, joinGame(Domain_GameIdModule_create(state.Id), player_1)];\r\n        }\r\n    }\r\n    else if (msg.tag === 2) {\r\n        if (msg.fields[0].tag === 4) {\r\n            return [state, (matchValue = [state.GameId, state.CurrentPlayer], (matchValue[0] != null) ? ((matchValue[1] != null) ? (gameId_1 = matchValue[0], (player_2 = matchValue[1], startRound(gameId_1, player_2))) : Cmd_none()) : Cmd_none())];\r\n        }\r\n        else if (msg.fields[0].tag === 5) {\r\n            return [state, (matchValue_1 = [state.GameId, state.CurrentPlayer], (matchValue_1[0] != null) ? ((matchValue_1[1] != null) ? (gameId_2 = matchValue_1[0], (player_3 = matchValue_1[1], finishRound(gameId_2, player_3))) : Cmd_none()) : Cmd_none())];\r\n        }\r\n        else if (msg.fields[0].tag === 3) {\r\n            return [state, (matchValue_2 = [state.GameId, state.CurrentPlayer], (matchValue_2[0] != null) ? ((matchValue_2[1] != null) ? (gameId_3 = matchValue_2[0], (player_4 = matchValue_2[1], Cmd_batch(ofSeq(delay(() => append(singleton(leaveGame(gameId_3, player_4, msg.fields[0].fields[0])), delay(() => (equals(player_4, msg.fields[0].fields[0]) ? singleton(Cmd_OfFunc_result(new Msg(11))) : empty())))))))) : Cmd_none()) : Cmd_none())];\r\n        }\r\n        else if (msg.fields[0].tag === 1) {\r\n            return [state, (matchValue_3 = [state.GameId, state.CurrentPlayer], (matchValue_3[0] != null) ? ((matchValue_3[1] != null) ? (gameId_4 = matchValue_3[0], (player_5 = matchValue_3[1], endGame(gameId_4, player_5))) : Cmd_none()) : Cmd_none())];\r\n        }\r\n        else if (msg.fields[0].tag === 6) {\r\n            return [state, (matchValue_4 = [state.GameId, state.CurrentPlayer], (matchValue_4[0] != null) ? ((matchValue_4[1] != null) ? (gameId_5 = matchValue_4[0], (player_6 = matchValue_4[1], playCard(gameId_5, player_6, msg.fields[0].fields[0]))) : Cmd_none()) : Cmd_none())];\r\n        }\r\n        else {\r\n            return [state, Cmd_none()];\r\n        }\r\n    }\r\n    else if (msg.tag === 3) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, state.CurrentPlayer, msg.fields[0], state.Id, state.Error, state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 4) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, state.CurrentPlayer, state.Name, msg.fields[0], state.Error, state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 5) {\r\n        return [new Model(state.Theme, state.CurrentGameState, msg.fields[0], state.CurrentPlayer, state.Name, state.Id, state.Error, state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 6) {\r\n        const matchValue_5 = state.GameId;\r\n        if (matchValue_5 != null) {\r\n            return [state, loadState(matchValue_5)];\r\n        }\r\n        else {\r\n            return [state, Cmd_none()];\r\n        }\r\n    }\r\n    else if (msg.tag === 7) {\r\n        const gameId_9 = (activePatternResult39494 = Domain_GameModelModule_$007CGotGameId$007C_$007C(msg.fields[0]), (activePatternResult39494 != null) ? (gameId_8 = activePatternResult39494, gameId_8) : (void 0));\r\n        const matchValue_6 = [msg.fields[0], state.CurrentPlayer];\r\n        let pattern_matching_result, gameId_10;\r\n        if (matchValue_6[0].tag === 2) {\r\n            pattern_matching_result = 0;\r\n            gameId_10 = matchValue_6[0].fields[0];\r\n        }\r\n        else {\r\n            const activePatternResult39497 = Domain_GameModelModule_$007CGotPlayers$007C_$007C(matchValue_6[0]);\r\n            if (activePatternResult39497 != null) {\r\n                if (activePatternResult39497.tail == null) {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                else {\r\n                    pattern_matching_result = 2;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 2;\r\n            }\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return [new Model(state.Theme, msg.fields[0], gameId_10, state.CurrentPlayer, state.Name, state.Id, \"\", state.IsLoading, state.WebSocket), Cmd_OfFunc_result(new Msg(11))];\r\n            }\r\n            case 1: {\r\n                return [new Model(state.Theme, msg.fields[0], gameId_9, state.CurrentPlayer, state.Name, state.Id, \"\", state.IsLoading, state.WebSocket), Cmd_OfFunc_result(new Msg(11))];\r\n            }\r\n            case 2: {\r\n                let pattern_matching_result_1;\r\n                const activePatternResult39496 = Domain_GameModelModule_$007CGotPlayers$007C_$007C(matchValue_6[0]);\r\n                if (activePatternResult39496 != null) {\r\n                    if (matchValue_6[1] != null) {\r\n                        if (currentPlayer = matchValue_6[1], !exists((p) => equals(p, currentPlayer), activePatternResult39496)) {\r\n                            pattern_matching_result_1 = 0;\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        return [new Model(state.Theme, msg.fields[0], gameId_9, state.CurrentPlayer, state.Name, state.Id, \"\", state.IsLoading, state.WebSocket), Cmd_OfFunc_result(new Msg(11))];\r\n                    }\r\n                    case 1: {\r\n                        return [new Model(state.Theme, msg.fields[0], gameId_9, state.CurrentPlayer, state.Name, state.Id, \"\", state.IsLoading, state.WebSocket), Cmd_none()];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (msg.tag === 8) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, msg.fields[0], state.Name, state.Id, state.Error, state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 9) {\r\n        return [state, WebSocket_connectWebSocketCmd(msg.fields[0])];\r\n    }\r\n    else if (msg.tag === 10) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, state.CurrentPlayer, state.Name, state.Id, state.Error, state.IsLoading, msg.fields[0]), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 11) {\r\n        return [state, (matchValue_7 = state.WebSocket, (matchValue_7 != null) ? WebSocket_disconnectWebsocket(matchValue_7) : Cmd_none())];\r\n    }\r\n    else if (msg.tag === 12) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, state.CurrentPlayer, state.Name, state.Id, msg.fields[0], state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 13) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, state.CurrentPlayer, state.Name, state.Id, \"\", state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 14) {\r\n        return [new Model((state.Theme.tag === 1) ? (new Theme_1(0)) : (new Theme_1(1)), state.CurrentGameState, state.GameId, state.CurrentPlayer, state.Name, state.Id, state.Error, state.IsLoading, state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 15) {\r\n        return [new Model(state.Theme, state.CurrentGameState, state.GameId, state.CurrentPlayer, state.Name, state.Id, state.Error, msg.fields[0], state.WebSocket), Cmd_none()];\r\n    }\r\n    else if (msg.tag === 16) {\r\n        let pattern_matching_result_2;\r\n        if (msg.fields[0].tail != null) {\r\n            if (msg.fields[0].tail.tail == null) {\r\n                pattern_matching_result_2 = 0;\r\n            }\r\n            else {\r\n                pattern_matching_result_2 = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result_2 = 1;\r\n        }\r\n        switch (pattern_matching_result_2) {\r\n            case 0: {\r\n                return [state, Cmd_ofSub((_arg1) => {\r\n                    const queryString = empty_1();\r\n                    defaultArgWith(map((tupledArg) => {\r\n                        RouterModule_nav(append_1(tupledArg[0], singleton_1(tupledArg[1] + RouterModule_encodeQueryString(queryString))), 1, 1);\r\n                    }, RouterModule_trySeparateLast(msg.fields[0])), () => {\r\n                        RouterModule_nav(singleton_1(RouterModule_encodeQueryString(queryString)), 1, 1);\r\n                    });\r\n                })];\r\n            }\r\n            case 1: {\r\n                return [state, Cmd_none()];\r\n            }\r\n        }\r\n    }\r\n    else if (msg.tag === 17) {\r\n        return [state, (matchValue_9 = [state.GameId, state.CurrentPlayer], (matchValue_9[0] != null) ? ((matchValue_9[1] != null) ? (gameId_12 = matchValue_9[0], (player_8 = matchValue_9[1], setCookies(gameId_12, player_8))) : Cmd_none()) : Cmd_none())];\r\n    }\r\n    else if (msg.tag === 18) {\r\n        return [state, Cmd_none()];\r\n    }\r\n    else {\r\n        console.log(some(\"reseting State\"));\r\n        return [new Model(state.Theme, new Domain_GameModel(0), void 0, void 0, \"\", \"\", \"\", false, void 0), Cmd_batch(ofArray([removeCookies(), Cmd_OfFunc_result(new Msg(16, singleton_1(\"\")))]))];\r\n    }\r\n}\r\n\r\nexport function renderLoginForm(classes, title, buttonText, onTextChange, onClick, state) {\r\n    return MuiHelpers_createElement(Container, [[\"component\", \"main\"], [\"maxWidth\", \"xs\"], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(Paper, [[\"classes.root\", classes.loginPaper], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(state.IsLoading ? singleton(MuiHelpers_createElement(CircularProgress, [[\"color\", \"secondary\"]])) : singleton(MuiHelpers_createElement(Avatar, [[\"classes.root\", classes.loginAvatar], [\"children\", reactApi.Children.toArray([react.createElement(LockOutlined, {})])]])), delay(() => append(singleton(MuiHelpers_createElement(Typography, [[\"component\", \"h1\"], [\"variant\", \"h5\"], [\"children\", title]])), delay(() => singleton(createElement(\"form\", {\r\n        className: classes.loginForm,\r\n        children: reactApi.Children.toArray([MuiHelpers_createElement(TextField, [[\"value\", state.Name], [\"onChange\", (e) => {\r\n            onTextChange(Browser_Types_Event__Event_get_Value(e));\r\n        }], [\"variant\", \"outlined\"], [\"margin\", \"normal\"], [\"required\", true], [\"fullWidth\", true], [\"id\", \"name\"], [\"label\", \"Name\"], [\"name\", \"name\"], [\"autoFocus\", true]]), MuiHelpers_createElement(Button, [[\"type\", \"submit\"], [\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"primary\"], [\"classes.root\", classes.loginSubmit], [\"children\", buttonText], [\"disabled\", state.IsLoading], [\"onClick\", (e_1) => {\r\n            e_1.preventDefault();\r\n            onClick();\r\n        }]])]),\r\n    }))))))))))]])])]]);\r\n}\r\n\r\nexport function renderCreateGameView(classes, state, dispatch) {\r\n    return MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 2], [\"children\", reactApi.Children.toArray([renderLoginForm(classes, \"Create Game\", \"Create Game!\", (arg) => {\r\n        dispatch(new Msg(3, arg));\r\n    }, () => {\r\n        dispatch(new Msg(0));\r\n    }, state)])]]);\r\n}\r\n\r\nexport function renderJoinGameView(classes, state, dispatch) {\r\n    return MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 2], [\"children\", reactApi.Children.toArray([renderLoginForm(classes, \"Join Game\", \"Join Game!\", (arg) => {\r\n        dispatch(new Msg(3, arg));\r\n    }, () => {\r\n        dispatch(new Msg(1));\r\n    }, state)])]]);\r\n}\r\n\r\nexport function renderStartView(classes, state, dispatch) {\r\n    const children = ofSeq(delay(() => append(singleton(MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 2], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 12], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(Paper, [[\"classes.root\", classes.centerPaper], [\"children\", reactApi.Children.toArray([createElement(\"h1\", {\r\n        children: [\"Welcome to the F# Planing Poker Game\"],\r\n    })])]])])]])])]])), delay(() => ((state.Id === \"\") ? singleton(renderCreateGameView(classes, state, dispatch)) : singleton(renderJoinGameView(classes, state, dispatch)))))));\r\n    return createElement(\"div\", {\r\n        children: reactApi.Children.toArray(Array.from(children)),\r\n    });\r\n}\r\n\r\nexport function renderAdminView(classes, state, inGameState, dispatch) {\r\n    const children = ofSeq(delay(() => {\r\n        let matchValue;\r\n        return append((matchValue = inGameState.State, (matchValue.tag === 2) ? singleton(MuiHelpers_createElement(Button, [[\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"primary\"], [\"classes.root\", classes.loginSubmit], [\"children\", \"Start Round!\"], [\"disabled\", state.IsLoading], [\"onClick\", (e) => {\r\n            e.preventDefault();\r\n            dispatch(new Msg(2, new Domain_Msg(4)));\r\n        }]])) : ((matchValue.tag === 1) ? singleton(MuiHelpers_createElement(Button, [[\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"primary\"], [\"classes.root\", classes.loginSubmit], [\"children\", \"Finish the Round! (before everyone has choosen!)\"], [\"disabled\", state.IsLoading], [\"onClick\", (e_1) => {\r\n            dispatch(new Msg(2, new Domain_Msg(5)));\r\n        }]])) : singleton(MuiHelpers_createElement(Button, [[\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"primary\"], [\"classes.root\", classes.loginSubmit], [\"children\", \"Start Round!\"], [\"disabled\", state.IsLoading], [\"onClick\", (e) => {\r\n            e.preventDefault();\r\n            dispatch(new Msg(2, new Domain_Msg(4)));\r\n        }]])))), delay(() => singleton(MuiHelpers_createElement(Button, [[\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"secondary\"], [\"classes.root\", classes.loginSubmit], [\"children\", \"End Game!!!\"], [\"disabled\", state.IsLoading], [\"onClick\", (e_2) => {\r\n            dispatch(new Msg(2, new Domain_Msg(1)));\r\n        }]]))));\r\n    }));\r\n    return createElement(\"div\", {\r\n        children: reactApi.Children.toArray(Array.from(children)),\r\n    });\r\n}\r\n\r\nexport function renderPlayerAdminView(classes, state, player, dispatch) {\r\n    const children = singleton_1(MuiHelpers_createElement(Button, [[\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"primary\"], [\"classes.root\", classes.loginSubmit], [\"children\", \"Remove Player!\"], [\"disabled\", state.IsLoading], [\"onClick\", (e) => {\r\n        e.preventDefault();\r\n        dispatch(new Msg(2, new Domain_Msg(3, player)));\r\n    }]]));\r\n    return createElement(\"div\", {\r\n        children: reactApi.Children.toArray(Array.from(children)),\r\n    });\r\n}\r\n\r\nexport function renderPlayerView(classes, state, player, dispatch) {\r\n    const children = singleton_1(MuiHelpers_createElement(Button, [[\"fullWidth\", true], [\"variant\", \"contained\"], [\"color\", \"secondary\"], [\"classes.root\", classes.loginSubmit], [\"children\", \"Leave the Game!\"], [\"disabled\", state.IsLoading], [\"onClick\", (e) => {\r\n        dispatch(new Msg(2, new Domain_Msg(3, player)));\r\n    }]]));\r\n    return createElement(\"div\", {\r\n        children: reactApi.Children.toArray(Array.from(children)),\r\n    });\r\n}\r\n\r\nexport function renderDeck(state, inGameState, dispatch) {\r\n    return MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 2], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => map_1((c) => MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 1], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => ((inGameState.State.tag === 1) ? singleton(card_1(1.3, true, () => {\r\n        dispatch(new Msg(2, new Domain_Msg(6, Domain_CardModule_create(c))));\r\n    }, c)) : singleton(card_1(1.3, false, () => {\r\n    }, c)))))))]]), [new Domain_CardValue(2), new Domain_CardValue(3), new Domain_CardValue(4), new Domain_CardValue(5), new Domain_CardValue(6), new Domain_CardValue(7), new Domain_CardValue(8), new Domain_CardValue(9), new Domain_CardValue(10), new Domain_CardValue(12), new Domain_CardValue(11), new Domain_CardValue(13)])))))]]);\r\n}\r\n\r\nexport function renderPlayerState(classes, state, inGameState, player, currentPlayer, isAdmin, dispatch) {\r\n    const patternInput = Domain_PlayerModule_extract(player);\r\n    return MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(Card, [[\"classes.root\", classes.playerCard], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(singleton(MuiHelpers_createElement(Typography, [[\"align\", \"center\"], [\"variant\", \"h4\"], [\"children\", patternInput[1]]])), delay(() => {\r\n        let matchValue, playedCard, matchValue_1;\r\n        return append((matchValue = tryFind((pc) => equals(pc.Player, player), inGameState.PlayedCards), (matchValue == null) ? singleton(createElement(\"div\", {\r\n            style: {\r\n                height: 149,\r\n            },\r\n        })) : (playedCard = matchValue, singleton(card_1(1.6, (matchValue_1 = inGameState.State, (matchValue_1.tag === 0) ? equals(player, currentPlayer) : ((matchValue_1.tag === 2) ? true : equals(player, currentPlayer))), () => {\r\n        }, Domain_CardModule_extract(playedCard.Card))))), delay(() => (isAdmin ? singleton(renderPlayerAdminView(classes, state, player, dispatch)) : empty())));\r\n    }))))))]])])]]);\r\n}\r\n\r\nexport function renderInGameView(classes, state, inGameState, currentPlayer, dispatch) {\r\n    return MuiHelpers_createElement(Container, [[\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => {\r\n        const patternInput = Domain_PlayerModule_extract(currentPlayer);\r\n        const isAdmin = equals(Domain_GameModule_extract(inGameState.Game)[1], currentPlayer);\r\n        return append(singleton(loadingSpinner(state.IsLoading)), delay(() => {\r\n            const row1 = (length(inGameState.Players) <= 4) ? inGameState.Players : getSlice(0, 3, inGameState.Players);\r\n            return append(singleton(MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 1], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2]])), delay(() => append(map_1((player) => renderPlayerState(classes, state, inGameState, player, currentPlayer, isAdmin, dispatch), row1), delay(() => singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2]]))))))))))]])), delay(() => {\r\n                const row2 = (length(inGameState.Players) <= 6) ? getSlice(4, length(inGameState.Players) - 1, inGameState.Players) : getSlice(4, 5, inGameState.Players);\r\n                return append(singleton(MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 1], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append((length(row2) > 0) ? singleton(renderPlayerState(classes, state, inGameState, item(0, row2), currentPlayer, isAdmin, dispatch)) : singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2]])), delay(() => append(singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 8], [\"classes.root\", classes.playerCard], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => {\r\n                    const matchValue = inGameState.State;\r\n                    switch (matchValue.tag) {\r\n                        case 0: {\r\n                            return singleton(MuiHelpers_createElement(Typography, [[\"variant\", \"h4\"], [\"align\", \"center\"], [\"children\", \"Prepare yourself, the Game is starting soon!\"]]));\r\n                        }\r\n                        case 2: {\r\n                            return append(singleton(MuiHelpers_createElement(Typography, [[\"variant\", \"h4\"], [\"align\", \"center\"], [\"children\", \"Look, what we got here\"]])), delay(() => singleton(MuiHelpers_createElement(Table, [[\"children\", reactApi.Children.toArray([MuiHelpers_createElement(TableHead, [[\"children\", reactApi.Children.toArray([MuiHelpers_createElement(TableCell, [[\"children\", \"1\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"2\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"3\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"5\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"8\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"13\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"20\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"40\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"100\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"Stop\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"Coffee\"]]), MuiHelpers_createElement(TableCell, [[\"children\", \"WTF?\"]])])]]), MuiHelpers_createElement(TableBody, [[\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => {\r\n                                const counts = ofArray([Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(2), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(3), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(4), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(5), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(6), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(7), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(8), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(9), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(10), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(12), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(11), state.CurrentGameState), Domain_GameModelModule_countPlayeredCards(new Domain_CardValue(13), state.CurrentGameState)]);\r\n                                const maxCount = max(counts, {\r\n                                    Compare: comparePrimitives,\r\n                                }) | 0;\r\n                                return singleton(MuiHelpers_createElement(TableRow, [[\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => collect((count) => ((count === 0) ? singleton(MuiHelpers_createElement(TableCell, [[\"children\", toText(interpolate(\"-\", []))]])) : ((count === maxCount) ? singleton(MuiHelpers_createElement(TableCell, [[\"children\", reactApi.Children.toArray([MuiHelpers_createElement(Typography, [[\"variant\", \"h5\"], [\"children\", toText(interpolate(\"%P()\", [count]))], [\"color\", \"secondary\"]])])]])) : singleton(MuiHelpers_createElement(TableCell, [[\"children\", toText(interpolate(\"%P()\", [count]))]])))), counts)))))]]));\r\n                            }))))]])])]]))));\r\n                        }\r\n                        default: {\r\n                            return singleton(MuiHelpers_createElement(Typography, [[\"variant\", \"h4\"], [\"align\", \"center\"], [\"children\", \"Choose your Card!\"]]));\r\n                        }\r\n                    }\r\n                }))))]])), delay(() => ((length(row2) > 1) ? singleton(renderPlayerState(classes, state, inGameState, item(1, row2), currentPlayer, isAdmin, dispatch)) : singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2]])))))))))))]])), delay(() => {\r\n                    const row3 = (length(inGameState.Players) <= 10) ? getSlice(6, length(inGameState.Players) - 1, inGameState.Players) : getSlice(6, 9, inGameState.Players);\r\n                    return append(singleton(MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 1], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2]])), delay(() => append(map_1((player_1) => renderPlayerState(classes, state, inGameState, player_1, currentPlayer, isAdmin, dispatch), row3), delay(() => singleton(MuiHelpers_createElement(Grid, [[\"item\", true], [\"xs\", 2]]))))))))))]])), delay(() => append((length(inGameState.Players) > 10) ? map_1((chucks) => MuiHelpers_createElement(Grid, [[\"container\", true], [\"spacing\", 1], [\"children\", reactApi.Children.toArray(Array.from(ofSeq(delay(() => map_1((player_2) => renderPlayerState(classes, state, inGameState, player_2, currentPlayer, isAdmin, dispatch), chucks)))))]]), chunkBySize(6, getSlice(11, void 0, inGameState.Players))) : empty(), delay(() => append(singleton(renderDeck(state, inGameState, dispatch)), delay(() => append((!isAdmin) ? singleton(renderPlayerView(classes, state, currentPlayer, dispatch)) : empty(), delay(() => (isAdmin ? singleton(renderAdminView(classes, state, inGameState, dispatch)) : empty())))))))));\r\n                }));\r\n            }));\r\n        }));\r\n    }))))]]);\r\n}\r\n\r\nexport function view(state, dispatch) {\r\n    console.log(some(toText(interpolate(\"%A%P()\", [state]))));\r\n    const classes = useStyles();\r\n    return RouterModule_router({\r\n        onUrlChanged: (arg) => {\r\n            dispatch(new Msg(18, arg));\r\n        },\r\n        application: react.createElement(react.Fragment, {}, MuiHelpers_createElement(ThemeProvider, [[\"theme\", (state.Theme.tag === 1) ? Theme_light : Theme_dark], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(CssBaseline, []), createElement(\"div\", {\r\n            className: classes.root,\r\n            children: reactApi.Children.toArray([MuiHelpers_createElement(CssBaseline, []), MuiHelpers_createElement(AppBar, [[\"classes.root\", classes.appBar], [\"position\", \"fixed\"], [\"children\", reactApi.Children.toArray([toolbar(state, dispatch)])]]), createElement(\"main\", {\r\n                className: classes.content,\r\n                children: reactApi.Children.toArray(Array.from(ofSeq(delay(() => append(singleton(createElement(\"div\", {\r\n                    className: classes.toolbar,\r\n                })), delay(() => {\r\n                    let matchValue_1, currentPlayer;\r\n                    return append((matchValue_1 = [state.CurrentGameState, state.CurrentPlayer], (matchValue_1[0].tag === 1) ? ((matchValue_1[1] != null) ? (currentPlayer = matchValue_1[1], singleton(renderInGameView(classes, state, matchValue_1[0].fields[0], currentPlayer, dispatch))) : singleton(MuiHelpers_createElement(Typography, [[\"children\", \"Somethings seems to not working here!\"]]))) : ((matchValue_1[0].tag === 2) ? singleton(MuiHelpers_createElement(Typography, [[\"children\", \"Wait ... for the end ...\"]])) : singleton(renderStartView(classes, state, dispatch)))), delay(() => singleton(AlertDialog(state.Error !== \"\", () => {\r\n                        dispatch(new Msg(13));\r\n                    }, \"Error\", state.Error))));\r\n                })))))),\r\n            })]),\r\n        })])]])),\r\n    });\r\n}\r\n\r\n","\r\nexport function Browser_Types_Event__Event_get_Value(this$) {\r\n    return this$.target.value;\r\n}\r\n\r\nexport function Browser_Types_Event__Event_get_Checked(this$) {\r\n    return this$.target.checked;\r\n}\r\n\r\n","import { MuiHelpers_createElement } from \"./.fable/Feliz.MaterialUI.1.2.5/Mui.fs.js\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { reactApi } from \"./.fable/Feliz.1.29.0/Interop.fs.js\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { singleton } from \"./.fable/fable-library.3.1.2/List.js\";\r\nimport { createElement } from \"react\";\r\n\r\nexport function AlertDialog(isOpen, onClose, title, text) {\r\n    const children_2 = singleton(MuiHelpers_createElement(Dialog, [[\"open\", isOpen], [\"children\", reactApi.Children.toArray([MuiHelpers_createElement(DialogTitle, [[\"children\", title]]), MuiHelpers_createElement(DialogContent, [[\"children\", reactApi.Children.toArray([MuiHelpers_createElement(DialogContentText, [[\"children\", text]])])]]), MuiHelpers_createElement(DialogActions, [[\"children\", reactApi.Children.toArray([MuiHelpers_createElement(Button, [[\"onClick\", (_arg1) => {\r\n        onClose();\r\n    }], [\"children\", \"OK\"]])])]])])]]));\r\n    return createElement(\"div\", {\r\n        children: reactApi.Children.toArray(Array.from(children_2)),\r\n    });\r\n}\r\n\r\n","import { useFeliz_React__React_useElmish_Static_17DC4F1D } from \"./.fable/Feliz.UseElmish.1.5.0/UseElmish.fs.js\";\r\nimport { view, update, init } from \"./Index.fs.js\";\r\n\r\nexport function PlaningPoker() {\r\n    const isDarkMode = true;\r\n    const patternInput = useFeliz_React__React_useElmish_Static_17DC4F1D(init(isDarkMode), update, [isDarkMode]);\r\n    return view(patternInput[0], patternInput[1]);\r\n}\r\n\r\n","import * as styling from \"./styles/styling.scss\";\r\nimport { render } from \"react-dom\";\r\nimport { createElement } from \"react\";\r\nimport { PlaningPoker } from \"./App.fs.js\";\r\n\r\n\r\nrender(createElement(PlaningPoker, null), document.getElementById(\"elmish-app\"));\r\n\r\n","import { compare, physicalHash, equals, structuralHash } from \"./Util.js\";\n\nexport function HashIdentity_FromFunctions(hash, eq) {\n    return {\n        Equals(x, y) {\n            return eq(x, y);\n        },\n        GetHashCode(x_1) {\n            return hash(x_1);\n        },\n    };\n}\n\nexport function HashIdentity_Structural() {\n    return HashIdentity_FromFunctions(structuralHash, equals);\n}\n\nexport function HashIdentity_Reference() {\n    return HashIdentity_FromFunctions(physicalHash, (e1, e2) => (e1 === e2));\n}\n\nexport function ComparisonIdentity_FromFunction(comparer) {\n    return {\n        Compare(x, y) {\n            return comparer(x, y);\n        },\n    };\n}\n\nexport function ComparisonIdentity_Structural() {\n    return ComparisonIdentity_FromFunction(compare);\n}\n\n","import { substring, format, isNullOrEmpty, join } from \"./String.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { clear, int32ToString } from \"./Util.js\";\nimport { toString } from \"./Types.js\";\nimport { sumBy } from \"./Seq.js\";\n\nexport class StringBuilder {\n    constructor(value, capacity) {\n        this.buf = [];\n        if (!isNullOrEmpty(value)) {\n            void (this.buf.push(value));\n        }\n    }\n    toString() {\n        const __ = this;\n        return join(\"\", __.buf);\n    }\n}\n\nexport function StringBuilder$reflection() {\n    return class_type(\"System.Text.StringBuilder\", void 0, StringBuilder);\n}\n\nexport function StringBuilder_$ctor_Z18115A39(value, capacity) {\n    return new StringBuilder(value, capacity);\n}\n\nexport function StringBuilder_$ctor_Z524259A4(capacity) {\n    return StringBuilder_$ctor_Z18115A39(\"\", capacity);\n}\n\nexport function StringBuilder_$ctor_Z721C83C5(value) {\n    return StringBuilder_$ctor_Z18115A39(value, 16);\n}\n\nexport function StringBuilder_$ctor() {\n    return StringBuilder_$ctor_Z18115A39(\"\", 16);\n}\n\nexport function StringBuilder__Append_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    return x;\n}\n\nexport function StringBuilder__Append_244C7CD6(x, c) {\n    void (x.buf.push(c));\n    return x;\n}\n\nexport function StringBuilder__Append_Z524259A4(x, o) {\n    void (x.buf.push(int32ToString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_5E38073B(x, o) {\n    void (x.buf.push(o.toString()));\n    return x;\n}\n\nexport function StringBuilder__Append_Z1FBCCD16(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_4E60E31B(x, o) {\n    void (x.buf.push(toString(o)));\n    return x;\n}\n\nexport function StringBuilder__Append_695F1130(x, cs) {\n    void (x.buf.push(cs.join('')));\n    return x;\n}\n\nexport function StringBuilder__Append_43A65C09(x, s) {\n    void (x.buf.push(toString(s)));\n    return x;\n}\n\nexport function StringBuilder__AppendFormat_433E080(x, fmt, o) {\n    void (x.buf.push(format(fmt, o)));\n    return x;\n}\n\nexport function StringBuilder__AppendLine(x) {\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__AppendLine_Z721C83C5(x, s) {\n    void (x.buf.push(s));\n    void (x.buf.push(\"\\n\"));\n    return x;\n}\n\nexport function StringBuilder__get_Length(x) {\n    return sumBy((str) => str.length, x.buf, {\n        GetZero: () => 0,\n        Add: (x_1, y) => (x_1 + y),\n    });\n}\n\nexport function StringBuilder__ToString_Z37302880(x, firstIndex, length) {\n    return substring(toString(x), firstIndex, length);\n}\n\nexport function StringBuilder__Clear(x) {\n    clear(x.buf);\n    return x;\n}\n\n","import { structuralHash, equals } from \"./Util.js\";\nimport { HashIdentity_Structural, ComparisonIdentity_Structural } from \"./FSharp.Collections.js\";\nimport { StringBuilder__Append_Z721C83C5 } from \"./System.Text.js\";\n\nexport const LanguagePrimitives_GenericEqualityComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport const LanguagePrimitives_GenericEqualityERComparer = {\n    [\"System.Collections.IEqualityComparer.Equals541DA560\"](x, y) {\n        return equals(x, y);\n    },\n    [\"System.Collections.IEqualityComparer.GetHashCode4E60E31B\"](x_1) {\n        return structuralHash(x_1);\n    },\n};\n\nexport function LanguagePrimitives_FastGenericComparer() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericComparerFromTable() {\n    return ComparisonIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparer() {\n    return HashIdentity_Structural();\n}\n\nexport function LanguagePrimitives_FastGenericEqualityComparerFromTable() {\n    return HashIdentity_Structural();\n}\n\nexport function Operators_Failure(message) {\n    return new Error(message);\n}\n\nexport function Operators_FailurePattern(exn) {\n    return exn.message;\n}\n\nexport function Operators_NullArg(x) {\n    throw (new Error(x));\n}\n\nexport function Operators_Using(resource, action) {\n    try {\n        return action(resource);\n    }\n    finally {\n        if (equals(resource, null)) {\n        }\n        else {\n            resource.Dispose();\n        }\n    }\n}\n\nexport function Operators_Lock(_lockObj, action) {\n    return action();\n}\n\nexport function ExtraTopLevelOperators_LazyPattern(input) {\n    return input.Value;\n}\n\nexport function PrintfModule_PrintFormatToStringBuilderThen(continuation, builder, format) {\n    return format.cont((s) => {\n        const value = StringBuilder__Append_Z721C83C5(builder, s);\n        void value;\n        return continuation();\n    });\n}\n\nexport function PrintfModule_PrintFormatToStringBuilder(builder, format) {\n    return PrintfModule_PrintFormatToStringBuilderThen(() => {\n        void undefined;\n    }, builder, format);\n}\n\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_2 } from \"./Option.js\";\nimport { Record, List } from \"./Types.js\";\nimport { fold as fold_1 } from \"./List.js\";\nimport { structuralHash, compare, equals, isArrayLike } from \"./Util.js\";\nimport { empty as empty_1, tryPick as tryPick_1, pick as pick_1, iterate as iterate_1, compareWith, toIterator, map as map_2, unfold, getEnumerator } from \"./Seq.js\";\nimport { format, join } from \"./String.js\";\nimport { LanguagePrimitives_FastGenericComparer } from \"./FSharp.Core.js\";\nimport { Dictionary_$ctor_6623D9B3 } from \"./MutableMap.js\";\n\nexport class MapTreeLeaf$2 {\n    constructor(k, v) {\n        this.k = k;\n        this.v = v;\n    }\n}\n\nexport function MapTreeLeaf$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeLeaf`2\", [gen0, gen1], MapTreeLeaf$2);\n}\n\nexport function MapTreeLeaf$2_$ctor_5BDDA1(k, v) {\n    return new MapTreeLeaf$2(k, v);\n}\n\nexport function MapTreeLeaf$2__get_Key(_) {\n    return _.k;\n}\n\nexport function MapTreeLeaf$2__get_Value(_) {\n    return _.v;\n}\n\nexport class MapTreeNode$2 extends MapTreeLeaf$2 {\n    constructor(k, v, left, right, h) {\n        super(k, v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function MapTreeNode$2$reflection(gen0, gen1) {\n    return class_type(\"Map.MapTreeNode`2\", [gen0, gen1], MapTreeNode$2, MapTreeLeaf$2$reflection(gen0, gen1));\n}\n\nexport function MapTreeNode$2_$ctor_499A11FD(k, v, left, right, h) {\n    return new MapTreeNode$2(k, v, left, right, h);\n}\n\nexport function MapTreeNode$2__get_Left(_) {\n    return _.left;\n}\n\nexport function MapTreeNode$2__get_Right(_) {\n    return _.right;\n}\n\nexport function MapTreeNode$2__get_Height(_) {\n    return _.h;\n}\n\nexport function MapTreeModule_empty() {\n    return void 0;\n}\n\nexport function MapTreeModule_sizeAux(acc_mut, m_mut) {\n    MapTreeModule_sizeAux:\n    while (true) {\n        const acc = acc_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                acc_mut = MapTreeModule_sizeAux(acc + 1, MapTreeNode$2__get_Left(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_sizeAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_size(x) {\n    return MapTreeModule_sizeAux(0, x);\n}\n\nexport function MapTreeModule_mk(l, k, v, r) {\n    let hl;\n    const m = l;\n    if (m != null) {\n        const m2 = m;\n        hl = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const m_1 = r;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        hr = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m_2 = ((hl < hr) ? hr : hl) | 0;\n    if (m_2 === 0) {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n    else {\n        return MapTreeNode$2_$ctor_499A11FD(k, v, l, r, m_2 + 1);\n    }\n}\n\nexport function MapTreeModule_rebalance(t1, k, v, t2) {\n    let m_2, m2_2, m_3, m2_3;\n    let t1h;\n    const m = t1;\n    if (m != null) {\n        const m2 = m;\n        t1h = ((m2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const m_1 = t2;\n    if (m_1 != null) {\n        const m2_1 = m_1;\n        t2h = ((m2_1 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_1) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_2(t2);\n        if (matchValue instanceof MapTreeNode$2) {\n            if ((m_2 = MapTreeNode$2__get_Left(matchValue), (m_2 != null) ? (m2_2 = m_2, (m2_2 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_2) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_2(MapTreeNode$2__get_Left(matchValue));\n                if (matchValue_1 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue_1)), MapTreeLeaf$2__get_Key(matchValue_1), MapTreeLeaf$2__get_Value(matchValue_1), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_1), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeModule_mk(t1, k, v, MapTreeNode$2__get_Left(matchValue)), MapTreeLeaf$2__get_Key(matchValue), MapTreeLeaf$2__get_Value(matchValue), MapTreeNode$2__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_2(t1);\n        if (matchValue_2 instanceof MapTreeNode$2) {\n            if ((m_3 = MapTreeNode$2__get_Right(matchValue_2), (m_3 != null) ? (m2_3 = m_3, (m2_3 instanceof MapTreeNode$2) ? MapTreeNode$2__get_Height(m2_3) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_2(MapTreeNode$2__get_Right(matchValue_2));\n                if (matchValue_3 instanceof MapTreeNode$2) {\n                    return MapTreeModule_mk(MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeNode$2__get_Left(matchValue_3)), MapTreeLeaf$2__get_Key(matchValue_3), MapTreeLeaf$2__get_Value(matchValue_3), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_3), k, v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Map.rebalance\"));\n                }\n            }\n            else {\n                return MapTreeModule_mk(MapTreeNode$2__get_Left(matchValue_2), MapTreeLeaf$2__get_Key(matchValue_2), MapTreeLeaf$2__get_Value(matchValue_2), MapTreeModule_mk(MapTreeNode$2__get_Right(matchValue_2), k, v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Map.rebalance\"));\n        }\n    }\n    else {\n        return MapTreeModule_mk(t1, k, v, t2);\n    }\n}\n\nexport function MapTreeModule_add(comparer, k, v, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_add(comparer, k, v, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c < 0) {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, MapTreeModule_empty(), m, 2);\n        }\n        else if (c === 0) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n        }\n        else {\n            return MapTreeNode$2_$ctor_499A11FD(k, v, m, MapTreeModule_empty(), 2);\n        }\n    }\n    else {\n        return MapTreeLeaf$2_$ctor_5BDDA1(k, v);\n    }\n}\n\nexport function MapTreeModule_tryFind(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_tryFind:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c === 0) {\n                return some(MapTreeLeaf$2__get_Value(m2));\n            }\n            else if (m2 instanceof MapTreeNode$2) {\n                comparer_mut = comparer;\n                k_mut = k;\n                m_mut = ((c < 0) ? MapTreeNode$2__get_Left(m2) : MapTreeNode$2__get_Right(m2));\n                continue MapTreeModule_tryFind;\n            }\n            else {\n                return void 0;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_find(comparer, k, m) {\n    const matchValue = MapTreeModule_tryFind(comparer, k, m);\n    if (matchValue == null) {\n        throw (new Error());\n    }\n    else {\n        return value_2(matchValue);\n    }\n}\n\nexport function MapTreeModule_partition1(comparer, f, k, v, acc1, acc2) {\n    if (f(k, v)) {\n        return [MapTreeModule_add(comparer, k, v, acc1), acc2];\n    }\n    else {\n        return [acc1, MapTreeModule_add(comparer, k, v, acc2)];\n    }\n}\n\nexport function MapTreeModule_partitionAux(comparer_mut, f_mut, m_mut, acc_0_mut, acc_1_mut) {\n    MapTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_2 = MapTreeModule_partitionAux(comparer, f, MapTreeNode$2__get_Right(m2), acc[0], acc[1]);\n                const acc_3 = MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue MapTreeModule_partitionAux;\n            }\n            else {\n                return MapTreeModule_partition1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_partition(comparer, f, m) {\n    return MapTreeModule_partitionAux(comparer, f, m, MapTreeModule_empty(), MapTreeModule_empty());\n}\n\nexport function MapTreeModule_filter1(comparer, f, k, v, acc) {\n    if (f(k, v)) {\n        return MapTreeModule_add(comparer, k, v, acc);\n    }\n    else {\n        return acc;\n    }\n}\n\nexport function MapTreeModule_filterAux(comparer_mut, f_mut, m_mut, acc_mut) {\n    MapTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, m = m_mut, acc = acc_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const acc_1 = MapTreeModule_filterAux(comparer, f, MapTreeNode$2__get_Left(m2), acc);\n                const acc_2 = MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc_1);\n                comparer_mut = comparer;\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                acc_mut = acc_2;\n                continue MapTreeModule_filterAux;\n            }\n            else {\n                return MapTreeModule_filter1(comparer, f, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_filter(comparer, f, m) {\n    return MapTreeModule_filterAux(comparer, f, m, MapTreeModule_empty());\n}\n\nexport function MapTreeModule_spliceOutSuccessor(m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            if (MapTreeNode$2__get_Left(m2) == null) {\n                return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2)];\n            }\n            else {\n                const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Left(m2));\n                return [patternInput[0], patternInput[1], MapTreeModule_mk(patternInput[2], MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2))];\n            }\n        }\n        else {\n            return [MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Map.spliceOutSuccessor\"));\n    }\n}\n\nexport function MapTreeModule_remove(comparer, k, m) {\n    if (m != null) {\n        const m2 = m;\n        const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n        if (m2 instanceof MapTreeNode$2) {\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_remove(comparer, k, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else if (c === 0) {\n            return MapTreeModule_empty();\n        }\n        else {\n            return m;\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_change(comparer, k, u, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c < 0) {\n                return MapTreeModule_rebalance(MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeNode$2__get_Right(m2));\n            }\n            else if (c === 0) {\n                const matchValue_1 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_1 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_1), MapTreeNode$2__get_Left(m2), MapTreeNode$2__get_Right(m2), MapTreeNode$2__get_Height(m2));\n                }\n                else if (MapTreeNode$2__get_Left(m2) == null) {\n                    return MapTreeNode$2__get_Right(m2);\n                }\n                else if (MapTreeNode$2__get_Right(m2) == null) {\n                    return MapTreeNode$2__get_Left(m2);\n                }\n                else {\n                    const patternInput = MapTreeModule_spliceOutSuccessor(MapTreeNode$2__get_Right(m2));\n                    return MapTreeModule_mk(MapTreeNode$2__get_Left(m2), patternInput[0], patternInput[1], patternInput[2]);\n                }\n            }\n            else {\n                return MapTreeModule_rebalance(MapTreeNode$2__get_Left(m2), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), MapTreeModule_change(comparer, k, u, MapTreeNode$2__get_Right(m2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (c_1 < 0) {\n                const matchValue_2 = u(void 0);\n                if (matchValue_2 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_2), MapTreeModule_empty(), m, 2);\n                }\n                else {\n                    return m;\n                }\n            }\n            else if (c_1 === 0) {\n                const matchValue_3 = u(some(MapTreeLeaf$2__get_Value(m2)));\n                if (matchValue_3 != null) {\n                    return MapTreeLeaf$2_$ctor_5BDDA1(k, value_2(matchValue_3));\n                }\n                else {\n                    return MapTreeModule_empty();\n                }\n            }\n            else {\n                const matchValue_4 = u(void 0);\n                if (matchValue_4 != null) {\n                    return MapTreeNode$2_$ctor_499A11FD(k, value_2(matchValue_4), m, MapTreeModule_empty(), 2);\n                }\n                else {\n                    return m;\n                }\n            }\n        }\n    }\n    else {\n        const matchValue = u(void 0);\n        if (matchValue != null) {\n            return MapTreeLeaf$2_$ctor_5BDDA1(k, value_2(matchValue));\n        }\n        else {\n            return m;\n        }\n    }\n}\n\nexport function MapTreeModule_mem(comparer_mut, k_mut, m_mut) {\n    MapTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            const c = comparer.Compare(k, MapTreeLeaf$2__get_Key(m2)) | 0;\n            if (m2 instanceof MapTreeNode$2) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Left(m2);\n                    continue MapTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iterOpt(f_mut, m_mut) {\n    MapTreeModule_iterOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                MapTreeModule_iterOpt(f, MapTreeNode$2__get_Left(m2));\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_iterOpt;\n            }\n            else {\n                f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_iter(f, m) {\n    MapTreeModule_iterOpt(f, m);\n}\n\nexport function MapTreeModule_tryPickOpt(f_mut, m_mut) {\n    MapTreeModule_tryPickOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const matchValue = MapTreeModule_tryPickOpt(f, MapTreeNode$2__get_Left(m2));\n                if (matchValue == null) {\n                    const matchValue_1 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                    if (matchValue_1 == null) {\n                        f_mut = f;\n                        m_mut = MapTreeNode$2__get_Right(m2);\n                        continue MapTreeModule_tryPickOpt;\n                    }\n                    else {\n                        return matchValue_1;\n                    }\n                }\n                else {\n                    return matchValue;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_tryPick(f, m) {\n    return MapTreeModule_tryPickOpt(f, m);\n}\n\nexport function MapTreeModule_existsOpt(f_mut, m_mut) {\n    MapTreeModule_existsOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_existsOpt(f, MapTreeNode$2__get_Left(m2)) ? true : f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_existsOpt;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_exists(f, m) {\n    return MapTreeModule_existsOpt(f, m);\n}\n\nexport function MapTreeModule_forallOpt(f_mut, m_mut) {\n    MapTreeModule_forallOpt:\n    while (true) {\n        const f = f_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                if (MapTreeModule_forallOpt(f, MapTreeNode$2__get_Left(m2)) ? f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)) : false) {\n                    f_mut = f;\n                    m_mut = MapTreeNode$2__get_Right(m2);\n                    continue MapTreeModule_forallOpt;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_forall(f, m) {\n    return MapTreeModule_forallOpt(f, m);\n}\n\nexport function MapTreeModule_map(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_map(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_map(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapiOpt(f, m) {\n    if (m != null) {\n        const m2 = m;\n        if (m2 instanceof MapTreeNode$2) {\n            const l2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Left(m2));\n            const v2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            const r2 = MapTreeModule_mapiOpt(f, MapTreeNode$2__get_Right(m2));\n            return MapTreeNode$2_$ctor_499A11FD(MapTreeLeaf$2__get_Key(m2), v2, l2, r2, MapTreeNode$2__get_Height(m2));\n        }\n        else {\n            return MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)));\n        }\n    }\n    else {\n        return MapTreeModule_empty();\n    }\n}\n\nexport function MapTreeModule_mapi(f, m) {\n    return MapTreeModule_mapiOpt(f, m);\n}\n\nexport function MapTreeModule_foldBackOpt(f_mut, m_mut, x_mut) {\n    MapTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, m = m_mut, x = x_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                const x_1 = MapTreeModule_foldBackOpt(f, MapTreeNode$2__get_Right(m2), x);\n                const x_2 = f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                f_mut = f;\n                m_mut = MapTreeNode$2__get_Left(m2);\n                x_mut = x_2;\n                continue MapTreeModule_foldBackOpt;\n            }\n            else {\n                return f(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_foldBack(f, m, x) {\n    return MapTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function MapTreeModule_foldOpt(f_mut, x_mut, m_mut) {\n    MapTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, m = m_mut;\n        if (m != null) {\n            const m2 = m;\n            if (m2 instanceof MapTreeNode$2) {\n                f_mut = f;\n                x_mut = f(MapTreeModule_foldOpt(f, x, MapTreeNode$2__get_Left(m2)), MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n                m_mut = MapTreeNode$2__get_Right(m2);\n                continue MapTreeModule_foldOpt;\n            }\n            else {\n                return f(x, MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_fold(f, x, m) {\n    return MapTreeModule_foldOpt(f, x, m);\n}\n\nexport function MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x) {\n    const foldFromTo = (f_1_mut, m_1_mut, x_1_mut) => {\n        foldFromTo:\n        while (true) {\n            const f_1 = f_1_mut, m_1 = m_1_mut, x_1 = x_1_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    const cLoKey = comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) | 0;\n                    const cKeyHi = comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) | 0;\n                    const x_2 = (cLoKey < 0) ? foldFromTo(f_1, MapTreeNode$2__get_Left(m2), x_1) : x_1;\n                    const x_3 = ((cLoKey <= 0) ? (cKeyHi <= 0) : false) ? f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_2) : x_2;\n                    if (cKeyHi < 0) {\n                        f_1_mut = f_1;\n                        m_1_mut = MapTreeNode$2__get_Right(m2);\n                        x_1_mut = x_3;\n                        continue foldFromTo;\n                    }\n                    else {\n                        return x_3;\n                    }\n                }\n                else if ((comparer.Compare(lo, MapTreeLeaf$2__get_Key(m2)) <= 0) ? (comparer.Compare(MapTreeLeaf$2__get_Key(m2), hi) <= 0) : false) {\n                    return f_1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2), x_1);\n                }\n                else {\n                    return x_1;\n                }\n            }\n            else {\n                return x_1;\n            }\n            break;\n        }\n    };\n    if (comparer.Compare(lo, hi) === 1) {\n        return x;\n    }\n    else {\n        return foldFromTo(f, m, x);\n    }\n}\n\nexport function MapTreeModule_foldSection(comparer, lo, hi, f, m, x) {\n    return MapTreeModule_foldSectionOpt(comparer, lo, hi, f, m, x);\n}\n\nexport function MapTreeModule_toList(m) {\n    const loop = (m_1_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const m_1 = m_1_mut, acc = acc_mut;\n            if (m_1 != null) {\n                const m2 = m_1;\n                if (m2 instanceof MapTreeNode$2) {\n                    m_1_mut = MapTreeNode$2__get_Left(m2);\n                    acc_mut = (new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], loop(MapTreeNode$2__get_Right(m2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List([MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)], acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(m, new List());\n}\n\nexport function MapTreeModule_toArray(m) {\n    return Array.from(MapTreeModule_toList(m));\n}\n\nexport function MapTreeModule_ofList(comparer, l) {\n    return fold_1((acc, tupledArg) => MapTreeModule_add(comparer, tupledArg[0], tupledArg[1], acc), MapTreeModule_empty(), l);\n}\n\nexport function MapTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    MapTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const patternInput = e[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            comparer_mut = comparer;\n            acc_mut = MapTreeModule_add(comparer, patternInput[0], patternInput[1], acc);\n            e_mut = e;\n            continue MapTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_ofArray(comparer, arr) {\n    let res = MapTreeModule_empty();\n    for (let idx = 0; idx <= (arr.length - 1); idx++) {\n        const forLoopVar = arr[idx];\n        res = MapTreeModule_add(comparer, forLoopVar[0], forLoopVar[1], res);\n    }\n    return res;\n}\n\nexport function MapTreeModule_ofSeq(comparer, c) {\n    if (isArrayLike(c)) {\n        return MapTreeModule_ofArray(comparer, c);\n    }\n    else if (c instanceof List) {\n        return MapTreeModule_ofList(comparer, c);\n    }\n    else {\n        const ie = getEnumerator(c);\n        try {\n            return MapTreeModule_mkFromEnumerator(comparer, MapTreeModule_empty(), ie);\n        }\n        finally {\n            ie.Dispose();\n        }\n    }\n}\n\nexport function MapTreeModule_copyToArray(m, arr, i) {\n    let j = i | 0;\n    MapTreeModule_iter((x, y) => {\n        arr[j] = [x, y];\n        j = (j + 1);\n    }, m);\n}\n\nexport class MapTreeModule_MapIterator$2 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function MapTreeModule_MapIterator$2$reflection(gen0, gen1) {\n    return record_type(\"Map.MapTreeModule.MapIterator`2\", [gen0, gen1], MapTreeModule_MapIterator$2, () => [[\"stack\", list_type(option_type(MapTreeLeaf$2$reflection(gen0, gen1)))], [\"started\", bool_type]]);\n}\n\nexport function MapTreeModule_collapseLHS(stack_mut) {\n    MapTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const rest = stack.tail;\n            const m = stack.head;\n            if (m != null) {\n                const m2 = m;\n                if (m2 instanceof MapTreeNode$2) {\n                    stack_mut = (new List(MapTreeNode$2__get_Left(m2), new List(MapTreeLeaf$2_$ctor_5BDDA1(MapTreeLeaf$2__get_Key(m2), MapTreeLeaf$2__get_Value(m2)), new List(MapTreeNode$2__get_Right(m2), rest))));\n                    continue MapTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue MapTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function MapTreeModule_mkIterator(m) {\n    return new MapTreeModule_MapIterator$2(MapTreeModule_collapseLHS(new List(m, new List())), false);\n}\n\nexport function MapTreeModule_notStarted() {\n    throw (new Error(\"enumeration not started\"));\n}\n\nexport function MapTreeModule_alreadyFinished() {\n    throw (new Error(\"enumeration already finished\"));\n}\n\nexport function MapTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n                }\n                else {\n                    return [MapTreeLeaf$2__get_Key(m), MapTreeLeaf$2__get_Value(m)];\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for current\"));\n            }\n        }\n        else {\n            return MapTreeModule_alreadyFinished();\n        }\n    }\n    else {\n        return MapTreeModule_notStarted();\n    }\n}\n\nexport function MapTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const m = matchValue.head;\n                if (m instanceof MapTreeNode$2) {\n                    throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = MapTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Map iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function MapTreeModule_mkIEnumerator(m) {\n    let i = MapTreeModule_mkIterator(m);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return MapTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return MapTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = MapTreeModule_mkIterator(m);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function MapTreeModule_toSeq(s) {\n    return unfold((en_1) => {\n        if (en_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            return [en_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), en_1];\n        }\n        else {\n            return void 0;\n        }\n    }, MapTreeModule_mkIEnumerator(s));\n}\n\nexport class FSharpMap {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpMap__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        if (that instanceof FSharpMap) {\n            const e1 = getEnumerator(this$);\n            try {\n                const e2 = getEnumerator(that);\n                try {\n                    const loop = () => {\n                        const m1 = e1[\"System.Collections.IEnumerator.MoveNext\"]();\n                        if (m1 === e2[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                            if (!m1) {\n                                return true;\n                            }\n                            else {\n                                const e1c = e1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                const e2c = e2[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                                if (equals(e1c[0], e2c[0]) ? equals(e1c[1], e2c[1]) : false) {\n                                    return loop();\n                                }\n                                else {\n                                    return false;\n                                }\n                            }\n                        }\n                        else {\n                            return false;\n                        }\n                    };\n                    return loop();\n                }\n                finally {\n                    e2.Dispose();\n                }\n            }\n            finally {\n                e1.Dispose();\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    toString() {\n        const this$ = this;\n        return (\"map [\" + join(\"; \", map_2((kv) => format(\"({0}, {1})\", kv[0], kv[1]), this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpMap\";\n    }\n    GetEnumerator() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const __ = this;\n        return MapTreeModule_mkIEnumerator(__.tree);\n    }\n    CompareTo(obj) {\n        const m = this;\n        if (obj instanceof FSharpMap) {\n            return compareWith((kvp1, kvp2) => {\n                const c = m.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n                return ((c !== 0) ? c : compare(kvp1[1], kvp2[1])) | 0;\n            }, m, obj) | 0;\n        }\n        else {\n            throw (new Error(\"not comparable\\\\nParameter name: obj\"));\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, x[0]) ? equals(FSharpMap__get_Item(m, x[0]), x[1]) : false;\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const m = this;\n        MapTreeModule_copyToArray(m.tree, arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    get size() {\n        const m = this;\n        return FSharpMap__get_Count(m) | 0;\n    }\n    clear() {\n        throw (new Error(\"Map cannot be mutated\"));\n    }\n    delete(_arg1) {\n        throw (new Error(\"Map cannot be mutated\"));\n        return false;\n    }\n    entries() {\n        const m = this;\n        return map_2((p) => [p[0], p[1]], m);\n    }\n    get(k) {\n        const m = this;\n        return FSharpMap__get_Item(m, k);\n    }\n    has(k) {\n        const m = this;\n        return FSharpMap__ContainsKey(m, k);\n    }\n    keys() {\n        const m = this;\n        return map_2((p) => p[0], m);\n    }\n    set(k, v) {\n        const m = this;\n        throw (new Error(\"Map cannot be mutated\"));\n        return m;\n    }\n    values() {\n        const m = this;\n        return map_2((p) => p[1], m);\n    }\n    forEach(f, thisArg) {\n        const m = this;\n        iterate_1((p) => {\n            f(p[1], p[0], m);\n        }, m);\n    }\n}\n\nexport function FSharpMap$reflection(gen0, gen1) {\n    return class_type(\"Map.FSharpMap\", [gen0, gen1], FSharpMap);\n}\n\nexport function FSharpMap_$ctor(comparer, tree) {\n    return new FSharpMap(comparer, tree);\n}\n\n(() => {\n    FSharpMap.empty = FSharpMap_$ctor(LanguagePrimitives_FastGenericComparer(), MapTreeModule_empty());\n})();\n\nexport function FSharpMap_get_Empty() {\n    return FSharpMap.empty;\n}\n\nexport function FSharpMap_Create(ie) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofSeq(comparer, ie));\n}\n\nexport function FSharpMap__get_Comparer(m) {\n    return m.comparer;\n}\n\nexport function FSharpMap__get_Tree(m) {\n    return m.tree;\n}\n\nexport function FSharpMap__Add(m, key, value) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_add(m.comparer, key, value, m.tree));\n}\n\nexport function FSharpMap__Change(m, key, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_change(m.comparer, key, f, m.tree));\n}\n\nexport function FSharpMap__get_IsEmpty(m) {\n    return m.tree == null;\n}\n\nexport function FSharpMap__get_Item(m, key) {\n    return MapTreeModule_find(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__TryPick(m, f) {\n    return MapTreeModule_tryPick(f, m.tree);\n}\n\nexport function FSharpMap__Exists(m, predicate) {\n    return MapTreeModule_exists(predicate, m.tree);\n}\n\nexport function FSharpMap__Filter(m, predicate) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_filter(m.comparer, predicate, m.tree));\n}\n\nexport function FSharpMap__ForAll(m, predicate) {\n    return MapTreeModule_forall(predicate, m.tree);\n}\n\nexport function FSharpMap__Fold(m, f, acc) {\n    return MapTreeModule_foldBack(f, m.tree, acc);\n}\n\nexport function FSharpMap__FoldSection(m, lo, hi, f, acc) {\n    return MapTreeModule_foldSection(m.comparer, lo, hi, f, m.tree, acc);\n}\n\nexport function FSharpMap__Iterate(m, f) {\n    MapTreeModule_iter(f, m.tree);\n}\n\nexport function FSharpMap__MapRange(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_map(f, m.tree));\n}\n\nexport function FSharpMap__Map(m, f) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_mapi(f, m.tree));\n}\n\nexport function FSharpMap__Partition(m, predicate) {\n    const patternInput = MapTreeModule_partition(m.comparer, predicate, m.tree);\n    return [FSharpMap_$ctor(m.comparer, patternInput[0]), FSharpMap_$ctor(m.comparer, patternInput[1])];\n}\n\nexport function FSharpMap__get_Count(m) {\n    return MapTreeModule_size(m.tree);\n}\n\nexport function FSharpMap__ContainsKey(m, key) {\n    return MapTreeModule_mem(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__Remove(m, key) {\n    return FSharpMap_$ctor(m.comparer, MapTreeModule_remove(m.comparer, key, m.tree));\n}\n\nexport function FSharpMap__TryGetValue(__, key, value) {\n    const matchValue = MapTreeModule_tryFind(__.comparer, key, __.tree);\n    if (matchValue == null) {\n        return false;\n    }\n    else {\n        const v = value_2(matchValue);\n        value.contents = v;\n        return true;\n    }\n}\n\nexport function FSharpMap__TryFind(m, key) {\n    return MapTreeModule_tryFind(m.comparer, key, m.tree);\n}\n\nexport function FSharpMap__ToList(m) {\n    return MapTreeModule_toList(m.tree);\n}\n\nexport function FSharpMap__ToArray(m) {\n    return MapTreeModule_toArray(m.tree);\n}\n\nexport function FSharpMap__ComputeHashCode(this$) {\n    const combineHash = (x, y) => (((x << 1) + y) + 631);\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const activePatternResult4295 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = combineHash(res, structuralHash(activePatternResult4295[0]));\n            res = combineHash(res, structuralHash(activePatternResult4295[1]));\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return res | 0;\n}\n\nexport function isEmpty(table) {\n    return FSharpMap__get_IsEmpty(table);\n}\n\nexport function add(key, value, table) {\n    return FSharpMap__Add(table, key, value);\n}\n\nexport function change(key, f, table) {\n    return FSharpMap__Change(table, key, f);\n}\n\nexport function find(key, table) {\n    return FSharpMap__get_Item(table, key);\n}\n\nexport function tryFind(key, table) {\n    return FSharpMap__TryFind(table, key);\n}\n\nexport function remove(key, table) {\n    return FSharpMap__Remove(table, key);\n}\n\nexport function containsKey(key, table) {\n    return FSharpMap__ContainsKey(table, key);\n}\n\nexport function iterate(action, table) {\n    FSharpMap__Iterate(table, action);\n}\n\nexport function tryPick(chooser, table) {\n    return FSharpMap__TryPick(table, chooser);\n}\n\nexport function pick(chooser, table) {\n    const matchValue = tryPick(chooser, table);\n    if (matchValue != null) {\n        return value_2(matchValue);\n    }\n    else {\n        throw (new Error());\n    }\n}\n\nexport function exists(predicate, table) {\n    return FSharpMap__Exists(table, predicate);\n}\n\nexport function filter(predicate, table) {\n    return FSharpMap__Filter(table, predicate);\n}\n\nexport function partition(predicate, table) {\n    return FSharpMap__Partition(table, predicate);\n}\n\nexport function forAll(predicate, table) {\n    return FSharpMap__ForAll(table, predicate);\n}\n\nexport function map(mapping, table) {\n    return FSharpMap__Map(table, mapping);\n}\n\nexport function fold(folder, state, table) {\n    return MapTreeModule_fold(folder, state, FSharpMap__get_Tree(table));\n}\n\nexport function foldBack(folder, table, state) {\n    return MapTreeModule_foldBack(folder, FSharpMap__get_Tree(table), state);\n}\n\nexport function toSeq(table) {\n    return map_2((kvp) => [kvp[0], kvp[1]], table);\n}\n\nexport function findKey(predicate, table) {\n    return pick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function tryFindKey(predicate, table) {\n    return tryPick_1((kvp) => {\n        const k = kvp[0];\n        if (predicate(k, kvp[1])) {\n            return some(k);\n        }\n        else {\n            return void 0;\n        }\n    }, table);\n}\n\nexport function ofList(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofSeq(elements) {\n    return FSharpMap_Create(elements);\n}\n\nexport function ofArray(elements) {\n    const comparer = LanguagePrimitives_FastGenericComparer();\n    return FSharpMap_$ctor(comparer, MapTreeModule_ofArray(comparer, elements));\n}\n\nexport function toList(table) {\n    return FSharpMap__ToList(table);\n}\n\nexport function toArray(table) {\n    return FSharpMap__ToArray(table);\n}\n\nexport function empty() {\n    return FSharpMap_get_Empty();\n}\n\nexport function createMutable(source, comparer) {\n    return Dictionary_$ctor_6623D9B3(source, comparer);\n}\n\nexport function groupBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const v = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            const key = projection(v);\n            if (dict.has(key)) {\n                void (dict.get(key).push(v));\n            }\n            else {\n                const value = dict.set(key, [v]);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return map_2((tupledArg) => [tupledArg[0], tupledArg[1]], dict.entries());\n}\n\nexport function countBy(projection, xs, comparer) {\n    const dict = createMutable(empty_1(), comparer);\n    const enumerator = getEnumerator(xs);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const key = projection(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            const value_1 = dict.has(key) ? dict.set(key, dict.get(key) + 1) : dict.set(key, 1);\n            void value_1;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return dict.entries();\n}\n\nexport function count(table) {\n    return FSharpMap__get_Count(table);\n}\n\n","import { Union, Record } from \"../fable-library.3.1.2/Types.js\";\r\nimport { union_type, tuple_type, lambda_type, unit_type, array_type, record_type, class_type, string_type } from \"../fable-library.3.1.2/Reflection.js\";\r\n\r\nexport class RecordField extends Record {\r\n    constructor(FieldName, FieldType, PropertyInfo) {\r\n        super();\r\n        this.FieldName = FieldName;\r\n        this.FieldType = FieldType;\r\n        this.PropertyInfo = PropertyInfo;\r\n    }\r\n}\r\n\r\nexport function RecordField$reflection() {\r\n    return record_type(\"Fable.SimpleJson.RecordField\", [], RecordField, () => [[\"FieldName\", string_type], [\"FieldType\", TypeInfo$reflection()], [\"PropertyInfo\", class_type(\"System.Reflection.PropertyInfo\")]]);\r\n}\r\n\r\nexport class UnionCase extends Record {\r\n    constructor(CaseName, CaseTypes, Info) {\r\n        super();\r\n        this.CaseName = CaseName;\r\n        this.CaseTypes = CaseTypes;\r\n        this.Info = Info;\r\n    }\r\n}\r\n\r\nexport function UnionCase$reflection() {\r\n    return record_type(\"Fable.SimpleJson.UnionCase\", [], UnionCase, () => [[\"CaseName\", string_type], [\"CaseTypes\", array_type(TypeInfo$reflection())], [\"Info\", class_type(\"Microsoft.FSharp.Reflection.UnionCaseInfo\")]]);\r\n}\r\n\r\nexport class TypeInfo extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"Unit\", \"String\", \"UInt16\", \"UInt32\", \"UInt64\", \"Int32\", \"Bool\", \"Float32\", \"Float\", \"Decimal\", \"Short\", \"Long\", \"Byte\", \"DateTime\", \"DateTimeOffset\", \"BigInt\", \"TimeSpan\", \"Guid\", \"Object\", \"Any\", \"Async\", \"Promise\", \"Option\", \"List\", \"Set\", \"Array\", \"Seq\", \"Tuple\", \"Map\", \"Dictionary\", \"ResizeArray\", \"HashSet\", \"Func\", \"Enum\", \"Record\", \"Union\"];\r\n    }\r\n}\r\n\r\nexport function TypeInfo$reflection() {\r\n    return union_type(\"Fable.SimpleJson.TypeInfo\", [], TypeInfo, () => [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [[\"Item\", lambda_type(unit_type, class_type(\"System.Type\"))]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, array_type(TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), TypeInfo$reflection(), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, TypeInfo$reflection())]], [[\"Item\", lambda_type(unit_type, array_type(TypeInfo$reflection()))]], [[\"Item\", lambda_type(unit_type, tuple_type(TypeInfo$reflection(), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, tuple_type(array_type(RecordField$reflection()), class_type(\"System.Type\")))]], [[\"Item\", lambda_type(unit_type, tuple_type(array_type(UnionCase$reflection()), class_type(\"System.Type\")))]]]);\r\n}\r\n\r\n","import { Union } from \"../fable-library.3.1.2/Types.js\";\r\nimport { union_type, class_type, list_type, bool_type, string_type, float64_type } from \"../fable-library.3.1.2/Reflection.js\";\r\n\r\nexport class Json extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"JNumber\", \"JString\", \"JBool\", \"JNull\", \"JArray\", \"JObject\"];\r\n    }\r\n}\r\n\r\nexport function Json$reflection() {\r\n    return union_type(\"Fable.SimpleJson.Json\", [], Json, () => [[[\"Item\", float64_type]], [[\"Item\", string_type]], [[\"Item\", bool_type]], [], [[\"Item\", list_type(Json$reflection())]], [[\"Item\", class_type(\"Microsoft.FSharp.Collections.FSharpMap`2\", [string_type, Json$reflection()])]]]);\r\n}\r\n\r\n","import { makeRangeStepFunction as makeDecimalRangeStepFunction } from \"./Decimal.js\";\nimport { makeRangeStepFunction as makeLongRangeStepFunction } from \"./Long.js\";\nimport { some, value } from \"./Option.js\";\nimport { compare, equals } from \"./Util.js\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.get_Current\"]() {\n        return this.current;\n    }\n    [\"System.Collections.IEnumerator.MoveNext\"]() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    [\"System.Collections.IEnumerator.Reset\"]() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return typeof o.GetEnumerator === \"function\"\n        ? o.GetEnumerator()\n        : new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        [Symbol.iterator]() { return this; },\n        next() {\n            const hasNext = en[\"System.Collections.IEnumerator.MoveNext\"]();\n            const current = hasNext ? en[\"System.Collections.IEnumerator.get_Current\"]() : undefined;\n            return { done: !hasNext, value: current };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nclass Seq {\n    constructor(f) {\n        this.f = f;\n    }\n    [Symbol.iterator]() { return new Seq(this.f); }\n    next() {\n        var _a;\n        this.iter = (_a = this.iter) !== null && _a !== void 0 ? _a : this.f();\n        return this.iter.next();\n    }\n    toString() {\n        return \"seq [\" + Array.from(this).join(\"; \") + \"]\";\n    }\n}\nfunction makeSeq(f) {\n    return new Seq(f);\n}\nfunction isArrayOrBufferView(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs);\n}\nexport function ofArray(xs) {\n    if (Array.isArray(xs)) {\n        return delay(() => xs);\n    }\n    else {\n        return delay(() => unfold((i) => i != null && i < xs.length ? [xs[i], i + 1] : undefined, 0));\n    }\n}\nexport function allPairs(xs, ys) {\n    let firstEl = true;\n    const ysCache = [];\n    return collect((x) => {\n        if (firstEl) {\n            firstEl = false;\n            return map((y) => {\n                ysCache.push(y);\n                return [x, y];\n            }, ys);\n        }\n        else {\n            return ysCache.map((y) => [x, y]);\n            // return map(function (i) {\n            //     return [x, ysCache[i]];\n            // }, rangeNumber(0, 1, ysCache.length - 1));\n        }\n    }, xs);\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, undefined];\n        return unfold(() => {\n            var _a, _b;\n            let cur;\n            if (!firstDone) {\n                cur = (_a = iters[0]) === null || _a === void 0 ? void 0 : _a.next();\n                if (cur != null && !cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [undefined, ys[Symbol.iterator]()];\n                }\n            }\n            cur = (_b = iters[1]) === null || _b === void 0 ? void 0 : _b.next();\n            return cur != null && !cur.done ? [cur.value, iters] : undefined;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output;\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = cur.value;\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = undefined;\n                    }\n                }\n            }\n            return innerIter != null ? [output, innerIter] : undefined;\n        }, undefined);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    let cur1;\n    let cur2;\n    let c = 0;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        c = f(cur1.value, cur2.value);\n        if (c !== 0) {\n            break;\n        }\n    }\n    return (c !== 0) ? c : (cur1.done && !cur2.done) ? -1 : (!cur1.done && cur2.done) ? 1 : 0;\n}\nexport function delay(f) {\n    return makeSeq(() => f()[Symbol.iterator]());\n}\nexport function empty() {\n    return delay(() => []);\n}\nexport function singleton(y) {\n    return delay(() => [y]);\n}\nexport function enumerateFromFunctions(factory, moveNext, current) {\n    return delay(() => unfold((e) => moveNext(e) ? [current(e), e] : undefined, factory()));\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : undefined, undefined));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            try {\n                return empty();\n            }\n            finally {\n                finalFn();\n            }\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : undefined;\n            }\n            catch (err) {\n                return undefined;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const ar2 = isArrayOrBufferView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? undefined : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : undefined, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return undefined;\n    }\n    if (isArrayOrBufferView(xs)) {\n        return i < xs.length ? some(xs[i]) : undefined;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return undefined;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => (f(x), undefined), undefined, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => (f(x, y), undefined), undefined, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => (f(i !== null && i !== void 0 ? i : 0, x), undefined), undefined, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => (f(i !== null && i !== void 0 ? i : 0, x, y), undefined), undefined, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? undefined : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return isArrayOrBufferView(xs)\n        ? xs.length\n        : fold((acc, _x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : undefined;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : undefined;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), undefined] : undefined;\n        }, undefined);\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        const cur = iter.next();\n        if (cur.done) {\n            return empty();\n        }\n        const hd = cur.value;\n        const tl = tail(xs);\n        const ys = scan(([_, last], next) => [last, next], [hd, hd], tl);\n        return skip(1, ys);\n    });\n}\nexport function rangeChar(first, last) {\n    const firstNum = first.charCodeAt(0);\n    const lastNum = last.charCodeAt(0);\n    return delay(() => unfold((x) => x <= lastNum ? [String.fromCharCode(x), x + 1] : undefined, firstNum));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeLongRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeDecimal(first, step, last) {\n    const stepFn = makeDecimalRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : undefined, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (isArrayOrBufferView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = isArrayOrBufferView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return undefined;\n        }, undefined);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function skip(n, xs) {\n    return makeSeq(() => {\n        const iter = xs[Symbol.iterator]();\n        for (let i = 1; i <= n; i++) {\n            if (iter.next().done) {\n                throw new Error(\"Seq has not enough elements\");\n            }\n        }\n        return iter;\n    });\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    return skip(1, xs);\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold(() => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, undefined];\n            }\n            return undefined;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? undefined : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = isArrayOrBufferView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return undefined;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return undefined;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return makeSeq(() => {\n        // Capture a copy of the first value in the closure\n        // so the sequence is restarted every time, see #1230\n        let acc = fst;\n        const iter = {\n            next() {\n                const res = f(acc);\n                if (res != null) {\n                    const v = value(res);\n                    if (v != null) {\n                        acc = v[1];\n                        return { done: false, value: v[0] };\n                    }\n                }\n                return { done: true, value: undefined };\n            },\n        };\n        return iter;\n    });\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return makeSeq(() => {\n        let window = [];\n        const iter = source[Symbol.iterator]();\n        const iter2 = {\n            next() {\n                let cur;\n                while (window.length < windowSize) {\n                    if ((cur = iter.next()).done) {\n                        return { done: true, value: undefined };\n                    }\n                    window.push(cur.value);\n                }\n                const value = window;\n                window = window.slice(1);\n                return { done: false, value };\n            },\n        };\n        return iter2;\n    });\n}\nexport function transpose(source) {\n    return makeSeq(() => {\n        const iters = Array.from(source, (x) => x[Symbol.iterator]());\n        const iter = {\n            next() {\n                if (iters.length === 0) {\n                    return { done: true, value: undefined }; // empty sequence\n                }\n                const results = Array.from(iters, (iter) => iter.next());\n                if (results[0].done) {\n                    if (!results.every((x) => x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    return { done: true, value: undefined };\n                }\n                else {\n                    if (!results.every((x) => !x.done)) {\n                        throw new Error(\"Sequences have different lengths\");\n                    }\n                    const values = results.map((x) => x.value);\n                    return { done: false, value: values };\n                }\n            },\n        };\n        return iter;\n    });\n}\n","import { equals } from \"./Util.js\";\nimport { Union } from \"./Types.js\";\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n    SnakeCase: 2,\n    SnakeCaseAllCaps: 3,\n    KebabCase: 4,\n};\nfunction dashify(str, separator) {\n    return str.replace(/[a-z]?[A-Z]/g, (m) => m.length === 1\n        ? m.toLowerCase()\n        : m.charAt(0) + separator + m.charAt(1).toLowerCase());\n}\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.SnakeCase:\n            return dashify(str, \"_\");\n        case CaseRules.SnakeCaseAllCaps:\n            return dashify(str, \"_\").toUpperCase();\n        case CaseRules.KebabCase:\n            return dashify(str, \"-\");\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function keyValueList(fields, caseRule = CaseRules.None) {\n    const obj = {};\n    const definedCaseRule = caseRule;\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    function assign(key, caseRule, value) {\n        key = changeCase(key, caseRule);\n        obj[key] = value;\n    }\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (kvPair instanceof Union) {\n            const name = kvPair.cases()[kvPair.tag];\n            kvPair = kvPair.fields.length === 0 ? name : [name].concat(kvPair.fields);\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    assign(kvPair[0], caseRule, true);\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    assign(kvPair[0], caseRule, value);\n                    break;\n                default:\n                    assign(kvPair[0], caseRule, kvPair.slice(1));\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            assign(kvPair, caseRule, true);\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return obj;\n}\n// TODO: Move these methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    if (map.has(key)) {\n        defaultValue.contents = map.get(key);\n        return true;\n    }\n    return false;\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(`The given key '${key}' was not present in the dictionary.`);\n    }\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util.js\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = Number.NaN;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (Number.isNaN(rep)) {\n            return match;\n        }\n        else {\n            return (rep < 10 && match.length > 1) ? \"0\" + rep : \"\" + rep;\n        }\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    var _a, _b, _c;\n    const d = new Date(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0));\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(((_b = date.offset) !== null && _b !== void 0 ? _b : 0));\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, ((_c = date.offset) !== null && _c !== void 0 ? _c : 0));\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format, _provider) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    var _a;\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + ((_a = date.offset) !== null && _a !== void 0 ? _a : 0), kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(input) {\n    if (input === null) {\n        throw new Error(\"Value cannot be null when parsing DateTime\");\n    }\n    if (input.trim() === \"\") {\n        throw new Error(\"An empty string is not recognized as a valid DateTime\");\n    }\n    let date = new Date(input);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(input);\n        if (m != null) {\n            let baseDate;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds =\n                    parseInt(timeParts[0], 10) * 3600 +\n                        parseInt(timeParts[1] || \"0\", 10) * 60 +\n                        parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function specifyKind(d, kind) {\n    return create(year(d), month(d), day(d), hour(d), minute(d), second(d), millisecond(d), kind);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    const newDate = DateTime(d.getTime() + ts, d.kind);\n    if (d.kind === 2 /* Local */) {\n        const oldTzOffset = d.getTimezoneOffset();\n        const newTzOffset = newDate.getTimezoneOffset();\n        return oldTzOffset !== newTzOffset\n            ? DateTime(newDate.getTime() + (newTzOffset - oldTzOffset) * 60000, d.kind)\n            : newDate;\n    }\n    else {\n        return newDate;\n    }\n}\nexport function addDays(d, v) {\n    return add(d, v * 86400000);\n}\nexport function addHours(d, v) {\n    return add(d, v * 3600000);\n}\nexport function addMinutes(d, v) {\n    return add(d, v * 60000);\n}\nexport function addSeconds(d, v) {\n    return add(d, v * 1000);\n}\nexport function addMilliseconds(d, v) {\n    return add(d, v);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? add(d, -that)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\nexport default DateTime;\n","export const symbol = Symbol(\"numeric\");\nexport function isNumeric(x) {\n    return typeof x === \"number\" || (x === null || x === void 0 ? void 0 : x[symbol]);\n}\nexport function compare(x, y) {\n    if (typeof x === \"number\") {\n        return x < y ? -1 : (x > y ? 1 : 0);\n    }\n    else {\n        return x.CompareTo(y);\n    }\n}\nexport function multiply(x, y) {\n    if (typeof x === \"number\") {\n        return x * y;\n    }\n    else {\n        return x[symbol]().multiply(y);\n    }\n}\nexport function toFixed(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toFixed(dp);\n    }\n    else {\n        return x[symbol]().toFixed(dp);\n    }\n}\nexport function toPrecision(x, sd) {\n    if (typeof x === \"number\") {\n        return x.toPrecision(sd);\n    }\n    else {\n        return x[symbol]().toPrecision(sd);\n    }\n}\nexport function toExponential(x, dp) {\n    if (typeof x === \"number\") {\n        return x.toExponential(dp);\n    }\n    else {\n        return x[symbol]().toExponential(dp);\n    }\n}\nexport function toHex(x) {\n    if (typeof x === \"number\") {\n        return (Number(x) >>> 0).toString(16);\n    }\n    else {\n        return x[symbol]().toHex();\n    }\n}\n","\"use strict\";\r\n\r\nexport function Parsimmon(action) {\r\n  if (!(this instanceof Parsimmon)) {\r\n    return new Parsimmon(action);\r\n  }\r\n  this._ = action;\r\n}\r\n\r\nvar _ = Parsimmon.prototype;\r\n\r\nexport function times(n, f) {\r\n  var i = 0;\r\n  for (i; i < n; i++) {\r\n    f(i);\r\n  }\r\n}\r\n\r\nexport function forEach(f, arr) {\r\n  times(arr.length, function(i) {\r\n    f(arr[i], i, arr);\r\n  });\r\n}\r\n\r\nexport function reduce(f, seed, arr) {\r\n  forEach(function(elem, i, arr) {\r\n    seed = f(seed, elem, i, arr);\r\n  }, arr);\r\n  return seed;\r\n}\r\n\r\nexport function map(f, arr) {\r\n  return reduce(\r\n    function(acc, elem, i, a) {\r\n      return acc.concat([f(elem, i, a)]);\r\n    },\r\n    [],\r\n    arr\r\n  );\r\n}\r\n\r\nexport function lshiftBuffer(input) {\r\n  var asTwoBytes = reduce(\r\n    function(a, v, i, b) {\r\n      return a.concat(\r\n        i === b.length - 1\r\n          ? Buffer.from([v, 0]).readUInt16BE(0)\r\n          : b.readUInt16BE(i)\r\n      );\r\n    },\r\n    [],\r\n    input\r\n  );\r\n  return Buffer.from(\r\n    map(function(x) {\r\n      return ((x << 1) & 0xffff) >> 8;\r\n    }, asTwoBytes)\r\n  );\r\n}\r\n\r\nfunction consumeBitsFromBuffer(n, input) {\r\n  var state = { v: 0, buf: input };\r\n  times(n, function() {\r\n    state = {\r\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\r\n      buf: lshiftBuffer(state.buf)\r\n    };\r\n  });\r\n  return state;\r\n}\r\n\r\nfunction bitPeekBuffer(input) {\r\n  return input[0] >> 7;\r\n}\r\n\r\nexport function sum(numArr) {\r\n  return reduce(\r\n    function(x, y) {\r\n      return x + y;\r\n    },\r\n    0,\r\n    numArr\r\n  );\r\n}\r\n\r\nexport function find(pred, arr) {\r\n  return reduce(\r\n    function(found, elem) {\r\n      return found || (pred(elem) ? elem : found);\r\n    },\r\n    null,\r\n    arr\r\n  );\r\n}\r\n\r\nfunction bufferExists() {\r\n  return typeof Buffer !== \"undefined\";\r\n}\r\n\r\nfunction ensureBuffer() {\r\n  if (!bufferExists()) {\r\n    throw new Error(\r\n      \"Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.\"\r\n    );\r\n  }\r\n}\r\n\r\nfunction bitSeq(alignments) {\r\n  ensureBuffer();\r\n  var totalBits = sum(alignments);\r\n  if (totalBits % 8 !== 0) {\r\n    throw new Error(\r\n      \"The bits [\" +\r\n        alignments.join(\", \") +\r\n        \"] add up to \" +\r\n        totalBits +\r\n        \" which is not an even number of bytes; the total should be divisible by 8\"\r\n    );\r\n  }\r\n  var bytes = totalBits / 8;\r\n\r\n  var tooBigRange = find(function(x) {\r\n    return x > 48;\r\n  }, alignments);\r\n  if (tooBigRange) {\r\n    throw new Error(\r\n      tooBigRange + \" bit range requested exceeds 48 bit (6 byte) Number max.\"\r\n    );\r\n  }\r\n\r\n  return new Parsimmon(function(input, i) {\r\n    var newPos = bytes + i;\r\n    if (newPos > input.length) {\r\n      return makeFailure(i, bytes.toString() + \" bytes\");\r\n    }\r\n    return makeSuccess(\r\n      newPos,\r\n      reduce(\r\n        function(acc, bits) {\r\n          var state = consumeBitsFromBuffer(bits, acc.buf);\r\n          return {\r\n            coll: acc.coll.concat(state.v),\r\n            buf: state.buf\r\n          };\r\n        },\r\n        { coll: [], buf: input.slice(i, newPos) },\r\n        alignments\r\n      ).coll\r\n    );\r\n  });\r\n}\r\n\r\nfunction bitSeqObj(namedAlignments) {\r\n  ensureBuffer();\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var fullAlignments = map(function(item) {\r\n    if (isArray(item)) {\r\n      var pair = item;\r\n      if (pair.length !== 2) {\r\n        throw new Error(\r\n          \"[\" +\r\n            pair.join(\", \") +\r\n            \"] should be length 2, got length \" +\r\n            pair.length\r\n        );\r\n      }\r\n      assertString(pair[0]);\r\n      assertNumber(pair[1]);\r\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\r\n        throw new Error(\"duplicate key in bitSeqObj: \" + pair[0]);\r\n      }\r\n      seenKeys[pair[0]] = true;\r\n      totalKeys++;\r\n      return pair;\r\n    } else {\r\n      assertNumber(item);\r\n      return [null, item];\r\n    }\r\n  }, namedAlignments);\r\n  if (totalKeys < 1) {\r\n    throw new Error(\r\n      \"bitSeqObj expects at least one named pair, got [\" +\r\n        namedAlignments.join(\", \") +\r\n        \"]\"\r\n    );\r\n  }\r\n  var namesOnly = map(function(pair) {\r\n    return pair[0];\r\n  }, fullAlignments);\r\n  var alignmentsOnly = map(function(pair) {\r\n    return pair[1];\r\n  }, fullAlignments);\r\n\r\n  return bitSeq(alignmentsOnly).map(function(parsed) {\r\n    var namedParsed = map(function(name, i) {\r\n      return [name, parsed[i]];\r\n    }, namesOnly);\r\n\r\n    return reduce(\r\n      function(obj, kv) {\r\n        if (kv[0] !== null) {\r\n          obj[kv[0]] = kv[1];\r\n        }\r\n        return obj;\r\n      },\r\n      {},\r\n      namedParsed\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseBufferFor(other, length) {\r\n  ensureBuffer();\r\n  return new Parsimmon(function(input, i) {\r\n    if (i + length > input.length) {\r\n      return makeFailure(i, length + \" bytes for \" + other);\r\n    }\r\n    return makeSuccess(i + length, input.slice(i, i + length));\r\n  });\r\n}\r\n\r\nfunction parseBuffer(length) {\r\n  return parseBufferFor(\"buffer\", length).map(function(unsafe) {\r\n    return Buffer.from(unsafe);\r\n  });\r\n}\r\n\r\nfunction encodedString(encoding, length) {\r\n  return parseBufferFor(\"string\", length).map(function(buff) {\r\n    return buff.toString(encoding);\r\n  });\r\n}\r\n\r\nfunction isInteger(value) {\r\n  return typeof value === \"number\" && Math.floor(value) === value;\r\n}\r\n\r\nfunction assertValidIntegerByteLengthFor(who, length) {\r\n  if (!isInteger(length) || length < 0 || length > 6) {\r\n    throw new Error(who + \" requires integer length in range [0, 6].\");\r\n  }\r\n}\r\n\r\nfunction uintBE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintBE\", length);\r\n  return parseBufferFor(\"uintBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction uintLE(length) {\r\n  assertValidIntegerByteLengthFor(\"uintLE\", length);\r\n  return parseBufferFor(\"uintLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readUIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction intBE(length) {\r\n  assertValidIntegerByteLengthFor(\"intBE\", length);\r\n  return parseBufferFor(\"intBE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntBE(0, length);\r\n  });\r\n}\r\n\r\nfunction intLE(length) {\r\n  assertValidIntegerByteLengthFor(\"intLE\", length);\r\n  return parseBufferFor(\"intLE(\" + length + \")\", length).map(function(buff) {\r\n    return buff.readIntLE(0, length);\r\n  });\r\n}\r\n\r\nfunction floatBE() {\r\n  return parseBufferFor(\"floatBE\", 4).map(function(buff) {\r\n    return buff.readFloatBE(0);\r\n  });\r\n}\r\n\r\nfunction floatLE() {\r\n  return parseBufferFor(\"floatLE\", 4).map(function(buff) {\r\n    return buff.readFloatLE(0);\r\n  });\r\n}\r\n\r\nfunction doubleBE() {\r\n  return parseBufferFor(\"doubleBE\", 8).map(function(buff) {\r\n    return buff.readDoubleBE(0);\r\n  });\r\n}\r\n\r\nfunction doubleLE() {\r\n  return parseBufferFor(\"doubleLE\", 8).map(function(buff) {\r\n    return buff.readDoubleLE(0);\r\n  });\r\n}\r\n\r\nfunction toArray(arrLike) {\r\n  return Array.prototype.slice.call(arrLike);\r\n}\r\n// -*- Helpers -*-\r\n\r\nfunction isParser(obj) {\r\n  return obj instanceof Parsimmon;\r\n}\r\n\r\nfunction isArray(x) {\r\n  return {}.toString.call(x) === \"[object Array]\";\r\n}\r\n\r\nfunction isBuffer(x) {\r\n  /* global Buffer */\r\n  return bufferExists() && Buffer.isBuffer(x);\r\n}\r\n\r\nexport function makeSuccess(index, value) {\r\n  return {\r\n    status: true,\r\n    index: index,\r\n    value: value,\r\n    furthest: -1,\r\n    expected: []\r\n  };\r\n}\r\n\r\nexport function makeFailure(index, expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  return {\r\n    status: false,\r\n    index: -1,\r\n    value: null,\r\n    furthest: index,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction mergeReplies(result, last) {\r\n  if (!last) {\r\n    return result;\r\n  }\r\n  if (result.furthest > last.furthest) {\r\n    return result;\r\n  }\r\n  var expected =\r\n    result.furthest === last.furthest\r\n      ? union(result.expected, last.expected)\r\n      : last.expected;\r\n  return {\r\n    status: result.status,\r\n    index: result.index,\r\n    value: result.value,\r\n    furthest: last.furthest,\r\n    expected: expected\r\n  };\r\n}\r\n\r\nfunction makeLineColumnIndex(input, i) {\r\n  if (isBuffer(input)) {\r\n    return {\r\n      offset: i,\r\n      line: -1,\r\n      column: -1\r\n    };\r\n  }\r\n  var lines = input.slice(0, i).split(\"\\n\");\r\n  // Note that unlike the character offset, the line and column offsets are\r\n  // 1-based.\r\n  var lineWeAreUpTo = lines.length;\r\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\r\n  return {\r\n    offset: i,\r\n    line: lineWeAreUpTo,\r\n    column: columnWeAreUpTo\r\n  };\r\n}\r\n\r\n// Returns the sorted set union of two arrays of strings\r\nfunction union(xs, ys) {\r\n  var obj = {};\r\n  for (var i = 0; i < xs.length; i++) {\r\n    obj[xs[i]] = true;\r\n  }\r\n  for (var j = 0; j < ys.length; j++) {\r\n    obj[ys[j]] = true;\r\n  }\r\n  var keys = [];\r\n  for (var k in obj) {\r\n    if ({}.hasOwnProperty.call(obj, k)) {\r\n      keys.push(k);\r\n    }\r\n  }\r\n  keys.sort();\r\n  return keys;\r\n}\r\n\r\nfunction assertParser(p) {\r\n  if (!isParser(p)) {\r\n    throw new Error(\"not a parser: \" + p);\r\n  }\r\n}\r\n\r\nfunction get(input, i) {\r\n  if (typeof input === \"string\") {\r\n    return input.charAt(i);\r\n  }\r\n  return input[i];\r\n}\r\n\r\n// TODO[ES5]: Switch to Array.isArray eventually.\r\nfunction assertArray(x) {\r\n  if (!isArray(x)) {\r\n    throw new Error(\"not an array: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertNumber(x) {\r\n  if (typeof x !== \"number\") {\r\n    throw new Error(\"not a number: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertRegexp(x) {\r\n  if (!(x instanceof RegExp)) {\r\n    throw new Error(\"not a regexp: \" + x);\r\n  }\r\n  var f = flags(x);\r\n  for (var i = 0; i < f.length; i++) {\r\n    var c = f.charAt(i);\r\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\r\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\r\n    // future, this will need to be revisited.\r\n    if (c !== \"i\" && c !== \"m\" && c !== \"u\") {\r\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\r\n    }\r\n  }\r\n}\r\n\r\nfunction assertFunction(x) {\r\n  if (typeof x !== \"function\") {\r\n    throw new Error(\"not a function: \" + x);\r\n  }\r\n}\r\n\r\nfunction assertString(x) {\r\n  if (typeof x !== \"string\") {\r\n    throw new Error(\"not a string: \" + x);\r\n  }\r\n}\r\n\r\n// -*- Error Formatting -*-\r\n\r\nvar linesBeforeStringError = 2;\r\nvar linesAfterStringError = 3;\r\nvar bytesPerLine = 8;\r\nvar bytesBefore = bytesPerLine * 5;\r\nvar bytesAfter = bytesPerLine * 4;\r\nvar defaultLinePrefix = \"  \";\r\n\r\nexport function repeat(string, amount) {\r\n  return new Array(amount + 1).join(string);\r\n}\r\n\r\nexport function formatExpected(expected) {\r\n  if (expected.length === 1) {\r\n    return \"Expected:\\n\\n\" + expected[0];\r\n  }\r\n  return \"Expected one of the following: \\n\\n\" + expected.join(\", \");\r\n}\r\n\r\nexport function leftPad(str, pad, char) {\r\n  var add = pad - str.length;\r\n  if (add <= 0) {\r\n    return str;\r\n  }\r\n  return repeat(char, add) + str;\r\n}\r\n\r\nfunction toChunks(arr, chunkSize) {\r\n  var length = arr.length;\r\n  var chunks = [];\r\n  var chunkIndex = 0;\r\n\r\n  if (length <= chunkSize) {\r\n    return [arr.slice()];\r\n  }\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    if (!chunks[chunkIndex]) {\r\n      chunks.push([]);\r\n    }\r\n\r\n    chunks[chunkIndex].push(arr[i]);\r\n\r\n    if ((i + 1) % chunkSize === 0) {\r\n      chunkIndex++;\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\r\nexport function rangeFromIndexAndOffsets(i, before, after, length) {\r\n  return {\r\n    // Guard against the negative upper bound for lines included in the output.\r\n    from: i - before > 0 ? i - before : 0,\r\n    to: i + after > length ? length : i + after\r\n  };\r\n}\r\n\r\nexport function byteRangeToRange(byteRange) {\r\n  // Exception for inputs smaller than `bytesPerLine`\r\n  if (byteRange.from === 0 && byteRange.to === 1) {\r\n    return {\r\n      from: byteRange.from,\r\n      to: byteRange.to\r\n    };\r\n  }\r\n\r\n  return {\r\n    from: byteRange.from / bytesPerLine,\r\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\r\n    to: Math.floor(byteRange.to / bytesPerLine)\r\n  };\r\n}\r\n\r\nexport function formatGot(input, error) {\r\n  var index = error.index;\r\n  var i = index.offset;\r\n\r\n  var verticalMarkerLength = 1;\r\n  var column;\r\n  var lineWithErrorIndex;\r\n  var lines;\r\n  var lineRange;\r\n  var lastLineNumberLabelLength;\r\n\r\n  if (i === input.length) {\r\n    return \"Got the end of the input\";\r\n  }\r\n\r\n  if (isBuffer(input)) {\r\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\r\n    var columnByteIndex = i - byteLineWithErrorIndex;\r\n    var byteRange = rangeFromIndexAndOffsets(\r\n      byteLineWithErrorIndex,\r\n      bytesBefore,\r\n      bytesAfter + bytesPerLine,\r\n      input.length\r\n    );\r\n    var bytes = input.slice(byteRange.from, byteRange.to);\r\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\r\n\r\n    var byteLines = map(function(byteRow) {\r\n      return map(function(byteValue) {\r\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\r\n        return leftPad(byteValue.toString(16), 2, \"0\");\r\n      }, byteRow);\r\n    }, bytesInChunks);\r\n\r\n    lineRange = byteRangeToRange(byteRange);\r\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\r\n    column = columnByteIndex * 3;\r\n\r\n    // Account for an extra space.\r\n    if (columnByteIndex >= 4) {\r\n      column += 1;\r\n    }\r\n\r\n    verticalMarkerLength = 2;\r\n    lines = map(function(byteLine) {\r\n      return byteLine.length <= 4\r\n        ? byteLine.join(\" \")\r\n        : byteLine.slice(0, 4).join(\" \") + \"  \" + byteLine.slice(4).join(\" \");\r\n    }, byteLines);\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  } else {\r\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\r\n    column = index.column - 1;\r\n    lineWithErrorIndex = index.line - 1;\r\n    lineRange = rangeFromIndexAndOffsets(\r\n      lineWithErrorIndex,\r\n      linesBeforeStringError,\r\n      linesAfterStringError,\r\n      inputLines.length\r\n    );\r\n\r\n    lines = inputLines.slice(lineRange.from, lineRange.to);\r\n    lastLineNumberLabelLength = lineRange.to.toString().length;\r\n  }\r\n\r\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\r\n\r\n  if (isBuffer(input)) {\r\n    lastLineNumberLabelLength = (\r\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\r\n    ).toString(16).length;\r\n\r\n    if (lastLineNumberLabelLength < 2) {\r\n      lastLineNumberLabelLength = 2;\r\n    }\r\n  }\r\n\r\n  var linesWithLineNumbers = reduce(\r\n    function(acc, lineSource, index) {\r\n      var isLineWithError = index === lineWithErrorCurrentIndex;\r\n      var prefix = isLineWithError ? \"> \" : defaultLinePrefix;\r\n      var lineNumberLabel;\r\n\r\n      if (isBuffer(input)) {\r\n        lineNumberLabel = leftPad(\r\n          ((lineRange.from + index) * 8).toString(16),\r\n          lastLineNumberLabelLength,\r\n          \"0\"\r\n        );\r\n      } else {\r\n        lineNumberLabel = leftPad(\r\n          (lineRange.from + index + 1).toString(),\r\n          lastLineNumberLabelLength,\r\n          \" \"\r\n        );\r\n      }\r\n\r\n      return [].concat(\r\n        acc,\r\n        [prefix + lineNumberLabel + \" | \" + lineSource],\r\n        isLineWithError\r\n          ? [\r\n              defaultLinePrefix +\r\n                repeat(\" \", lastLineNumberLabelLength) +\r\n                \" | \" +\r\n                leftPad(\"\", column, \" \") +\r\n                repeat(\"^\", verticalMarkerLength)\r\n            ]\r\n          : []\r\n      );\r\n    },\r\n    [],\r\n    lines\r\n  );\r\n\r\n  return linesWithLineNumbers.join(\"\\n\");\r\n}\r\n\r\nexport function formatError(input, error) {\r\n  return [\r\n    \"\\n\",\r\n    \"-- PARSING FAILED \" + repeat(\"-\", 50),\r\n    \"\\n\\n\",\r\n    formatGot(input, error),\r\n    \"\\n\\n\",\r\n    formatExpected(error.expected),\r\n    \"\\n\"\r\n  ].join(\"\");\r\n}\r\n\r\nexport function flags(re) {\r\n  var s = \"\" + re;\r\n  return s.slice(s.lastIndexOf(\"/\") + 1);\r\n}\r\n\r\nexport function anchoredRegexp(re) {\r\n  return RegExp(\"^(?:\" + re.source + \")\", flags(re));\r\n}\r\n\r\n// -*- Combinators -*-\r\n\r\nexport function seq() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = new Array(numParsers);\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      accum[j] = result.value;\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqObj() {\r\n  var seenKeys = {};\r\n  var totalKeys = 0;\r\n  var parsers = toArray(arguments);\r\n  var numParsers = parsers.length;\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    var p = parsers[j];\r\n    if (isParser(p)) {\r\n      continue;\r\n    }\r\n    if (isArray(p)) {\r\n      var isWellFormed =\r\n        p.length === 2 && typeof p[0] === \"string\" && isParser(p[1]);\r\n      if (isWellFormed) {\r\n        var key = p[0];\r\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\r\n          throw new Error(\"seqObj: duplicate key \" + key);\r\n        }\r\n        seenKeys[key] = true;\r\n        totalKeys++;\r\n        continue;\r\n      }\r\n    }\r\n    throw new Error(\r\n      \"seqObj arguments must be parsers or [string, parser] array pairs.\"\r\n    );\r\n  }\r\n  if (totalKeys === 0) {\r\n    throw new Error(\"seqObj expects at least one named parser, found zero\");\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    var accum = {};\r\n    for (var j = 0; j < numParsers; j += 1) {\r\n      var name;\r\n      var parser;\r\n      if (isArray(parsers[j])) {\r\n        name = parsers[j][0];\r\n        parser = parsers[j][1];\r\n      } else {\r\n        name = null;\r\n        parser = parsers[j];\r\n      }\r\n      result = mergeReplies(parser._(input, i), result);\r\n      if (!result.status) {\r\n        return result;\r\n      }\r\n      if (name) {\r\n        accum[name] = result.value;\r\n      }\r\n      i = result.index;\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), result);\r\n  });\r\n}\r\n\r\nexport function seqMap() {\r\n  var args = [].slice.call(arguments);\r\n  if (args.length === 0) {\r\n    throw new Error(\"seqMap needs at least one argument\");\r\n  }\r\n  var mapper = args.pop();\r\n  assertFunction(mapper);\r\n  return seq.apply(null, args).map(function(results) {\r\n    return mapper.apply(null, results);\r\n  });\r\n}\r\n\r\n// TODO[ES5]: Revisit this with Object.keys and .bind.\r\nexport function createLanguage(parsers) {\r\n  var language = {};\r\n  for (var key in parsers) {\r\n    if ({}.hasOwnProperty.call(parsers, key)) {\r\n      (function(key) {\r\n        var func = function() {\r\n          return parsers[key](language);\r\n        };\r\n        language[key] = lazy(func);\r\n      })(key);\r\n    }\r\n  }\r\n  return language;\r\n}\r\n\r\nexport function alt() {\r\n  var parsers = [].slice.call(arguments);\r\n  var numParsers = parsers.length;\r\n  if (numParsers === 0) {\r\n    return fail(\"zero alternates\");\r\n  }\r\n  for (var j = 0; j < numParsers; j += 1) {\r\n    assertParser(parsers[j]);\r\n  }\r\n  return Parsimmon(function(input, i) {\r\n    var result;\r\n    for (var j = 0; j < parsers.length; j += 1) {\r\n      result = mergeReplies(parsers[j]._(input, i), result);\r\n      if (result.status) {\r\n        return result;\r\n      }\r\n    }\r\n    return result;\r\n  });\r\n}\r\n\r\nexport function sepBy(parser, separator) {\r\n  // Argument asserted by sepBy1\r\n  return sepBy1(parser, separator).or(succeed([]));\r\n}\r\n\r\nexport function sepBy1(parser, separator) {\r\n  assertParser(parser);\r\n  assertParser(separator);\r\n  var pairs = separator.then(parser).many();\r\n  return seqMap(parser, pairs, function(r, rs) {\r\n    return [r].concat(rs);\r\n  });\r\n}\r\n\r\n// -*- Core Parsing Methods -*-\r\n\r\n_.parse = function(input) {\r\n  if (typeof input !== \"string\" && !isBuffer(input)) {\r\n    throw new Error(\r\n      \".parse must be called with a string or Buffer as its argument\"\r\n    );\r\n  }\r\n  var result = this.skip(eof)._(input, 0);\r\n  if (result.status) {\r\n    return {\r\n      status: true,\r\n      value: result.value\r\n    };\r\n  }\r\n  return {\r\n    status: false,\r\n    index: makeLineColumnIndex(input, result.furthest),\r\n    expected: result.expected\r\n  };\r\n};\r\n\r\n// -*- Other Methods -*-\r\n\r\n_.tryParse = function(str) {\r\n  var result = this.parse(str);\r\n  if (result.status) {\r\n    return result.value;\r\n  } else {\r\n    var msg = formatError(str, result);\r\n    var err = new Error(msg);\r\n    err.type = \"ParsimmonError\";\r\n    err.result = result;\r\n    throw err;\r\n  }\r\n};\r\n\r\n_.or = function(alternative) {\r\n  return alt(this, alternative);\r\n};\r\n\r\n_.trim = function(parser) {\r\n  return this.wrap(parser, parser);\r\n};\r\n\r\n_.wrap = function(leftParser, rightParser) {\r\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\r\n    return middle;\r\n  });\r\n};\r\n\r\n_.thru = function(wrapper) {\r\n  return wrapper(this);\r\n};\r\n\r\n_.then = function(next) {\r\n  assertParser(next);\r\n  return seq(this, next).map(function(results) {\r\n    return results[1];\r\n  });\r\n};\r\n\r\n_.many = function() {\r\n  var self = this;\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n\r\n    for (;;) {\r\n      result = mergeReplies(self._(input, i), result);\r\n      if (result.status) {\r\n        if (i === result.index) {\r\n          throw new Error(\r\n            \"infinite loop detected in .many() parser --- calling .many() on \" +\r\n              \"a parser which can accept zero characters is usually the cause\"\r\n          );\r\n        }\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return mergeReplies(makeSuccess(i, accum), result);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\n_.tieWith = function(separator) {\r\n  assertString(separator);\r\n  return this.map(function(args) {\r\n    assertArray(args);\r\n    if (args.length) {\r\n      assertString(args[0]);\r\n      var s = args[0];\r\n      for (var i = 1; i < args.length; i++) {\r\n        assertString(args[i]);\r\n        s += separator + args[i];\r\n      }\r\n      return s;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  });\r\n};\r\n\r\n_.tie = function() {\r\n  return this.tieWith(\"\");\r\n};\r\n\r\n_.times = function(min, max) {\r\n  var self = this;\r\n  if (arguments.length < 2) {\r\n    max = min;\r\n  }\r\n  assertNumber(min);\r\n  assertNumber(max);\r\n  return Parsimmon(function(input, i) {\r\n    var accum = [];\r\n    var result = undefined;\r\n    var prevResult = undefined;\r\n    for (var times = 0; times < min; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        return prevResult;\r\n      }\r\n    }\r\n    for (; times < max; times += 1) {\r\n      result = self._(input, i);\r\n      prevResult = mergeReplies(result, prevResult);\r\n      if (result.status) {\r\n        i = result.index;\r\n        accum.push(result.value);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return mergeReplies(makeSuccess(i, accum), prevResult);\r\n  });\r\n};\r\n\r\n_.result = function(res) {\r\n  return this.map(function() {\r\n    return res;\r\n  });\r\n};\r\n\r\n_.atMost = function(n) {\r\n  return this.times(0, n);\r\n};\r\n\r\n_.atLeast = function(n) {\r\n  return seqMap(this.times(n), this.many(), function(init, rest) {\r\n    return init.concat(rest);\r\n  });\r\n};\r\n\r\n_.map = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\r\n  });\r\n};\r\n\r\n_.contramap = function(fn) {\r\n  assertFunction(fn);\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self.parse(fn(input.slice(i)));\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    return makeSuccess(i + input.length, result.value);\r\n  });\r\n};\r\n\r\n_.promap = function(f, g) {\r\n  assertFunction(f);\r\n  assertFunction(g);\r\n  return this.contramap(f).map(g);\r\n};\r\n\r\n_.skip = function(next) {\r\n  return seq(this, next).map(function(results) {\r\n    return results[0];\r\n  });\r\n};\r\n\r\n_.mark = function() {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      start: start,\r\n      value: value,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.node = function(name) {\r\n  return seqMap(index, this, index, function(start, value, end) {\r\n    return {\r\n      name: name,\r\n      value: value,\r\n      start: start,\r\n      end: end\r\n    };\r\n  });\r\n};\r\n\r\n_.sepBy = function(separator) {\r\n  return sepBy(this, separator);\r\n};\r\n\r\n_.sepBy1 = function(separator) {\r\n  return sepBy1(this, separator);\r\n};\r\n\r\n_.lookahead = function(x) {\r\n  return this.skip(lookahead(x));\r\n};\r\n\r\n_.notFollowedBy = function(x) {\r\n  return this.skip(notFollowedBy(x));\r\n};\r\n\r\n_.desc = function(expected) {\r\n  if (!isArray(expected)) {\r\n    expected = [expected];\r\n  }\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var reply = self._(input, i);\r\n    if (!reply.status) {\r\n      reply.expected = expected;\r\n    }\r\n    return reply;\r\n  });\r\n};\r\n\r\n_.fallback = function(result) {\r\n  return this.or(succeed(result));\r\n};\r\n\r\n_.ap = function(other) {\r\n  return seqMap(other, this, function(f, x) {\r\n    return f(x);\r\n  });\r\n};\r\n\r\n_.chain = function(f) {\r\n  var self = this;\r\n  return Parsimmon(function(input, i) {\r\n    var result = self._(input, i);\r\n    if (!result.status) {\r\n      return result;\r\n    }\r\n    var nextParser = f(result.value);\r\n    return mergeReplies(nextParser._(input, result.index), result);\r\n  });\r\n};\r\n\r\n// -*- Constructors -*-\r\n\r\nexport function string(str) {\r\n  assertString(str);\r\n  var expected = \"'\" + str + \"'\";\r\n  return Parsimmon(function(input, i) {\r\n    var j = i + str.length;\r\n    var head = input.slice(i, j);\r\n    if (head === str) {\r\n      return makeSuccess(j, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function byte(b) {\r\n  ensureBuffer();\r\n  assertNumber(b);\r\n  if (b > 0xff) {\r\n    throw new Error(\r\n      \"Value specified to byte constructor (\" +\r\n        b +\r\n        \"=0x\" +\r\n        b.toString(16) +\r\n        \") is larger in value than a single byte.\"\r\n    );\r\n  }\r\n  var expected = (b > 0xf ? \"0x\" : \"0x0\") + b.toString(16);\r\n  return Parsimmon(function(input, i) {\r\n    var head = get(input, i);\r\n    if (head === b) {\r\n      return makeSuccess(i + 1, head);\r\n    } else {\r\n      return makeFailure(i, expected);\r\n    }\r\n  });\r\n}\r\n\r\nexport function regexp(re, group) {\r\n  assertRegexp(re);\r\n  if (arguments.length >= 2) {\r\n    assertNumber(group);\r\n  } else {\r\n    group = 0;\r\n  }\r\n  var anchored = anchoredRegexp(re);\r\n  var expected = \"\" + re;\r\n  return Parsimmon(function(input, i) {\r\n    var match = anchored.exec(input.slice(i));\r\n    if (match) {\r\n      if (0 <= group && group <= match.length) {\r\n        var fullMatch = match[0];\r\n        var groupMatch = match[group];\r\n        return makeSuccess(i + fullMatch.length, groupMatch);\r\n      }\r\n      var message =\r\n        \"valid match group (0 to \" + match.length + \") in \" + expected;\r\n      return makeFailure(i, message);\r\n    }\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function succeed(value) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeSuccess(i, value);\r\n  });\r\n}\r\n\r\nexport function fail(expected) {\r\n  return Parsimmon(function(input, i) {\r\n    return makeFailure(i, expected);\r\n  });\r\n}\r\n\r\nexport function lookahead(x) {\r\n  if (isParser(x)) {\r\n    return Parsimmon(function(input, i) {\r\n      var result = x._(input, i);\r\n      result.index = i;\r\n      result.value = \"\";\r\n      return result;\r\n    });\r\n  } else if (typeof x === \"string\") {\r\n    return lookahead(string(x));\r\n  } else if (x instanceof RegExp) {\r\n    return lookahead(regexp(x));\r\n  }\r\n  throw new Error(\"not a string, regexp, or parser: \" + x);\r\n}\r\n\r\nexport function notFollowedBy(parser) {\r\n  assertParser(parser);\r\n  return Parsimmon(function(input, i) {\r\n    var result = parser._(input, i);\r\n    var text = input.slice(i, result.index);\r\n    return result.status\r\n      ? makeFailure(i, 'not \"' + text + '\"')\r\n      : makeSuccess(i, null);\r\n  });\r\n}\r\n\r\nexport function test(predicate) {\r\n  assertFunction(predicate);\r\n  return Parsimmon(function(input, i) {\r\n    var char = get(input, i);\r\n    if (i < input.length && predicate(char)) {\r\n      return makeSuccess(i + 1, char);\r\n    } else {\r\n      return makeFailure(i, \"a character/byte matching \" + predicate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function oneOf(str) {\r\n  var expected = str.split(\"\");\r\n  for (var idx = 0; idx < expected.length; idx++) {\r\n    expected[idx] = \"'\" + expected[idx] + \"'\";\r\n  }\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) >= 0;\r\n  }).desc(expected);\r\n}\r\n\r\nexport function noneOf(str) {\r\n  return test(function(ch) {\r\n    return str.indexOf(ch) < 0;\r\n  }).desc(\"none of '\" + str + \"'\");\r\n}\r\n\r\nexport function custom(parsingFunction) {\r\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\r\n}\r\n\r\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\r\nexport function range(begin, end) {\r\n  return test(function(ch) {\r\n    return begin <= ch && ch <= end;\r\n  }).desc(begin + \"-\" + end);\r\n}\r\n\r\nexport function takeWhile(predicate) {\r\n  assertFunction(predicate);\r\n\r\n  return Parsimmon(function(input, i) {\r\n    var j = i;\r\n    while (j < input.length && predicate(get(input, j))) {\r\n      j++;\r\n    }\r\n    return makeSuccess(j, input.slice(i, j));\r\n  });\r\n}\r\n\r\nexport function lazy(desc, f) {\r\n  if (arguments.length < 2) {\r\n    f = desc;\r\n    desc = undefined;\r\n  }\r\n\r\n  var parser = Parsimmon(function(input, i) {\r\n    parser._ = f()._;\r\n    return parser._(input, i);\r\n  });\r\n\r\n  if (desc) {\r\n    return parser.desc(desc);\r\n  } else {\r\n    return parser;\r\n  }\r\n}\r\n\r\n// -*- Fantasy Land Extras -*-\r\n\r\nfunction empty() {\r\n  return fail(\"fantasy-land/empty\");\r\n}\r\n\r\n_.concat = _.or;\r\n_.empty = empty;\r\n_.of = succeed;\r\n_[\"fantasy-land/ap\"] = _.ap;\r\n_[\"fantasy-land/chain\"] = _.chain;\r\n_[\"fantasy-land/concat\"] = _.concat;\r\n_[\"fantasy-land/empty\"] = _.empty;\r\n_[\"fantasy-land/of\"] = _.of;\r\n_[\"fantasy-land/map\"] = _.map;\r\n\r\n// -*- Base Parsers -*-\r\n\r\nexport const index = Parsimmon(function(input, i) {\r\n  return makeSuccess(i, makeLineColumnIndex(input, i));\r\n});\r\n\r\nexport const any = Parsimmon(function(input, i) {\r\n  if (i >= input.length) {\r\n    return makeFailure(i, \"any character/byte\");\r\n  }\r\n  return makeSuccess(i + 1, get(input, i));\r\n});\r\n\r\nexport const all = Parsimmon(function(input, i) {\r\n  return makeSuccess(input.length, input.slice(i));\r\n});\r\n\r\nexport const eof = Parsimmon(function(input, i) {\r\n  if (i < input.length) {\r\n    return makeFailure(i, \"EOF\");\r\n  }\r\n  return makeSuccess(i, null);\r\n});\r\n\r\nexport const digit = regexp(/[0-9]/).desc(\"a digit\");\r\nexport const digits = regexp(/[0-9]*/).desc(\"optional digits\");\r\nexport const letter = regexp(/[a-z]/i).desc(\"a letter\");\r\nexport const letters = regexp(/[a-z]*/i).desc(\"optional letters\");\r\nexport const optWhitespace = regexp(/\\s*/).desc(\"optional whitespace\");\r\nexport const whitespace = regexp(/\\s+/).desc(\"whitespace\");\r\nexport const cr = string(\"\\r\");\r\nexport const lf = string(\"\\n\");\r\nexport const crlf = string(\"\\r\\n\");\r\nexport const newline = alt(crlf, lf, cr).desc(\"newline\");\r\nexport const end = alt(newline, eof);","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util.js\";\nimport { symbol } from \"../Numeric.js\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n    [symbol]() {\n        const _this = this;\n        return {\n            multiply: y => _this.mul(y),\n            toPrecision: sd => _this.toPrecision(sd),\n            toExponential: dp => _this.toExponential(dp),\n            toFixed: dp => _this.toFixed(dp),\n            toHex: () => (Number(_this) >>> 0).toString(16),\n        };\n    }\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n            normalize(x);\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\nfunction normalize(x) {\n    x = round(x, DP, 0);\n    if (x.c.length > 1 && !x.c[0]) {\n        let i = x.c.findIndex(x => x);\n        x.c = x.c.slice(i);\n        x.e = x.e - i;\n    }\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[i];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var Big = this.constructor, x = new Big(this), y = new Big(y), a = x.c, // dividend\n    b = y.c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, Big = this.constructor, x = new Big(this), y = new Big(y), a = x.s, b = y.s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var Big = this.constructor, x = new Big(this), y = new Big(1), one = new Big(1), isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, Big = this.constructor, x = new Big(this), s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, Big = this.constructor, x = new Big(this), y = new Big(y), xc = x.c, yc = y.c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big.js\";\nimport { FSharpRef } from \"./Types.js\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = new Decimal(str.trim());\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(get_Zero);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = step.cmp(get_Zero);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = x.cmp(last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { equals } from \"./Util.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { format } from \"./String.js\";\n\nexport class Dictionary {\n    constructor(pairs, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-1\"] = 1;\n        const enumerator = getEnumerator(pairs);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const pair = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n                Dictionary__Add_5BDDA1(this$.contents, pair[0], pair[1]);\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"Dictionary\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        Dictionary__Add_5BDDA1(this$, item[0], item[1]);\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        let pattern_matching_result;\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return false;\n            }\n        }\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        const matchValue = Dictionary__TryFind_2B595(this$, item[0]);\n        if (matchValue != null) {\n            if (equals(matchValue[1], item[1])) {\n                const value = Dictionary__Remove_2B595(this$, item[0]);\n                void value;\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    get size() {\n        const this$ = this;\n        return Dictionary__get_Count(this$) | 0;\n    }\n    clear() {\n        const this$ = this;\n        Dictionary__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return Dictionary__Remove_2B595(this$, k);\n    }\n    entries() {\n        const this$ = this;\n        return map((p) => [p[0], p[1]], this$);\n    }\n    get(k) {\n        const this$ = this;\n        return Dictionary__get_Item_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return Dictionary__ContainsKey_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((p) => p[0], this$);\n    }\n    set(k, v) {\n        const this$ = this;\n        Dictionary__set_Item_5BDDA1(this$, k, v);\n        return this$;\n    }\n    values() {\n        const this$ = this;\n        return map((p) => p[1], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((p) => {\n            f(p[1], p[0], this$);\n        }, this$);\n    }\n}\n\nexport function Dictionary$reflection(gen0, gen1) {\n    return class_type(\"Fable.Collections.Dictionary\", [gen0, gen1], Dictionary);\n}\n\nexport function Dictionary_$ctor_6623D9B3(pairs, comparer) {\n    return new Dictionary(pairs, comparer);\n}\n\nfunction Dictionary__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((pair) => this$.comparer.Equals(k, pair[0]))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nexport function Dictionary__TryFind_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]];\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function Dictionary__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function Dictionary__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function Dictionary__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function Dictionary__get_Item_2B595(this$, k) {\n    const matchValue = Dictionary__TryFind_2B595(this$, k);\n    if (matchValue != null) {\n        return matchValue[1];\n    }\n    else {\n        throw (new Error(\"The item was not found in collection\"));\n    }\n}\n\nexport function Dictionary__set_Item_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]] = [k, v];\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__Add_5BDDA1(this$, k, v) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            const msg = format(\"An item with the same key has already been added. Key: {0}\", k);\n            throw (new Error(msg));\n            break;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push([k, v]));\n                void undefined;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [[k, v]]);\n            }\n            break;\n        }\n    }\n}\n\nexport function Dictionary__ContainsKey_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function Dictionary__Remove_2B595(this$, k) {\n    const matchValue = Dictionary__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/master/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { symbol } from \"../Numeric.js\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    let h1 = this.unsigned ? 1 : 0;\n    h1 = ((h1 << 5) + h1) ^ this.high;\n    h1 = ((h1 << 5) + h1) ^ this.low;\n    return h1;\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nLong.prototype[symbol] = function () {\n    const x = this;\n    return {\n        multiply: y => multiply(x, y),\n        toPrecision: sd => String(x) + (0).toPrecision(sd).substr(1),\n        toExponential: dp => String(x) + (0).toExponential(dp).substr(1),\n        toFixed: dp => String(x) + (0).toFixed(dp).substr(1),\n        toHex: () => toString(x.unsigned ? x : fromBytes(toBytes(x), true), 16),\n    };\n};\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nexport function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * Tests if the specified object is a Long.\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n */\n// Long.isLong = isLong;\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * Returns a Long representing the given 32 bit integer value.\n * @function\n * @param {number} value The 32 bit integer in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromInt = fromInt;\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return negate(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n * @function\n * @param {number} value The number in question\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromNumber = fromNumber;\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n *  assumed to use 32 bits.\n * @function\n * @param {number} lowBits The low 32 bits\n * @param {number} highBits The high 32 bits\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromBits = fromBits;\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return negate(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = add(multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = multiply(result, radixToPower);\n            result = add(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\n/**\n * Returns a Long representation of the given string, written using the specified radix.\n * @function\n * @param {string} str The textual representation of the Long\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n * @returns {!Long} The corresponding Long value\n */\n// Long.fromString = fromString;\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n/**\n * Converts the specified value to a Long using the appropriate from* function for its type.\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {!Long}\n */\n// Long.fromValue = fromValue;\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * Signed zero.\n * @type {!Long}\n */\n// Long.ZERO = ZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * Unsigned zero.\n * @type {!Long}\n */\n// Long.UZERO = UZERO;\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * Signed one.\n * @type {!Long}\n */\n// Long.ONE = ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * Unsigned one.\n * @type {!Long}\n */\n// Long.UONE = UONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * Signed negative one.\n * @type {!Long}\n */\n// Long.NEG_ONE = NEG_ONE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * Maximum signed value.\n * @type {!Long}\n */\n// Long.MAX_VALUE = MAX_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * Maximum unsigned value.\n * @type {!Long}\n */\n// Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Minimum signed value.\n * @type {!Long}\n */\n// Long.MIN_VALUE = MIN_VALUE;\n/**\n * @alias Long.prototype\n * @inner\n */\n// var LongPrototype = Long.prototype;\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @this {!Long}\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @this {!Long}\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @this {!Long}\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = divide($this, radixLong), rem1 = subtract(multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(negate($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = divide(rem, radixToPower), intval = toInt(subtract(rem, multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @this {!Long}\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @this {!Long}\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @this {!Long}\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(negate($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n * @returns {boolean}\n */\n// LongPrototype.eqz = LongPrototype.isZero;\n/**\n * Tests if this Long's value is negative.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @this {!Long}\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.eq = LongPrototype.equals;\n/**\n * Tests if this Long's value differs from the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.neq = LongPrototype.notEquals;\n/**\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ne = LongPrototype.notEquals;\n/**\n * Tests if this Long's value is less than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lt = LongPrototype.lessThan;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.lte = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.le = LongPrototype.lessThanOrEqual;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gt = LongPrototype.greaterThan;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n/**\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\n// LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n/**\n * Compares this Long's value with the specified's.\n * @this {!Long}\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(subtract($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n * @function\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\n// LongPrototype.comp = LongPrototype.compare;\n/**\n * Negates this Long's value.\n * @this {!Long}\n * @returns {!Long} Negated Long\n */\nexport function negate($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return add(not($this), ONE);\n}\n;\n/**\n * Negates this Long's value. This is an alias of {@link Long#negate}.\n * @function\n * @returns {!Long} Negated Long\n */\n// LongPrototype.neg = LongPrototype.negate;\n/**\n * Returns the sum of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function add($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function subtract($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return add($this, negate(subtrahend));\n}\n;\n/**\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n * @function\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\n// LongPrototype.sub = LongPrototype.subtract;\n/**\n * Returns the product of this and the specified Long.\n * @this {!Long}\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return multiply(negate($this), negate(multiplier));\n        else\n            return negate(multiply(negate($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return negate(multiply($this, negate(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n * @function\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\n// LongPrototype.mul = LongPrototype.multiply;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function divide($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = shiftRight($this, 1);\n                approx = shiftLeft(divide(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = subtract($this, multiply(divisor, approx));\n                    res = add(approx, divide(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return divide(negate($this), negate(divisor));\n            return negate(divide(negate($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return negate(divide($this, negate(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, shiftRightUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = add(res, approxRes);\n        rem = subtract(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\n// LongPrototype.div = LongPrototype.divide;\n/**\n * Returns this Long modulo the specified.\n * @this {!Long}\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function modulo($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return subtract($this, multiply(divide($this, divisor), divisor));\n}\n;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.mod = LongPrototype.modulo;\n/**\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n * @function\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\n// LongPrototype.rem = LongPrototype.modulo;\n/**\n * Returns the bitwise NOT of this Long.\n * @this {!Long}\n * @returns {!Long}\n */\nexport function not($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function and($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function or($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @this {!Long}\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function xor($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftLeft($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shl = LongPrototype.shiftLeft;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRight($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr = LongPrototype.shiftRight;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function shiftRightUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\n// LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n/**\n * Returns this Long with bits rotated to the left by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.low << numBits) | (this.high >>> b)), ((this.high << numBits) | (this.low >>> b)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.high << numBits) | (this.low >>> b)), ((this.low << numBits) | (this.high >>> b)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotl = LongPrototype.rotateLeft;\n/**\n * Returns this Long with bits rotated to the right by the given amount.\n * @this {!Long}\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\nexport const rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits))\n        numBits = numBits.toInt();\n    if ((numBits &= 63) === 0)\n        return this;\n    if (numBits === 32)\n        return fromBits(this.high, this.low, this.unsigned);\n    if (numBits < 32) {\n        b = (32 - numBits);\n        return fromBits(((this.high << b) | (this.low >>> numBits)), ((this.low << b) | (this.high >>> numBits)), this.unsigned);\n    }\n    numBits -= 32;\n    b = (32 - numBits);\n    return fromBits(((this.low << b) | (this.high >>> numBits)), ((this.high << b) | (this.low >>> numBits)), this.unsigned);\n};\n/**\n * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n * @function\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Rotated Long\n */\n// LongPrototype.rotr = LongPrototype.rotateRight;\n/**\n * Converts this Long to signed.\n * @this {!Long}\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @this {!Long}\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @this {!Long}\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @this {!Long}\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\n","import { isValid } from \"./Int32.js\";\nimport * as LongLib from \"./lib/long.js\";\nexport default LongLib.Long;\nexport const get_Zero = LongLib.ZERO;\nexport const get_One = LongLib.ONE;\nexport const op_Addition = LongLib.add;\nexport const op_Subtraction = LongLib.subtract;\nexport const op_Multiply = LongLib.multiply;\nexport const op_Division = LongLib.divide;\nexport const op_Modulus = LongLib.modulo;\nexport const op_UnaryNegation = LongLib.negate;\nexport const op_LeftShift = LongLib.shiftLeft;\nexport const op_RightShift = LongLib.shiftRight;\nexport const op_RightShiftUnsigned = LongLib.shiftRightUnsigned;\nexport const op_BitwiseAnd = LongLib.and;\nexport const op_BitwiseOr = LongLib.or;\nexport const op_ExclusiveOr = LongLib.xor;\nexport const op_LogicalNot = LongLib.not;\nexport const op_LessThan = LongLib.lessThan;\nexport const op_LessThanOrEqual = LongLib.lessThanOrEqual;\nexport const op_GreaterThan = LongLib.greaterThan;\nexport const op_GreaterThanOrEqual = LongLib.greaterThanOrEqual;\nexport const op_Equality = LongLib.equals;\nexport const op_Inequality = LongLib.notEquals;\nexport const equals = LongLib.equals;\nexport const compare = LongLib.compare;\nexport const fromInt = LongLib.fromInt;\nexport const fromBits = LongLib.fromBits;\nexport const fromBytes = LongLib.fromBytes;\nexport const fromNumber = LongLib.fromNumber;\nexport const fromString = LongLib.fromString;\nexport const fromValue = LongLib.fromValue;\nexport const toInt = LongLib.toInt;\nexport const toBytes = LongLib.toBytes;\nexport const toNumber = LongLib.toNumber;\nexport const toString = LongLib.toString;\nexport const getLowBits = LongLib.getLowBits;\nexport const getHighBits = LongLib.getHighBits;\nexport const getLowBitsUnsigned = LongLib.getLowBitsUnsigned;\nexport const getHighBitsUnsigned = LongLib.getHighBitsUnsigned;\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function abs(x) {\n    if (!x.unsigned && LongLib.isNegative(x)) {\n        return op_UnaryNegation(x);\n    }\n    else {\n        return x;\n    }\n}\nexport function fromInteger(value, unsigned, kind) {\n    let x = value;\n    let xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6:\n            x = value >>> 0;\n            break;\n    }\n    return LongLib.fromBits(x, xh >> 31, unsigned);\n}\nexport function parse(str, style, unsigned, _bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= y.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits.toUpperCase(), maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return LongLib.fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(LongLib.fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return LongLib.toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const stepComparedWithZero = LongLib.compare(step, unsigned ? LongLib.UZERO : LongLib.ZERO);\n    if (stepComparedWithZero === 0) {\n        throw new Error(\"The step of a range cannot be zero\");\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = LongLib.compare(x, last);\n        if ((stepGreaterThanZero && comparedWithLast <= 0)\n            || (!stepGreaterThanZero && comparedWithLast >= 0)) {\n            return [x, op_Addition(x, step)];\n        }\n        else {\n            return undefined;\n        }\n    };\n}\n","import { Record } from \"../fable-library.3.1.2/Types.js\";\r\nimport { string_type, record_type, int32_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { some } from \"../fable-library.3.1.2/Option.js\";\r\nimport { seq, noneOf, optWhitespace, whitespace, oneOf, string, takeWhile, test, fail, all, any, digit, lookahead, succeed, eof, letters, letter, lazy, index } from \"./Parsimmon.js\";\r\nimport { join } from \"../fable-library.3.1.2/String.js\";\r\nimport { reduce } from \"../fable-library.3.1.2/List.js\";\r\n\r\nexport class TokenPosition extends Record {\r\n    constructor(offset, line, column) {\r\n        super();\r\n        this.offset = (offset | 0);\r\n        this.line = (line | 0);\r\n        this.column = (column | 0);\r\n    }\r\n}\r\n\r\nexport function TokenPosition$reflection() {\r\n    return record_type(\"Fable.Parsimmon.TokenPosition\", [], TokenPosition, () => [[\"offset\", int32_type], [\"line\", int32_type], [\"column\", int32_type]]);\r\n}\r\n\r\nexport class NodeResult$1 extends Record {\r\n    constructor(name, value, start, end) {\r\n        super();\r\n        this.name = name;\r\n        this.value = value;\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nexport function NodeResult$1$reflection(gen0) {\r\n    return record_type(\"Fable.Parsimmon.NodeResult`1\", [gen0], NodeResult$1, () => [[\"name\", string_type], [\"value\", gen0], [\"start\", TokenPosition$reflection()], [\"end\", TokenPosition$reflection()]]);\r\n}\r\n\r\nexport function Parsimmon_parseRaw(input, parser) {\r\n    return parser.parse(input);\r\n}\r\n\r\nexport function Parsimmon_parse(input, parser) {\r\n    const result = parser.parse(input);\r\n    if (result.status) {\r\n        return some(result.value);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport const Parsimmon_index = index;\r\n\r\nexport function Parsimmon_orTry(otherParser, parser) {\r\n    return parser.or(otherParser);\r\n}\r\n\r\nexport function Parsimmon_times(n, parser) {\r\n    return parser.times(n);\r\n}\r\n\r\nexport function Parsimmon_atLeast(n, parser) {\r\n    return parser.atLeast(n);\r\n}\r\n\r\nexport function Parsimmon_atMost(n, parser) {\r\n    return parser.atMost(n);\r\n}\r\n\r\nexport function Parsimmon_skip(skipped, keep) {\r\n    return keep.skip(skipped);\r\n}\r\n\r\nexport function Parsimmon_many(parser) {\r\n    return parser.many();\r\n}\r\n\r\nexport const Parsimmon_ofLazy = lazy;\r\n\r\nexport function Parsimmon_seperateByAtLeastOne(seperator, parser) {\r\n    return parser.sepBy1(seperator);\r\n}\r\n\r\nexport function Parsimmon_chain(after, before) {\r\n    return before.then(after);\r\n}\r\n\r\nexport function Parsimmon_bind(f, p) {\r\n    return p.chain(f);\r\n}\r\n\r\nexport const Parsimmon_letter = letter;\r\n\r\nexport function Parsimmon_timesBetween(min, max, parser) {\r\n    return parser.times(min, max);\r\n}\r\n\r\nexport const Parsimmon_letters = letters;\r\n\r\nexport const Parsimmon_endOfFile = eof;\r\n\r\nexport function Parsimmon_notFollowedBy(p, before) {\r\n    return before.notFollowedBy(p);\r\n}\r\n\r\nexport const Parsimmon_succeed = succeed;\r\n\r\nexport const Parsimmon_lookahead = lookahead;\r\n\r\nexport const Parsimmon_digit = digit;\r\n\r\nexport const Parsimmon_digits = Parsimmon_many(Parsimmon_digit);\r\n\r\nexport function Parsimmon_fallback(value, parser) {\r\n    return parser.fallback(value);\r\n}\r\n\r\nexport function Parsimmon_seperateBy(content, others) {\r\n    return others.sepBy(content);\r\n}\r\n\r\nexport function Parsimmon_between(left, right, middle) {\r\n    return Parsimmon_skip(right, Parsimmon_chain(middle, left));\r\n}\r\n\r\nexport function Parsimmon_map(f, parser) {\r\n    return parser.map(f);\r\n}\r\n\r\nexport function Parsimmon_tie(parser) {\r\n    return Parsimmon_map((strings) => join(\"\", strings), parser);\r\n}\r\n\r\nexport const Parsimmon_any = any;\r\n\r\nexport function Parsimmon_choose(ps) {\r\n    return reduce((acc, parser) => (acc.or(parser)), ps);\r\n}\r\n\r\nexport const Parsimmon_all = all;\r\n\r\nexport const Parsimmon_fail = fail;\r\n\r\nexport const Parsimmon_satisfy = test;\r\n\r\nexport const Parsimmon_takeWhile = takeWhile;\r\n\r\nexport const Parsimmon_str = string;\r\n\r\nexport const Parsimmon_oneOf = oneOf;\r\n\r\nexport const Parsimmon_whitespace = whitespace;\r\n\r\nexport const Parsimmon_optionalWhitespace = optWhitespace;\r\n\r\nexport function Parsimmon_atLeastOneOrMany(parser) {\r\n    return Parsimmon_atLeast(1, parser);\r\n}\r\n\r\nexport function Parsimmon_stringReturn(input, value) {\r\n    return Parsimmon_map((_arg1) => value, Parsimmon_str(input));\r\n}\r\n\r\nexport const Parsimmon_noneOf = noneOf;\r\n\r\nexport const Parsimmon_seq2 = seq;\r\n\r\nexport function Parsimmon_trim(trimmed, p) {\r\n    return p.trim(trimmed);\r\n}\r\n\r\nexport function Parsimmon_concat(parser) {\r\n    return parser.map((strings) => join(\"\", strings));\r\n}\r\n\r\nexport const Parsimmon_seq3 = seq;\r\n\r\nexport const Parsimmon_seq4 = seq;\r\n\r\nexport const Parsimmon_seq5 = seq;\r\n\r\nexport function Parsimmon_node(description, p) {\r\n    return p.node(description);\r\n}\r\n\r\n","import { Parsimmon_seperateBy, Parsimmon_ofLazy, Parsimmon_optionalWhitespace, Parsimmon_between, Parsimmon_satisfy, Parsimmon_orTry, Parsimmon_oneOf, Parsimmon_stringReturn, Parsimmon_choose, Parsimmon_many, Parsimmon_seq3, Parsimmon_str, Parsimmon_seq2, Parsimmon_map, Parsimmon_digit, Parsimmon_atLeastOneOrMany, Parsimmon_concat } from \"../Fable.Parsimmon.4.0.0/Parsimmon.fs.js\";\r\nimport { parse } from \"../fable-library.3.1.2/Double.js\";\r\nimport { join } from \"../fable-library.3.1.2/String.js\";\r\nimport { Json } from \"./Json.fs.js\";\r\nimport { map, ofArray } from \"../fable-library.3.1.2/List.js\";\r\nimport { ofList } from \"../fable-library.3.1.2/Map.js\";\r\nimport { Lazy } from \"../fable-library.3.1.2/Util.js\";\r\n\r\nexport const digits = Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_digit));\r\n\r\nexport const jint = Parsimmon_map(parse, digits);\r\n\r\nexport const negJint = Parsimmon_map((tupledArg) => (-tupledArg[1]), Parsimmon_seq2(Parsimmon_str(\"-\"), jint));\r\n\r\nexport const jfloat = Parsimmon_map((tupledArg) => {\r\n    const digitsLeft = tupledArg[0];\r\n    return parse(join(\"\", [(digitsLeft === \"\") ? \"0\" : digitsLeft, tupledArg[1], tupledArg[2]]));\r\n}, Parsimmon_seq3(Parsimmon_concat(Parsimmon_many(Parsimmon_digit)), Parsimmon_str(\".\"), Parsimmon_concat(Parsimmon_atLeastOneOrMany(Parsimmon_digit))));\r\n\r\nexport const negativeJFloat = Parsimmon_map((tupledArg) => (-tupledArg[1]), Parsimmon_seq2(Parsimmon_str(\"-\"), jfloat));\r\n\r\nexport const jnumber = Parsimmon_map((arg0) => (new Json(0, arg0)), Parsimmon_choose(ofArray([jfloat, negativeJFloat, jint, negJint])));\r\n\r\nexport const jbool = Parsimmon_choose(ofArray([Parsimmon_stringReturn(\"true\", new Json(2, true)), Parsimmon_stringReturn(\"false\", new Json(2, false))]));\r\n\r\nexport const jnull = Parsimmon_stringReturn(\"null\", new Json(3));\r\n\r\nexport const stringLiteral = (() => {\r\n    const escape = Parsimmon_map((_arg1) => {\r\n        switch (_arg1) {\r\n            case \"b\": {\r\n                return \"\\b\";\r\n            }\r\n            case \"f\": {\r\n                return \"\\f\";\r\n            }\r\n            case \"n\": {\r\n                return \"\\n\";\r\n            }\r\n            case \"r\": {\r\n                return \"\\r\";\r\n            }\r\n            case \"t\": {\r\n                return \"\\t\";\r\n            }\r\n            default: {\r\n                return _arg1;\r\n            }\r\n        }\r\n    }, Parsimmon_oneOf(\"\\\"\\\\/bfnrt\"));\r\n    const anyCharSnippet = Parsimmon_concat(Parsimmon_many(Parsimmon_orTry(Parsimmon_map((tuple) => tuple[1], Parsimmon_seq2(Parsimmon_str(\"\\\\\"), escape)), Parsimmon_satisfy((c_1) => ((c_1 !== \"\\\"\") ? (c_1 !== \"\\\\\") : false)))));\r\n    return Parsimmon_between(Parsimmon_str(\"\\\"\"), Parsimmon_str(\"\\\"\"), anyCharSnippet);\r\n})();\r\n\r\nexport const jstring = stringLiteral.map((arg0) => (new Json(1, arg0)));\r\n\r\nexport function withWhitespace(p) {\r\n    return Parsimmon_between(Parsimmon_optionalWhitespace, Parsimmon_optionalWhitespace, p);\r\n}\r\n\r\nexport const jvalue = Parsimmon_choose(map(withWhitespace, ofArray([jnull, jbool, jnumber, jstring])));\r\n\r\nexport const comma = withWhitespace(Parsimmon_str(\",\"));\r\n\r\nfunction json$004099() {\r\n    return Parsimmon_ofLazy(() => Parsimmon_choose(ofArray([jvalue, Parsimmon_map((arg) => (new Json(4, ofArray(arg))), Parsimmon_between(withWhitespace(Parsimmon_str(\"[\")), withWhitespace(Parsimmon_str(\"]\")), Parsimmon_seperateBy(comma, json$004099$002D1.Value))), Parsimmon_map((arg_2) => (new Json(5, ofList(ofArray(arg_2)))), Parsimmon_between(withWhitespace(Parsimmon_str(\"{\")), withWhitespace(Parsimmon_str(\"}\")), Parsimmon_seperateBy(comma, Parsimmon_map((tupledArg) => [tupledArg[0], tupledArg[2]], Parsimmon_seq3(withWhitespace(stringLiteral), withWhitespace(Parsimmon_str(\":\")), withWhitespace(json$004099$002D1.Value))))))])));\r\n}\r\n\r\nconst json$004099$002D1 = new Lazy(json$004099);\r\n\r\nexport const json = json$004099$002D1.Value;\r\n\r\nexport const jsonParser = withWhitespace(json);\r\n\r\n","import { Parsimmon_parse } from \"../Fable.Parsimmon.4.0.0/Parsimmon.fs.js\";\r\nimport { jsonParser } from \"./Parser.fs.js\";\r\nimport { join, toText, printf, toFail } from \"../fable-library.3.1.2/String.js\";\r\nimport { empty, singleton, concat, ofSeq, ofArray, map as map_1 } from \"../fable-library.3.1.2/List.js\";\r\nimport { tryFind, ofList, toList } from \"../fable-library.3.1.2/Map.js\";\r\nimport { map as map_3, delay, getEnumerator } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { toString } from \"../fable-library.3.1.2/Decimal.js\";\r\nimport { toDecimal } from \"../fable-library.3.1.2/BigInt.js\";\r\nimport { toString as toString_1 } from \"../fable-library.3.1.2/Date.js\";\r\nimport { partialApply, isIterable } from \"../fable-library.3.1.2/Util.js\";\r\nimport { value as value_5, some } from \"../fable-library.3.1.2/Option.js\";\r\nimport { $007CNativeObject$007C_$007C, $007CNativeArray$007C_$007C, $007CNull$007C_$007C, $007CNativeBool$007C_$007C, $007CNativeNumber$007C_$007C, $007CNativeString$007C_$007C } from \"./TypeCheck.fs.js\";\r\nimport { Json } from \"./Json.fs.js\";\r\nimport { map as map_2 } from \"../fable-library.3.1.2/Array.js\";\r\n\r\nexport function InteropUtil_isDateOffset(x) {\r\n    if (x instanceof Date) {\r\n        return \"offset\" in x;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function InteropUtil_isObjectLiteral(x) {\r\n    return (typeof x) === \"object\";\r\n}\r\n\r\nexport function InteropUtil_isBigInt(x) {\r\n    if (((((!(x == null)) ? InteropUtil_isObjectLiteral(x) : false) ? (\"signInt\" in x) : false) ? (\"v\" in x) : false) ? (\"digits\" in (x[\"v\"])) : false) {\r\n        return \"bound\" in (x[\"v\"]);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_tryParse(input) {\r\n    return Parsimmon_parse(input, jsonParser);\r\n}\r\n\r\nexport function SimpleJson_parse(input) {\r\n    const matchValue = SimpleJson_tryParse(input);\r\n    if (matchValue == null) {\r\n        return toFail(printf(\"Could not parse the JSON input: %s\"))(input);\r\n    }\r\n    else {\r\n        return matchValue;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_toString(_arg1) {\r\n    if (_arg1.tag === 2) {\r\n        if (_arg1.fields[0]) {\r\n            return \"true\";\r\n        }\r\n        else {\r\n            return \"false\";\r\n        }\r\n    }\r\n    else if (_arg1.tag === 0) {\r\n        return _arg1.fields[0].toString();\r\n    }\r\n    else if (_arg1.tag === 1) {\r\n        return toText(printf(\"\\\"%s\\\"\"))(_arg1.fields[0]);\r\n    }\r\n    else if (_arg1.tag === 4) {\r\n        const arg10_1 = join(\",\", map_1(SimpleJson_toString, _arg1.fields[0]));\r\n        return toText(printf(\"[%s]\"))(arg10_1);\r\n    }\r\n    else if (_arg1.tag === 5) {\r\n        const arg10_3 = join(\",\", map_1((tupledArg) => {\r\n            const arg20 = SimpleJson_toString(tupledArg[1]);\r\n            return toText(printf(\"\\\"%s\\\":%s\"))(tupledArg[0])(arg20);\r\n        }, toList(_arg1.fields[0])));\r\n        return toText(printf(\"{%s}\"))(arg10_3);\r\n    }\r\n    else {\r\n        return \"null\";\r\n    }\r\n}\r\n\r\nexport function SimpleJson_toPlainObject(input) {\r\n    switch (input.tag) {\r\n        case 2: {\r\n            return input.fields[0];\r\n        }\r\n        case 0: {\r\n            return input.fields[0];\r\n        }\r\n        case 1: {\r\n            return input.fields[0];\r\n        }\r\n        case 4: {\r\n            const array = [];\r\n            const enumerator = getEnumerator(input.fields[0]);\r\n            try {\r\n                while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    const value_3 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    void (array.push(SimpleJson_toPlainObject(value_3)));\r\n                }\r\n            }\r\n            finally {\r\n                enumerator.Dispose();\r\n            }\r\n            return array;\r\n        }\r\n        case 5: {\r\n            const jsObject = ({});\r\n            const enumerator_1 = getEnumerator(toList(input.fields[0]));\r\n            try {\r\n                while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                    const forLoopVar = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                    jsObject[forLoopVar[0]] = SimpleJson_toPlainObject(forLoopVar[1]);\r\n                }\r\n            }\r\n            finally {\r\n                enumerator_1.Dispose();\r\n            }\r\n            return jsObject;\r\n        }\r\n        default: {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_stringify(value) {\r\n    if (value == null) {\r\n        return JSON.stringify(null);\r\n    }\r\n    else {\r\n        return JSON.stringify(value, (key, jsonValue) => {\r\n            let copyOfStruct;\r\n            return InteropUtil_isBigInt(jsonValue) ? toString(toDecimal(jsonValue)) : ((jsonValue instanceof Date) ? toString_1(jsonValue, \"o\") : (((typeof jsonValue) === \"string\") ? jsonValue : (isIterable(jsonValue) ? (Array.isArray(jsonValue) ? jsonValue : (Array.from(jsonValue))) : (InteropUtil_isBigInt(jsonValue) ? toString(toDecimal(jsonValue)) : (InteropUtil_isDateOffset(jsonValue) ? (copyOfStruct = jsonValue, toString_1(copyOfStruct, \"O\")) : jsonValue)))));\r\n        }, some(0));\r\n    }\r\n}\r\n\r\nexport function SimpleJson_parseNative$0027(x) {\r\n    const activePatternResult23583 = $007CNativeString$007C_$007C(x);\r\n    if (activePatternResult23583 != null) {\r\n        const str = activePatternResult23583;\r\n        return new Json(1, str);\r\n    }\r\n    else {\r\n        const activePatternResult23582 = $007CNativeNumber$007C_$007C(x);\r\n        if (activePatternResult23582 != null) {\r\n            const number = activePatternResult23582;\r\n            return new Json(0, number);\r\n        }\r\n        else {\r\n            const activePatternResult23581 = $007CNativeBool$007C_$007C(x);\r\n            if (activePatternResult23581 != null) {\r\n                const value = activePatternResult23581;\r\n                return new Json(2, value);\r\n            }\r\n            else if ($007CNull$007C_$007C(x) != null) {\r\n                return new Json(3);\r\n            }\r\n            else {\r\n                const activePatternResult23579 = $007CNativeArray$007C_$007C(x);\r\n                if (activePatternResult23579 != null) {\r\n                    const arr = activePatternResult23579;\r\n                    return new Json(4, ofArray(map_2(SimpleJson_parseNative$0027, arr)));\r\n                }\r\n                else {\r\n                    const activePatternResult23578 = $007CNativeObject$007C_$007C(x);\r\n                    if (activePatternResult23578 != null) {\r\n                        const object = value_5(activePatternResult23578);\r\n                        return new Json(5, ofList(ofSeq(delay(() => map_3((key) => [key, SimpleJson_parseNative$0027(object[key])], Object.keys(object))))));\r\n                    }\r\n                    else {\r\n                        return new Json(3);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_parseNative(input) {\r\n    return SimpleJson_parseNative$0027(JSON.parse(input));\r\n}\r\n\r\nexport function SimpleJson_tryParseNative(input) {\r\n    try {\r\n        return SimpleJson_parseNative(input);\r\n    }\r\n    catch (ex) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_fromObjectLiteral(x) {\r\n    try {\r\n        return SimpleJson_parseNative$0027(x);\r\n    }\r\n    catch (matchValue) {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function SimpleJson_mapKeys(f, _arg1) {\r\n    switch (_arg1.tag) {\r\n        case 5: {\r\n            return new Json(5, ofList(map_1((tupledArg) => [f(tupledArg[0]), SimpleJson_mapKeys(f, tupledArg[1])], toList(_arg1.fields[0]))));\r\n        }\r\n        case 4: {\r\n            return new Json(4, map_1((_arg1_1) => SimpleJson_mapKeys(f, _arg1_1), _arg1.fields[0]));\r\n        }\r\n        default: {\r\n            return _arg1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_mapbyKey(f, _arg1) {\r\n    switch (_arg1.tag) {\r\n        case 5: {\r\n            return new Json(5, ofList(map_1((tupledArg) => {\r\n                const key = tupledArg[0];\r\n                return [key, f(key, tupledArg[1])];\r\n            }, toList(_arg1.fields[0]))));\r\n        }\r\n        case 4: {\r\n            return new Json(4, map_1((_arg1_1) => SimpleJson_mapbyKey(f, _arg1_1), _arg1.fields[0]));\r\n        }\r\n        default: {\r\n            return _arg1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function SimpleJson_mapKeysByPath(f, json) {\r\n    const mapKey = (xs, _arg1) => {\r\n        switch (_arg1.tag) {\r\n            case 5: {\r\n                return new Json(5, ofList(map_1((tupledArg) => {\r\n                    const key = tupledArg[0];\r\n                    const value = tupledArg[1];\r\n                    const keyPath = concat([xs, singleton(key)]);\r\n                    const matchValue = f(keyPath);\r\n                    if (matchValue == null) {\r\n                        return [key, mapKey(keyPath, value)];\r\n                    }\r\n                    else {\r\n                        return [matchValue, mapKey(keyPath, value)];\r\n                    }\r\n                }, toList(_arg1.fields[0]))));\r\n            }\r\n            case 4: {\r\n                return new Json(4, map_1(partialApply(1, mapKey, [xs]), _arg1.fields[0]));\r\n            }\r\n            default: {\r\n                return _arg1;\r\n            }\r\n        }\r\n    };\r\n    return mapKey(empty(), json);\r\n}\r\n\r\nexport function SimpleJson_readPath(keys_mut, input_mut) {\r\n    SimpleJson_readPath:\r\n    while (true) {\r\n        const keys = keys_mut, input = input_mut;\r\n        const matchValue = [keys, input];\r\n        let pattern_matching_result, dict, key, dict_1, firstKey, rest;\r\n        if (matchValue[0].tail != null) {\r\n            if (matchValue[0].tail.tail == null) {\r\n                if (matchValue[1].tag === 5) {\r\n                    pattern_matching_result = 1;\r\n                    dict = matchValue[1].fields[0];\r\n                    key = matchValue[0].head;\r\n                }\r\n                else {\r\n                    pattern_matching_result = 3;\r\n                }\r\n            }\r\n            else if (matchValue[1].tag === 5) {\r\n                pattern_matching_result = 2;\r\n                dict_1 = matchValue[1].fields[0];\r\n                firstKey = matchValue[0].head;\r\n                rest = matchValue[0].tail;\r\n            }\r\n            else {\r\n                pattern_matching_result = 3;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 0;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return void 0;\r\n            }\r\n            case 1: {\r\n                return tryFind(key, dict);\r\n            }\r\n            case 2: {\r\n                const matchValue_1 = tryFind(firstKey, dict_1);\r\n                let pattern_matching_result_1, nextDict;\r\n                if (matchValue_1 != null) {\r\n                    if (matchValue_1.tag === 5) {\r\n                        pattern_matching_result_1 = 0;\r\n                        nextDict = matchValue_1.fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_1 = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 1;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        keys_mut = rest;\r\n                        input_mut = (new Json(5, nextDict));\r\n                        continue SimpleJson_readPath;\r\n                    }\r\n                    case 1: {\r\n                        return void 0;\r\n                    }\r\n                }\r\n            }\r\n            case 3: {\r\n                return void 0;\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\n","import { some } from \"../fable-library.3.1.2/Option.js\";\r\n\r\nexport function $007CNativeString$007C_$007C(x) {\r\n    if (typeof (x) === 'string') {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeBool$007C_$007C(x) {\r\n    if (typeof (x) === 'boolean') {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeNumber$007C_$007C(x) {\r\n    if (typeof (x) === 'number') {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeObject$007C_$007C(x) {\r\n    if (typeof (x) === 'object') {\r\n        return some(x);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNull$007C_$007C(x) {\r\n    if (x == null) {\r\n        return some(x);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNativeArray$007C_$007C(x) {\r\n    if (Array.isArray(x)) {\r\n        return x;\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\n","import { equals, getEnumUnderlyingType, isEnum, getTupleElements, isTuple, getElementType, isArray, getFunctionElements, isFunction, getUnionCases, getUnionCaseFields, isUnion, getGenerics, getRecordElements, name, isRecord, fullName } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { UnionCase, RecordField, TypeInfo } from \"./TypeInfo.fs.js\";\r\nimport { map } from \"../fable-library.3.1.2/Array.js\";\r\nimport { collect, singleton, append, delay } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { structuralHash, Lazy } from \"../fable-library.3.1.2/Util.js\";\r\nimport { Dictionary } from \"../fable-library.3.1.2/MutableMap.js\";\r\nimport { tryGetValue } from \"../fable-library.3.1.2/MapUtil.js\";\r\nimport { FSharpRef } from \"../fable-library.3.1.2/Types.js\";\r\nimport { endsWith, isNullOrEmpty } from \"../fable-library.3.1.2/String.js\";\r\n\r\nexport function $007CPrimitiveType$007C_$007C(primType) {\r\n    const matchValue = fullName(primType);\r\n    switch (matchValue) {\r\n        case \"System.String\": {\r\n            return new TypeInfo(1);\r\n        }\r\n        case \"System.Int16\": {\r\n            return new TypeInfo(10);\r\n        }\r\n        case \"System.Int32\": {\r\n            return new TypeInfo(5);\r\n        }\r\n        case \"Microsoft.FSharp.Core.int64`1\":\r\n        case \"System.Int64\": {\r\n            return new TypeInfo(11);\r\n        }\r\n        case \"System.UInt16\": {\r\n            return new TypeInfo(2);\r\n        }\r\n        case \"System.UInt32\": {\r\n            return new TypeInfo(3);\r\n        }\r\n        case \"System.UInt64\": {\r\n            return new TypeInfo(4);\r\n        }\r\n        case \"System.DateTime\": {\r\n            return new TypeInfo(13);\r\n        }\r\n        case \"System.TimeSpan\": {\r\n            return new TypeInfo(16);\r\n        }\r\n        case \"System.DateTimeOffset\": {\r\n            return new TypeInfo(14);\r\n        }\r\n        case \"System.Boolean\": {\r\n            return new TypeInfo(6);\r\n        }\r\n        case \"System.Single\": {\r\n            return new TypeInfo(7);\r\n        }\r\n        case \"System.Double\": {\r\n            return new TypeInfo(8);\r\n        }\r\n        case \"Microsoft.FSharp.Core.decimal`1\":\r\n        case \"System.Decimal\": {\r\n            return new TypeInfo(9);\r\n        }\r\n        case \"System.Numerics.BigInteger\": {\r\n            return new TypeInfo(15);\r\n        }\r\n        case \"Microsoft.FSharp.Core.Unit\": {\r\n            return new TypeInfo(0);\r\n        }\r\n        case \"System.Guid\": {\r\n            return new TypeInfo(17);\r\n        }\r\n        case \"System.Byte\": {\r\n            return new TypeInfo(12);\r\n        }\r\n        case \"System.Object\": {\r\n            return new TypeInfo(18);\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function $007CRecordType$007C_$007C(t) {\r\n    if (isRecord(t)) {\r\n        return map((field) => [field, name(field), field[1]], getRecordElements(t));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CSetType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpSet`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CNullable$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Nullable`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CUnionType$007C_$007C(t) {\r\n    if (isUnion(t)) {\r\n        return map((info) => [name(info), info, map((prop) => prop[1], getUnionCaseFields(info))], getUnionCases(t));\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CMapType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpMap`2\") === 0) {\r\n        const genArgs = getGenerics(t);\r\n        return [genArgs[0], genArgs[1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CListType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Collections.FSharpList`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function flattenFuncTypes(typeDef) {\r\n    return Array.from(delay(() => {\r\n        if (isFunction(typeDef)) {\r\n            const patternInput = getFunctionElements(typeDef);\r\n            return append(flattenFuncTypes(patternInput[0]), delay(() => flattenFuncTypes(patternInput[1])));\r\n        }\r\n        else {\r\n            return singleton(typeDef);\r\n        }\r\n    }));\r\n}\r\n\r\nexport function $007CFuncType$007C_$007C(t) {\r\n    if (isFunction(t)) {\r\n        return flattenFuncTypes(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CArrayType$007C_$007C(t) {\r\n    if (isArray(t)) {\r\n        return getElementType(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007COptionType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Core.FSharpOption`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CTupleType$007C_$007C(t) {\r\n    if (isTuple(t)) {\r\n        return getTupleElements(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CSeqType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.IEnumerable`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CDictionaryType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.Dictionary\") === 0) {\r\n        const genArgs = getGenerics(t);\r\n        return [genArgs[0], genArgs[1]];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CResizeArrayType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.List\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CHashSetType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"System.Collections.Generic.HashSet\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CAsyncType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Microsoft.FSharp.Control.FSharpAsync`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nexport function $007CPromiseType$007C_$007C(t) {\r\n    if (fullName(t).indexOf(\"Fable.Core.JS.Promise`1\") === 0) {\r\n        return getGenerics(t)[0];\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nfunction lazyToDelayed(l, unitVar0) {\r\n    return l.Value;\r\n}\r\n\r\nexport function $007CEnumType$007C_$007C(t) {\r\n    if (isEnum(t)) {\r\n        return getEnumUnderlyingType(t);\r\n    }\r\n    else {\r\n        return void 0;\r\n    }\r\n}\r\n\r\nfunction _createTypeInfo(resolvedType) {\r\n    let l, l_3, l_4, l_5, l_6, l_7, l_8, l_9, l_10, l_11, l_12, l_13, l_14, l_15, l_16, l_17;\r\n    const activePatternResult23498 = $007CPrimitiveType$007C_$007C(resolvedType);\r\n    if (activePatternResult23498 != null) {\r\n        const typeInfo = activePatternResult23498;\r\n        return typeInfo;\r\n    }\r\n    else {\r\n        const activePatternResult23497 = $007CFuncType$007C_$007C(resolvedType);\r\n        if (activePatternResult23497 != null) {\r\n            const types = activePatternResult23497;\r\n            return new TypeInfo(32, (l = (new Lazy(() => map(createTypeInfo, types))), () => lazyToDelayed(l, void 0)));\r\n        }\r\n        else {\r\n            const activePatternResult23496 = $007CRecordType$007C_$007C(resolvedType);\r\n            if (activePatternResult23496 != null) {\r\n                const fields = activePatternResult23496;\r\n                const l_1 = new Lazy(() => [Array.from(delay(() => collect((matchValue) => singleton(new RecordField(matchValue[1], createTypeInfo(matchValue[2]), matchValue[0])), fields))), resolvedType]);\r\n                return new TypeInfo(34, () => lazyToDelayed(l_1, void 0));\r\n            }\r\n            else {\r\n                const activePatternResult23495 = $007CUnionType$007C_$007C(resolvedType);\r\n                if (activePatternResult23495 != null) {\r\n                    const cases = activePatternResult23495;\r\n                    const l_2 = new Lazy(() => [Array.from(delay(() => collect((matchValue_1) => singleton(new UnionCase(matchValue_1[0], map(createTypeInfo, matchValue_1[2]), matchValue_1[1])), cases))), resolvedType]);\r\n                    return new TypeInfo(35, () => lazyToDelayed(l_2, void 0));\r\n                }\r\n                else {\r\n                    const activePatternResult23494 = $007CEnumType$007C_$007C(resolvedType);\r\n                    if (activePatternResult23494 != null) {\r\n                        const elemType = activePatternResult23494;\r\n                        return new TypeInfo(33, (l_3 = (new Lazy(() => [createTypeInfo(elemType), resolvedType])), () => lazyToDelayed(l_3, void 0)));\r\n                    }\r\n                    else {\r\n                        const activePatternResult23493 = $007CListType$007C_$007C(resolvedType);\r\n                        if (activePatternResult23493 != null) {\r\n                            const elemType_1 = activePatternResult23493;\r\n                            return new TypeInfo(23, (l_4 = (new Lazy(() => createTypeInfo(elemType_1))), () => lazyToDelayed(l_4, void 0)));\r\n                        }\r\n                        else {\r\n                            const activePatternResult23492 = $007CResizeArrayType$007C_$007C(resolvedType);\r\n                            if (activePatternResult23492 != null) {\r\n                                const elemType_2 = activePatternResult23492;\r\n                                return new TypeInfo(30, (l_5 = (new Lazy(() => createTypeInfo(elemType_2))), () => lazyToDelayed(l_5, void 0)));\r\n                            }\r\n                            else {\r\n                                const activePatternResult23491 = $007CHashSetType$007C_$007C(resolvedType);\r\n                                if (activePatternResult23491 != null) {\r\n                                    const elemType_3 = activePatternResult23491;\r\n                                    return new TypeInfo(31, (l_6 = (new Lazy(() => createTypeInfo(elemType_3))), () => lazyToDelayed(l_6, void 0)));\r\n                                }\r\n                                else {\r\n                                    const activePatternResult23490 = $007CArrayType$007C_$007C(resolvedType);\r\n                                    if (activePatternResult23490 != null) {\r\n                                        const elemType_4 = activePatternResult23490;\r\n                                        return new TypeInfo(25, (l_7 = (new Lazy(() => createTypeInfo(elemType_4))), () => lazyToDelayed(l_7, void 0)));\r\n                                    }\r\n                                    else {\r\n                                        const activePatternResult23489 = $007CTupleType$007C_$007C(resolvedType);\r\n                                        if (activePatternResult23489 != null) {\r\n                                            const types_1 = activePatternResult23489;\r\n                                            return new TypeInfo(27, (l_8 = (new Lazy(() => map(createTypeInfo, types_1))), () => lazyToDelayed(l_8, void 0)));\r\n                                        }\r\n                                        else {\r\n                                            const activePatternResult23488 = $007COptionType$007C_$007C(resolvedType);\r\n                                            if (activePatternResult23488 != null) {\r\n                                                const elemType_5 = activePatternResult23488;\r\n                                                return new TypeInfo(22, (l_9 = (new Lazy(() => createTypeInfo(elemType_5))), () => lazyToDelayed(l_9, void 0)));\r\n                                            }\r\n                                            else {\r\n                                                const activePatternResult23487 = $007CNullable$007C_$007C(resolvedType);\r\n                                                if (activePatternResult23487 != null) {\r\n                                                    const elemType_6 = activePatternResult23487;\r\n                                                    return new TypeInfo(22, (l_10 = (new Lazy(() => createTypeInfo(elemType_6))), () => lazyToDelayed(l_10, void 0)));\r\n                                                }\r\n                                                else {\r\n                                                    const activePatternResult23486 = $007CSetType$007C_$007C(resolvedType);\r\n                                                    if (activePatternResult23486 != null) {\r\n                                                        const elemType_7 = activePatternResult23486;\r\n                                                        return new TypeInfo(24, (l_11 = (new Lazy(() => createTypeInfo(elemType_7))), () => lazyToDelayed(l_11, void 0)));\r\n                                                    }\r\n                                                    else {\r\n                                                        const activePatternResult23485 = $007CMapType$007C_$007C(resolvedType);\r\n                                                        if (activePatternResult23485 != null) {\r\n                                                            const keyType = activePatternResult23485[0];\r\n                                                            const valueType = activePatternResult23485[1];\r\n                                                            return new TypeInfo(28, (l_12 = (new Lazy(() => [createTypeInfo(keyType), createTypeInfo(valueType)])), () => lazyToDelayed(l_12, void 0)));\r\n                                                        }\r\n                                                        else {\r\n                                                            const activePatternResult23484 = $007CDictionaryType$007C_$007C(resolvedType);\r\n                                                            if (activePatternResult23484 != null) {\r\n                                                                const keyType_1 = activePatternResult23484[0];\r\n                                                                const valueType_1 = activePatternResult23484[1];\r\n                                                                return new TypeInfo(29, (l_13 = (new Lazy(() => [createTypeInfo(keyType_1), createTypeInfo(valueType_1), valueType_1])), () => lazyToDelayed(l_13, void 0)));\r\n                                                            }\r\n                                                            else {\r\n                                                                const activePatternResult23483 = $007CSeqType$007C_$007C(resolvedType);\r\n                                                                if (activePatternResult23483 != null) {\r\n                                                                    const elemType_8 = activePatternResult23483;\r\n                                                                    return new TypeInfo(26, (l_14 = (new Lazy(() => createTypeInfo(elemType_8))), () => lazyToDelayed(l_14, void 0)));\r\n                                                                }\r\n                                                                else {\r\n                                                                    const activePatternResult23482 = $007CAsyncType$007C_$007C(resolvedType);\r\n                                                                    if (activePatternResult23482 != null) {\r\n                                                                        const elemType_9 = activePatternResult23482;\r\n                                                                        return new TypeInfo(20, (l_15 = (new Lazy(() => createTypeInfo(elemType_9))), () => lazyToDelayed(l_15, void 0)));\r\n                                                                    }\r\n                                                                    else {\r\n                                                                        const activePatternResult23481 = $007CPromiseType$007C_$007C(resolvedType);\r\n                                                                        if (activePatternResult23481 != null) {\r\n                                                                            const elemType_10 = activePatternResult23481;\r\n                                                                            return new TypeInfo(21, (l_16 = (new Lazy(() => createTypeInfo(elemType_10))), () => lazyToDelayed(l_16, void 0)));\r\n                                                                        }\r\n                                                                        else {\r\n                                                                            return new TypeInfo(19, (l_17 = (new Lazy(() => resolvedType)), () => lazyToDelayed(l_17, void 0)));\r\n                                                                        }\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst typeInfoCache = new Dictionary([], {\r\n    Equals: equals,\r\n    GetHashCode: structuralHash,\r\n});\r\n\r\nexport function createTypeInfo(resolvedType) {\r\n    let matchValue;\r\n    let outArg = null;\r\n    matchValue = [tryGetValue(typeInfoCache, resolvedType, new FSharpRef(() => outArg, (v) => {\r\n        outArg = v;\r\n    })), outArg];\r\n    if (matchValue[0]) {\r\n        return matchValue[1];\r\n    }\r\n    else {\r\n        const ti_1 = _createTypeInfo(resolvedType);\r\n        if (((!isNullOrEmpty(fullName(resolvedType))) ? (!endsWith(fullName(resolvedType), \"`1[]\")) : false) ? (!endsWith(fullName(resolvedType), \"`2[]\")) : false) {\r\n            typeInfoCache.set(resolvedType, ti_1);\r\n            return ti_1;\r\n        }\r\n        else {\r\n            return ti_1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function isPrimitive(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 0:\r\n        case 1:\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n        case 10:\r\n        case 11:\r\n        case 12:\r\n        case 13:\r\n        case 14:\r\n        case 15:\r\n        case 17:\r\n        case 22: {\r\n            return true;\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function enumUnion(_arg1) {\r\n    if (_arg1.tag === 35) {\r\n        return _arg1.fields[0]()[0].every((case$) => (case$.CaseTypes.length === 0));\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\n","// export type decimal = Decimal;\nexport var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [/*all*/ , sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(/_/g, \"\"));\n    if (res != null) {\n        const [/*all*/ , /*sign*/ , prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize, defValue) {\n    try {\n        defValue.contents = parse(str, style, unsigned, bitsize);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","import { sumBy, iterate, map, iterateIndexed, toIterator, concat, getEnumerator } from \"./Seq.js\";\nimport { FSharpRef } from \"./Types.js\";\nimport { class_type } from \"./Reflection.js\";\nimport { getItemFromDict, tryGetValue } from \"./MapUtil.js\";\nimport { some } from \"./Option.js\";\n\nexport class HashSet {\n    constructor(items, comparer) {\n        const this$ = new FSharpRef(null);\n        this.comparer = comparer;\n        this$.contents = this;\n        this.hashMap = (new Map([]));\n        this[\"init@8-2\"] = 1;\n        const enumerator = getEnumerator(items);\n        try {\n            while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n                const value = HashSet__Add_2B595(this$.contents, enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n                void value;\n            }\n        }\n        finally {\n            enumerator.Dispose();\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return \"HashSet\";\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const this$ = this;\n        return getEnumerator(this$);\n    }\n    GetEnumerator() {\n        const this$ = this;\n        return getEnumerator(concat(this$.hashMap.values()));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](item) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, item);\n        void value;\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](item) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, item);\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](array, arrayIndex) {\n        const this$ = this;\n        iterateIndexed((i, e) => {\n            array[arrayIndex + i] = e;\n        }, this$);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return false;\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](item) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, item);\n    }\n    get size() {\n        const this$ = this;\n        return HashSet__get_Count(this$) | 0;\n    }\n    add(k) {\n        const this$ = this;\n        const value = HashSet__Add_2B595(this$, k);\n        void value;\n        return this$;\n    }\n    clear() {\n        const this$ = this;\n        HashSet__Clear(this$);\n    }\n    delete(k) {\n        const this$ = this;\n        return HashSet__Remove_2B595(this$, k);\n    }\n    has(k) {\n        const this$ = this;\n        return HashSet__Contains_2B595(this$, k);\n    }\n    keys() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    values() {\n        const this$ = this;\n        return map((x) => x, this$);\n    }\n    entries() {\n        const this$ = this;\n        return map((v) => [v, v], this$);\n    }\n    forEach(f, thisArg) {\n        const this$ = this;\n        iterate((x) => {\n            f(x, x, this$);\n        }, this$);\n    }\n}\n\nexport function HashSet$reflection(gen0) {\n    return class_type(\"Fable.Collections.HashSet\", [gen0], HashSet);\n}\n\nexport function HashSet_$ctor_Z6150332D(items, comparer) {\n    return new HashSet(items, comparer);\n}\n\nfunction HashSet__TryFindIndex_2B595(this$, k) {\n    const h = this$.comparer.GetHashCode(k) | 0;\n    let matchValue;\n    let outArg = null;\n    matchValue = [tryGetValue(this$.hashMap, h, new FSharpRef(() => outArg, (v) => {\n        outArg = v;\n    })), outArg];\n    if (matchValue[0]) {\n        return [true, h, matchValue[1].findIndex((v_1) => this$.comparer.Equals(k, v_1))];\n    }\n    else {\n        return [false, h, -1];\n    }\n}\n\nfunction HashSet__TryFind_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return some(getItemFromDict(this$.hashMap, matchValue[1])[matchValue[2]]);\n        }\n        case 1: {\n            return void 0;\n        }\n    }\n}\n\nexport function HashSet__get_Comparer(this$) {\n    return this$.comparer;\n}\n\nexport function HashSet__Clear(this$) {\n    this$.hashMap.clear();\n}\n\nexport function HashSet__get_Count(this$) {\n    return sumBy((pairs) => pairs.length, this$.hashMap.values(), {\n        GetZero: () => 0,\n        Add: (x, y) => (x + y),\n    });\n}\n\nexport function HashSet__Add_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return false;\n        }\n        case 1: {\n            if (matchValue[0]) {\n                const value = void (getItemFromDict(this$.hashMap, matchValue[1]).push(k));\n                void undefined;\n                return true;\n            }\n            else {\n                this$.hashMap.set(matchValue[1], [k]);\n                return true;\n            }\n        }\n    }\n}\n\nexport function HashSet__Contains_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\nexport function HashSet__Remove_2B595(this$, k) {\n    const matchValue = HashSet__TryFindIndex_2B595(this$, k);\n    let pattern_matching_result;\n    if (matchValue[0]) {\n        if (matchValue[2] > -1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n    }\n    else {\n        pattern_matching_result = 1;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            getItemFromDict(this$.hashMap, matchValue[1]).splice(matchValue[2], 1);\n            return true;\n        }\n        case 1: {\n            return false;\n        }\n    }\n}\n\n","import { fromBits, getHighBits, getHighBitsUnsigned, getLowBits, getLowBitsUnsigned } from \"./Long.js\";\nconst littleEndian = true;\nexport function isLittleEndian() {\n    return littleEndian;\n}\nexport function getBytesBoolean(value) {\n    const bytes = new Uint8Array(1);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint8(0, value ? 1 : 0);\n    return bytes;\n}\nexport function getBytesChar(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value.charCodeAt(0), littleEndian);\n    return bytes;\n}\nexport function getBytesInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return bytes;\n}\nexport function getBytesUInt16(value) {\n    const bytes = new Uint8Array(2);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint16(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt32(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesUInt64(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setUint32(littleEndian ? 0 : 4, getLowBitsUnsigned(value), littleEndian);\n    view.setUint32(littleEndian ? 4 : 0, getHighBitsUnsigned(value), littleEndian);\n    return bytes;\n}\nexport function getBytesSingle(value) {\n    const bytes = new Uint8Array(4);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat32(0, value, littleEndian);\n    return bytes;\n}\nexport function getBytesDouble(value) {\n    const bytes = new Uint8Array(8);\n    const view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    view.setFloat64(0, value, littleEndian);\n    return bytes;\n}\nexport function int64BitsToDouble(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setInt32(littleEndian ? 0 : 4, getLowBits(value), littleEndian);\n    view.setInt32(littleEndian ? 4 : 0, getHighBits(value), littleEndian);\n    return view.getFloat64(0, littleEndian);\n}\nexport function doubleToInt64Bits(value) {\n    const buffer = new ArrayBuffer(8);\n    const view = new DataView(buffer);\n    view.setFloat64(0, value, littleEndian);\n    const lowBits = view.getInt32(littleEndian ? 0 : 4, littleEndian);\n    const highBits = view.getInt32(littleEndian ? 4 : 0, littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toBoolean(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint8(offset) === 1 ? true : false;\n}\nexport function toChar(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const code = view.getUint16(offset, littleEndian);\n    return String.fromCharCode(code);\n}\nexport function toInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt16(offset, littleEndian);\n}\nexport function toInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getInt32(offset, littleEndian);\n}\nexport function toInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getInt32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getInt32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, false);\n}\nexport function toUInt16(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint16(offset, littleEndian);\n}\nexport function toUInt32(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getUint32(offset, littleEndian);\n}\nexport function toUInt64(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const lowBits = view.getUint32(offset + (littleEndian ? 0 : 4), littleEndian);\n    const highBits = view.getUint32(offset + (littleEndian ? 4 : 0), littleEndian);\n    return fromBits(lowBits, highBits, true);\n}\nexport function toSingle(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat32(offset, littleEndian);\n}\nexport function toDouble(bytes, offset) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    return view.getFloat64(offset, littleEndian);\n}\nexport function toString(bytes, offset, count) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n    if (offset != null && count != null) {\n        buffer = buffer.subarray(offset, offset + count);\n    }\n    else if (offset != null) {\n        buffer = buffer.subarray(offset);\n    }\n    return Array.from(buffer).map((b) => (\"0\" + b.toString(16)).slice(-2)).join(\"-\");\n}\n","import { trim } from \"./String.js\";\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[\\(\\{]{0,2}[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[\\)\\}]{0,2}$/;\nconst guidRegexNoHyphen = /^([0-9a-f]{8})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{4})([0-9a-f]{12})$/;\nconst guidRegexHex = /^\\{0x[0-9a-f]{8},(0x[0-9a-f]{4},){2}\\{(0x[0-9a-f]{2},){7}0x[0-9a-f]{2}\\}\\}$/;\nconst guidHexCaptures = /^([0-9a-f]{8})-(([0-9a-f]{4})-)(([0-9a-f]{4})-)([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/;\nexport function toString(str, format, _provider) {\n    if (format && (format === null || format === void 0 ? void 0 : format.length) > 0) {\n        switch (format) {\n            case \"N\":\n                return str.replace(/-/g, '');\n            case \"D\":\n                return str;\n            case \"B\":\n                return \"{\" + str + \"}\";\n            case \"P\":\n                return \"(\" + str + \")\";\n            case \"X\":\n                return str.replace(guidHexCaptures, \"{0x$1,0x$3,0x$5,{0x$6,0x$7,0x$8,0x$9,0x$10,0x$11,0x$12,0x$13}}\");\n            default:\n                throw new Error(\"Unrecognized Guid print format\");\n        }\n    }\n    else {\n        return str;\n    }\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). */\nexport function parse(str) {\n    function hyphenateGuid(str) {\n        return str.replace(guidRegexNoHyphen, \"$1-$2-$3-$4-$5\");\n    }\n    const wsTrimAndLowered = str.trim().toLowerCase();\n    if (guidRegex.test(wsTrimAndLowered)) {\n        return trim(wsTrimAndLowered, \"{\", \"}\", \"(\", \")\");\n    }\n    else if (guidRegexNoHyphen.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered);\n    }\n    else if (guidRegexHex.test(wsTrimAndLowered)) {\n        return hyphenateGuid(wsTrimAndLowered.replace(/[\\{\\},]|0x/g, ''));\n    }\n    else {\n        throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n    }\n}\nexport function tryParse(str, defValue) {\n    try {\n        defValue.contents = parse(str);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    const guid = _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n    return guid;\n}\n","import { combineHashCodes, compare, compareArrays, equalArrays, equals, sameConstructor, numberHash, structuralHash } from \"./Util.js\";\nexport function seqToString(self) {\n    let count = 0;\n    let str = \"[\";\n    for (const x of self) {\n        if (count === 0) {\n            str += toString(x);\n        }\n        else if (count === 100) {\n            str += \"; ...\";\n            break;\n        }\n        else {\n            str += \"; \" + toString(x);\n        }\n        count++;\n    }\n    return str + \"]\";\n}\nexport function toString(x, callStack = 0) {\n    if (x != null && typeof x === \"object\") {\n        if (typeof x.toString === \"function\") {\n            return x.toString();\n        }\n        else if (Symbol.iterator in x) {\n            return seqToString(x);\n        }\n        else { // TODO: Date?\n            const cons = Object.getPrototypeOf(x).constructor;\n            return cons === Object && callStack < 10\n                // Same format as recordToString\n                ? \"{ \" + Object.entries(x).map(([k, v]) => k + \" = \" + toString(v, callStack + 1)).join(\"\\n  \") + \" }\"\n                : cons.name;\n        }\n    }\n    return String(x);\n}\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport class List {\n    constructor(head, tail) {\n        this.head = head;\n        this.tail = tail;\n    }\n    [Symbol.iterator]() {\n        let cur = this;\n        return {\n            next: () => {\n                const value = cur === null || cur === void 0 ? void 0 : cur.head;\n                const done = (cur === null || cur === void 0 ? void 0 : cur.tail) == null;\n                cur = cur === null || cur === void 0 ? void 0 : cur.tail;\n                return { done, value };\n            },\n        };\n    }\n    toJSON() { return Array.from(this); }\n    toString() { return seqToString(this); }\n    GetHashCode() { return combineHashCodes(Array.from(this).map(structuralHash)); }\n    Equals(other) { return compareList(this, other) === 0; }\n    CompareTo(other) { return compareList(this, other); }\n}\nexport class Union {\n    get name() {\n        return this.cases()[this.tag];\n    }\n    toJSON() {\n        return this.fields.length === 0 ? this.name : [this.name].concat(this.fields);\n    }\n    toString() {\n        if (this.fields.length === 0) {\n            return this.name;\n        }\n        else {\n            let fields = \"\";\n            let withParens = true;\n            if (this.fields.length === 1) {\n                const field = toString(this.fields[0]);\n                withParens = field.indexOf(\" \") >= 0;\n                fields = field;\n            }\n            else {\n                fields = this.fields.map((x) => toString(x)).join(\", \");\n            }\n            return this.name + (withParens ? \" (\" : \" \") + fields + (withParens ? \")\" : \"\");\n        }\n    }\n    GetHashCode() {\n        const hashes = this.fields.map((x) => structuralHash(x));\n        hashes.splice(0, 0, numberHash(this.tag));\n        return combineHashCodes(hashes);\n    }\n    Equals(other) {\n        if (this === other) {\n            return true;\n        }\n        else if (!sameConstructor(this, other)) {\n            return false;\n        }\n        else if (this.tag === other.tag) {\n            return equalArrays(this.fields, other.fields);\n        }\n        else {\n            return false;\n        }\n    }\n    CompareTo(other) {\n        if (this === other) {\n            return 0;\n        }\n        else if (!sameConstructor(this, other)) {\n            return -1;\n        }\n        else if (this.tag === other.tag) {\n            return compareArrays(this.fields, other.fields);\n        }\n        else {\n            return this.tag < other.tag ? -1 : 1;\n        }\n    }\n}\nfunction recordToJSON(self) {\n    const o = {};\n    const keys = Object.keys(self);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = self[keys[i]];\n    }\n    return o;\n}\nfunction recordToString(self) {\n    return \"{ \" + Object.entries(self).map(([k, v]) => k + \" = \" + toString(v)).join(\"\\n  \") + \" }\";\n}\nfunction recordGetHashCode(self) {\n    const hashes = Object.values(self).map((v) => structuralHash(v));\n    return combineHashCodes(hashes);\n}\nfunction recordEquals(self, other) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameConstructor(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompareTo(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameConstructor(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = Object.keys(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport class Record {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class FSharpRef {\n    constructor(contentsOrGetter, setter) {\n        if (typeof setter === \"function\") {\n            this.getter = contentsOrGetter;\n            this.setter = setter;\n        }\n        else {\n            this.getter = () => contentsOrGetter;\n            this.setter = (v) => { contentsOrGetter = v; };\n        }\n    }\n    get contents() {\n        return this.getter();\n    }\n    set contents(v) {\n        this.setter(v);\n    }\n}\n// EXCEPTIONS\n// Exception is intentionally not derived from Error, for performance reasons (see #2160)\nexport class Exception {\n    constructor(message) {\n        this.message = message;\n    }\n}\nexport function isException(x) {\n    return x instanceof Exception || x instanceof Error;\n}\nexport class FSharpException extends Exception {\n    toJSON() { return recordToJSON(this); }\n    toString() { return recordToString(this); }\n    GetHashCode() { return recordGetHashCode(this); }\n    Equals(other) { return recordEquals(this, other); }\n    CompareTo(other) { return recordCompareTo(this, other); }\n}\nexport class MatchFailureException extends FSharpException {\n    constructor(arg1, arg2, arg3) {\n        super();\n        this.arg1 = arg1;\n        this.arg2 = arg2 | 0;\n        this.arg3 = arg3 | 0;\n        this.message = \"The match cases were incomplete\";\n    }\n}\nexport class Attribute {\n}\n","import { List, Record } from \"../Types.js\";\nimport { record_type, array_type, int32_type } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, fromInteger, op_Multiply, op_Modulus, toInt, fromBits } from \"../Long.js\";\nimport { copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\n\nexport class BigNat extends Record {\n    constructor(bound, digits) {\n        super();\n        this.bound = (bound | 0);\n        this.digits = digits;\n    }\n}\n\nexport function BigNat$reflection() {\n    return record_type(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32_type], [\"digits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_FFT_pow32(x_mut, n_mut) {\n    BigNatModule_FFT_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_pow32;\n        }\n        else {\n            return (x * BigNatModule_FFT_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_leastBounding2Power(b) {\n    const findBounding2Power = (b_1_mut, tp_mut, i_mut) => {\n        findBounding2Power:\n        while (true) {\n            const b_1 = b_1_mut, tp = tp_mut, i = i_mut;\n            if (b_1 <= tp) {\n                return [tp, i];\n            }\n            else {\n                b_1_mut = b_1;\n                tp_mut = (tp * 2);\n                i_mut = (i + 1);\n                continue findBounding2Power;\n            }\n            break;\n        }\n    };\n    return findBounding2Power(b, 1, 0);\n}\n\nexport const BigNatModule_FFT_p = fromBits(2013265921, 0, false);\n\nconst BigNatModule_FFT_patternInput$004075 = [27, 15, 31, 440564289];\n\nexport const BigNatModule_FFT_w = BigNatModule_FFT_patternInput$004075[3];\n\nexport const BigNatModule_FFT_m = BigNatModule_FFT_patternInput$004075[1];\n\nexport const BigNatModule_FFT_k = BigNatModule_FFT_patternInput$004075[0];\n\nexport const BigNatModule_FFT_g = BigNatModule_FFT_patternInput$004075[2];\n\nexport const BigNatModule_FFT_primeP = BigNatModule_FFT_p;\n\nexport const BigNatModule_FFT_maxBitsInsideFp = 30;\n\nexport const BigNatModule_FFT_Fp_p = 2013265921;\n\nexport const BigNatModule_FFT_Fp_p64 = fromBits(2013265921, 0, true);\n\nexport function BigNatModule_FFT_Fp_toInt(x) {\n    return ~(~x);\n}\n\nexport function BigNatModule_FFT_Fp_ofInt32(x) {\n    return x >>> 0;\n}\n\nexport const BigNatModule_FFT_Fp_mzero = 0;\n\nexport const BigNatModule_FFT_Fp_mone = 1;\n\nexport const BigNatModule_FFT_Fp_mtwo = 2;\n\nexport function BigNatModule_FFT_Fp_mpow(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpow:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_FFT_Fp_mpow;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpow(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, ~(~(n / 2)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_mpowL(x_mut, n_mut) {\n    BigNatModule_FFT_Fp_mpowL:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (equals(n, fromBits(0, 0, false))) {\n            return BigNatModule_FFT_Fp_mone;\n        }\n        else if (equals(op_Modulus(n, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n            x_mut = (toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n            n_mut = op_Division(n, fromBits(2, 0, false));\n            continue BigNatModule_FFT_Fp_mpowL;\n        }\n        else {\n            const y_2 = BigNatModule_FFT_Fp_mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(x, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0, op_Division(n, fromBits(2, 0, false)));\n            return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y_2, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_FFT_Fp_m2PowNthRoot(n) {\n    return BigNatModule_FFT_Fp_mpow(BigNatModule_FFT_w >>> 0, BigNatModule_FFT_pow32(2, BigNatModule_FFT_k - n));\n}\n\nexport function BigNatModule_FFT_Fp_minv(x) {\n    return BigNatModule_FFT_Fp_mpowL(x, op_Subtraction(BigNatModule_FFT_primeP, fromBits(2, 0, false)));\n}\n\nexport function BigNatModule_FFT_computeFFT(lambda, mu, n, w, u, res, offset) {\n    let x_1, x_3;\n    if (n === 1) {\n        res[offset] = u[mu];\n    }\n    else {\n        const halfN = (~(~(n / 2))) | 0;\n        const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n        const offsetHalfN = (offset + halfN) | 0;\n        BigNatModule_FFT_computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n        BigNatModule_FFT_computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n        let wj = BigNatModule_FFT_Fp_mone;\n        for (let j = 0; j <= (halfN - 1); j++) {\n            const even = res[offset + j];\n            const odd = res[offsetHalfN + j];\n            res[offset + j] = ((even + (x_1 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_1, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            res[offsetHalfN + j] = (((even + BigNatModule_FFT_Fp_p) - (x_3 = wj, toInt(op_Modulus(op_Multiply(fromInteger(x_3, true, 6), fromInteger(odd, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0)) % BigNatModule_FFT_Fp_p);\n            const y_5 = wj;\n            wj = (toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(y_5, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0);\n        }\n    }\n}\n\nexport function BigNatModule_FFT_computFftInPlace(n, w, u) {\n    const res = fill(new Uint32Array(n), 0, n, BigNatModule_FFT_Fp_mzero);\n    BigNatModule_FFT_computeFFT(1, 0, n, w, u, res, 0);\n    return res;\n}\n\nexport function BigNatModule_FFT_computeInverseFftInPlace(n, w, uT) {\n    const bigKInv = BigNatModule_FFT_Fp_minv(n >>> 0);\n    return map((y) => (toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0), BigNatModule_FFT_computFftInPlace(n, BigNatModule_FFT_Fp_minv(w), uT), Uint32Array);\n}\n\nexport const BigNatModule_FFT_maxTwoPower = 29;\n\nexport const BigNatModule_FFT_twoPowerTable = initialize(BigNatModule_FFT_maxTwoPower - 1, (i) => BigNatModule_FFT_pow32(2, i), Int32Array);\n\nexport function BigNatModule_FFT_computeFftPaddedPolynomialProduct(bigK, k, u, v) {\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(k);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v);\n    return BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array));\n}\n\nexport function BigNatModule_FFT_padTo(n, u) {\n    const uBound = u.length | 0;\n    return initialize(n, (i) => ((i < uBound) ? BigNatModule_FFT_Fp_ofInt32(u[i]) : BigNatModule_FFT_Fp_mzero), Uint32Array);\n}\n\nexport function BigNatModule_FFT_computeFftPolynomialProduct(degu, u, degv, v) {\n    const patternInput = BigNatModule_FFT_leastBounding2Power((degu + degv) + 1);\n    const bigK = patternInput[0] | 0;\n    const w = BigNatModule_FFT_Fp_m2PowNthRoot(patternInput[1]);\n    const u_1 = BigNatModule_FFT_padTo(bigK, u);\n    const v_1 = BigNatModule_FFT_padTo(bigK, v);\n    const n = bigK | 0;\n    const uT = BigNatModule_FFT_computFftInPlace(n, w, u_1);\n    const vT = BigNatModule_FFT_computFftInPlace(n, w, v_1);\n    return map(BigNatModule_FFT_Fp_toInt, BigNatModule_FFT_computeInverseFftInPlace(n, w, initialize(n, (i) => {\n        const x = uT[i];\n        const y = vT[i];\n        return toInt(op_Modulus(op_Multiply(fromInteger(x, true, 6), fromInteger(y, true, 6)), BigNatModule_FFT_Fp_p64)) >>> 0;\n    }, Uint32Array)), Int32Array);\n}\n\nexport const BigNatModule_FFT_mzero = BigNatModule_FFT_Fp_mzero;\n\nexport const BigNatModule_FFT_mone = BigNatModule_FFT_Fp_mone;\n\nexport const BigNatModule_FFT_maxFp = ((BigNatModule_FFT_Fp_p + BigNatModule_FFT_Fp_p) - BigNatModule_FFT_mone) % BigNatModule_FFT_Fp_p;\n\nexport function BigNatModule_bound(n) {\n    return n.bound;\n}\n\nexport function BigNatModule_setBound(n, v) {\n    n.bound = v;\n}\n\nexport function BigNatModule_coeff(n, i) {\n    return n.digits[i];\n}\n\nexport function BigNatModule_coeff64(n, i) {\n    return fromInteger(BigNatModule_coeff(n, i), false, 2);\n}\n\nexport function BigNatModule_setCoeff(n, i, v) {\n    n.digits[i] = v;\n}\n\nexport function BigNatModule_pow64(x_mut, n_mut) {\n    BigNatModule_pow64:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return fromBits(1, 0, false);\n        }\n        else if ((n % 2) === 0) {\n            x_mut = op_Multiply(x, x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow64;\n        }\n        else {\n            return op_Multiply(x, BigNatModule_pow64(op_Multiply(x, x), ~(~(n / 2))));\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_pow32(x_mut, n_mut) {\n    BigNatModule_pow32:\n    while (true) {\n        const x = x_mut, n = n_mut;\n        if (n === 0) {\n            return 1;\n        }\n        else if ((n % 2) === 0) {\n            x_mut = (x * x);\n            n_mut = (~(~(n / 2)));\n            continue BigNatModule_pow32;\n        }\n        else {\n            return (x * BigNatModule_pow32(x * x, ~(~(n / 2)))) | 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_hash(n) {\n    let res = 0;\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        res = (n.digits[i] + (res << 3));\n    }\n    return res | 0;\n}\n\nexport function BigNatModule_maxInt(a, b) {\n    if (a < b) {\n        return b | 0;\n    }\n    else {\n        return a | 0;\n    }\n}\n\nexport function BigNatModule_minInt(a, b) {\n    if (a < b) {\n        return a | 0;\n    }\n    else {\n        return b | 0;\n    }\n}\n\nexport const BigNatModule_baseBits = 24;\n\nexport const BigNatModule_baseN = 16777216;\n\nexport const BigNatModule_baseMask = 16777215;\n\nexport const BigNatModule_baseNi64 = fromBits(16777216, 0, false);\n\nexport const BigNatModule_baseMaski64 = fromBits(16777215, 0, false);\n\nexport const BigNatModule_baseMaskU = fromBits(16777215, 0, true);\n\nexport const BigNatModule_baseMask32A = 16777215;\n\nexport const BigNatModule_baseMask32B = 255;\n\nexport const BigNatModule_baseShift32B = 24;\n\nexport const BigNatModule_baseMask64A = 16777215;\n\nexport const BigNatModule_baseMask64B = 16777215;\n\nexport const BigNatModule_baseMask64C = 65535;\n\nexport const BigNatModule_baseShift64B = 24;\n\nexport const BigNatModule_baseShift64C = 48;\n\nexport function BigNatModule_divbase(x) {\n    return ~(~((x >>> 0) >>> BigNatModule_baseBits));\n}\n\nexport function BigNatModule_modbase(x) {\n    return x & BigNatModule_baseMask;\n}\n\nexport function BigNatModule_createN(b) {\n    return new BigNat(b, new Int32Array(b));\n}\n\nexport function BigNatModule_copyN(x) {\n    return new BigNat(x.bound, copy(x.digits));\n}\n\nexport function BigNatModule_normN(n) {\n    const findLeastBound = (na_mut, i_mut) => {\n        findLeastBound:\n        while (true) {\n            const na = na_mut, i = i_mut;\n            if ((i === -1) ? true : (na[i] !== 0)) {\n                return (i + 1) | 0;\n            }\n            else {\n                na_mut = na;\n                i_mut = (i - 1);\n                continue findLeastBound;\n            }\n            break;\n        }\n    };\n    const bound = findLeastBound(n.digits, n.bound - 1) | 0;\n    n.bound = bound;\n    return n;\n}\n\nexport const BigNatModule_boundInt = 2;\n\nexport const BigNatModule_boundInt64 = 3;\n\nexport const BigNatModule_boundBase = 1;\n\nexport function BigNatModule_embed(x) {\n    const x_1 = ((x < 0) ? 0 : x) | 0;\n    if (x_1 < BigNatModule_baseN) {\n        const r = BigNatModule_createN(1);\n        r.digits[0] = x_1;\n        return BigNatModule_normN(r);\n    }\n    else {\n        const r_1 = BigNatModule_createN(BigNatModule_boundInt);\n        for (let i = 0; i <= (BigNatModule_boundInt - 1); i++) {\n            r_1.digits[i] = ((~(~(x_1 / BigNatModule_pow32(BigNatModule_baseN, i)))) % BigNatModule_baseN);\n        }\n        return BigNatModule_normN(r_1);\n    }\n}\n\nexport function BigNatModule_embed64(x) {\n    const x_1 = (compare(x, fromBits(0, 0, false)) < 0) ? fromBits(0, 0, false) : x;\n    const r = BigNatModule_createN(BigNatModule_boundInt64);\n    for (let i = 0; i <= (BigNatModule_boundInt64 - 1); i++) {\n        r.digits[i] = (~(~toInt(op_Modulus(op_Division(x_1, BigNatModule_pow64(BigNatModule_baseNi64, i)), BigNatModule_baseNi64))));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_eval32(n) {\n    if (n.bound === 1) {\n        return n.digits[0] | 0;\n    }\n    else {\n        let acc = 0;\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = (n.digits[i] + (BigNatModule_baseN * acc));\n        }\n        return acc | 0;\n    }\n}\n\nexport function BigNatModule_eval64(n) {\n    if (n.bound === 1) {\n        return fromInteger(n.digits[0], false, 2);\n    }\n    else {\n        let acc = fromBits(0, 0, false);\n        for (let i = n.bound - 1; i >= 0; i--) {\n            acc = op_Addition(fromInteger(n.digits[i], false, 2), op_Multiply(BigNatModule_baseNi64, acc));\n        }\n        return acc;\n    }\n}\n\nexport const BigNatModule_one = BigNatModule_embed(1);\n\nexport const BigNatModule_zero = BigNatModule_embed(0);\n\nexport function BigNatModule_restrictTo(d, n) {\n    return new BigNat(BigNatModule_minInt(d, n.bound), n.digits);\n}\n\nexport function BigNatModule_shiftUp(d, n) {\n    const m = BigNatModule_createN(n.bound + d);\n    for (let i = 0; i <= (n.bound - 1); i++) {\n        m.digits[i + d] = n.digits[i];\n    }\n    return m;\n}\n\nexport function BigNatModule_shiftDown(d, n) {\n    if ((n.bound - d) <= 0) {\n        return BigNatModule_zero;\n    }\n    else {\n        const m = BigNatModule_createN(n.bound - d);\n        for (let i = 0; i <= (m.bound - 1); i++) {\n            m.digits[i] = n.digits[i + d];\n        }\n        return m;\n    }\n}\n\nexport function BigNatModule_degree(n) {\n    return n.bound - 1;\n}\n\nexport function BigNatModule_addP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_addP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) + (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            r.digits[i] = BigNatModule_modbase(x);\n            i_mut = (i + 1);\n            n_mut = n;\n            c_mut = BigNatModule_divbase(x);\n            p_mut = p;\n            q_mut = q;\n            r_mut = r;\n            continue BigNatModule_addP;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_add(p, q) {\n    const rbound = (1 + BigNatModule_maxInt(p.bound, q.bound)) | 0;\n    const r = BigNatModule_createN(rbound);\n    BigNatModule_addP(0, rbound, 0, p, q, r);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_subP(i_mut, n_mut, c_mut, p_mut, q_mut, r_mut) {\n    let z, i_1, z_1, i_2;\n    BigNatModule_subP:\n    while (true) {\n        const i = i_mut, n = n_mut, c = c_mut, p = p_mut, q = q_mut, r = r_mut;\n        if (i < n) {\n            const x = (((z = p, (i_1 = (i | 0), (i_1 < z.bound) ? z.digits[i_1] : 0)) - (z_1 = q, (i_2 = (i | 0), (i_2 < z_1.bound) ? z_1.digits[i_2] : 0))) + c) | 0;\n            if (x > 0) {\n                r.digits[i] = BigNatModule_modbase(x);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = BigNatModule_divbase(x);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n            else {\n                const x_1 = (x + BigNatModule_baseN) | 0;\n                r.digits[i] = BigNatModule_modbase(x_1);\n                i_mut = (i + 1);\n                n_mut = n;\n                c_mut = (BigNatModule_divbase(x_1) - 1);\n                p_mut = p;\n                q_mut = q;\n                r_mut = r;\n                continue BigNatModule_subP;\n            }\n        }\n        else {\n            return c !== 0;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_sub(p, q) {\n    const rbound = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    const r = BigNatModule_createN(rbound);\n    if (BigNatModule_subP(0, rbound, 0, p, q, r)) {\n        return BigNatModule_embed(0);\n    }\n    else {\n        return BigNatModule_normN(r);\n    }\n}\n\nexport function BigNatModule_isZero(p) {\n    return p.bound === 0;\n}\n\nexport function BigNatModule_IsZero(p) {\n    return BigNatModule_isZero(p);\n}\n\nexport function BigNatModule_isOne(p) {\n    if (p.bound === 1) {\n        return p.digits[0] === 1;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_equal(p, q) {\n    if (p.bound === q.bound) {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return true;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else {\n                    return false;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigNatModule_shiftCompare(p, pn, q, qn) {\n    if ((p.bound + pn) < (q.bound + qn)) {\n        return -1;\n    }\n    else if ((p.bound + pn) > (q.bound + pn)) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else {\n                    const pai = ((i < pn) ? 0 : pa[i - pn]) | 0;\n                    const qai = ((i < qn) ? 0 : qa[i - qn]) | 0;\n                    if (pai === qai) {\n                        pa_mut = pa;\n                        qa_mut = qa;\n                        i_mut = (i - 1);\n                        continue check;\n                    }\n                    else if (pai < qai) {\n                        return -1;\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, (p.bound + pn) - 1) | 0;\n    }\n}\n\nexport function BigNatModule_compare(p, q) {\n    if (p.bound < q.bound) {\n        return -1;\n    }\n    else if (p.bound > q.bound) {\n        return 1;\n    }\n    else {\n        const check = (pa_mut, qa_mut, i_mut) => {\n            check:\n            while (true) {\n                const pa = pa_mut, qa = qa_mut, i = i_mut;\n                if (i === -1) {\n                    return 0;\n                }\n                else if (pa[i] === qa[i]) {\n                    pa_mut = pa;\n                    qa_mut = qa;\n                    i_mut = (i - 1);\n                    continue check;\n                }\n                else if (pa[i] < qa[i]) {\n                    return -1;\n                }\n                else {\n                    return 1;\n                }\n                break;\n            }\n        };\n        return check(p.digits, q.digits, p.bound - 1) | 0;\n    }\n}\n\nexport function BigNatModule_lt(p, q) {\n    return BigNatModule_compare(p, q) === -1;\n}\n\nexport function BigNatModule_gt(p, q) {\n    return BigNatModule_compare(p, q) === 1;\n}\n\nexport function BigNatModule_lte(p, q) {\n    return BigNatModule_compare(p, q) !== 1;\n}\n\nexport function BigNatModule_gte(p, q) {\n    return BigNatModule_compare(p, q) !== -1;\n}\n\nexport function BigNatModule_min(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return a;\n    }\n    else {\n        return b;\n    }\n}\n\nexport function BigNatModule_max(a, b) {\n    if (BigNatModule_lt(a, b)) {\n        return b;\n    }\n    else {\n        return a;\n    }\n}\n\nexport function BigNatModule_contributeArr(a_mut, i_mut, c_mut) {\n    BigNatModule_contributeArr:\n    while (true) {\n        const a = a_mut, i = i_mut, c = c_mut;\n        const x = op_Addition(fromInteger(a[i], false, 2), c);\n        const c_1 = op_Division(x, BigNatModule_baseNi64);\n        const x_3 = (~(~toInt(op_BitwiseAnd(x, BigNatModule_baseMaski64)))) | 0;\n        a[i] = x_3;\n        if (compare(c_1, fromBits(0, 0, false)) > 0) {\n            a_mut = a;\n            i_mut = (i + 1);\n            c_mut = c_1;\n            continue BigNatModule_contributeArr;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_scale(k, p) {\n    const r = BigNatModule_createN(p.bound + BigNatModule_boundInt);\n    const k_1 = fromInteger(k, false, 2);\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        BigNatModule_contributeArr(r.digits, i, op_Multiply(k_1, fromInteger(p.digits[i], false, 2)));\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookBothSmall(p, q) {\n    const r = BigNatModule_createN(2);\n    const rak = op_Multiply(fromInteger(p, false, 2), fromInteger(q, false, 2));\n    BigNatModule_setCoeff(r, 0, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n    BigNatModule_setCoeff(r, 1, ~(~toInt(op_Division(rak, BigNatModule_baseNi64))));\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookCarry(r_mut, c_mut, k_mut) {\n    BigNatModule_mulSchoolBookCarry:\n    while (true) {\n        const r = r_mut, c = c_mut, k = k_mut;\n        if (compare(c, fromBits(0, 0, false)) > 0) {\n            const rak = op_Addition(BigNatModule_coeff64(r, k), c);\n            BigNatModule_setCoeff(r, k, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            r_mut = r;\n            c_mut = op_Division(rak, BigNatModule_baseNi64);\n            k_mut = (k + 1);\n            continue BigNatModule_mulSchoolBookCarry;\n        }\n        break;\n    }\n}\n\nexport function BigNatModule_mulSchoolBookOneSmall(p, q) {\n    const bp = BigNatModule_bound(p) | 0;\n    const r = BigNatModule_createN(bp + 1);\n    const q_1 = fromInteger(q, false, 2);\n    let c = fromBits(0, 0, false);\n    for (let i = 0; i <= (bp - 1); i++) {\n        const rak = op_Addition(op_Addition(c, BigNatModule_coeff64(r, i)), op_Multiply(BigNatModule_coeff64(p, i), q_1));\n        BigNatModule_setCoeff(r, i, ~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n        c = op_Division(rak, BigNatModule_baseNi64);\n    }\n    BigNatModule_mulSchoolBookCarry(r, c, bp);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBookNeitherSmall(p, q) {\n    const r = BigNatModule_createN(p.bound + q.bound);\n    const ra = r.digits;\n    for (let i = 0; i <= (p.bound - 1); i++) {\n        const pai = fromInteger(p.digits[i], false, 2);\n        let c = fromBits(0, 0, false);\n        let k = i | 0;\n        for (let j = 0; j <= (q.bound - 1); j++) {\n            const qaj = fromInteger(q.digits[j], false, 2);\n            const rak = op_Addition(op_Addition(fromInteger(ra[k], false, 2), c), op_Multiply(pai, qaj));\n            ra[k] = (~(~toInt(op_BitwiseAnd(rak, BigNatModule_baseMaski64))));\n            c = op_Division(rak, BigNatModule_baseNi64);\n            k = (k + 1);\n        }\n        BigNatModule_mulSchoolBookCarry(r, c, k);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_mulSchoolBook(p, q) {\n    const pSmall = BigNatModule_bound(p) === 1;\n    const qSmall = BigNatModule_bound(q) === 1;\n    if (pSmall ? qSmall : false) {\n        return BigNatModule_mulSchoolBookBothSmall(BigNatModule_coeff(p, 0), BigNatModule_coeff(q, 0));\n    }\n    else if (pSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(q, BigNatModule_coeff(p, 0));\n    }\n    else if (qSmall) {\n        return BigNatModule_mulSchoolBookOneSmall(p, BigNatModule_coeff(q, 0));\n    }\n    else {\n        return BigNatModule_mulSchoolBookNeitherSmall(p, q);\n    }\n}\n\nexport class BigNatModule_encoding extends Record {\n    constructor(bigL, twoToBigL, k, bigK, bigN, split, splits) {\n        super();\n        this.bigL = (bigL | 0);\n        this.twoToBigL = (twoToBigL | 0);\n        this.k = (k | 0);\n        this.bigK = (bigK | 0);\n        this.bigN = (bigN | 0);\n        this.split = (split | 0);\n        this.splits = splits;\n    }\n}\n\nexport function BigNatModule_encoding$reflection() {\n    return record_type(\"BigInt.BigNatModule.encoding\", [], BigNatModule_encoding, () => [[\"bigL\", int32_type], [\"twoToBigL\", int32_type], [\"k\", int32_type], [\"bigK\", int32_type], [\"bigN\", int32_type], [\"split\", int32_type], [\"splits\", array_type(int32_type)]]);\n}\n\nexport function BigNatModule_mkEncoding(bigL, k, bigK, bigN) {\n    return new BigNatModule_encoding(bigL, BigNatModule_pow32(2, bigL), k, bigK, bigN, ~(~(BigNatModule_baseBits / bigL)), initialize(~(~(BigNatModule_baseBits / bigL)), (i) => BigNatModule_pow32(2, bigL * i), Int32Array));\n}\n\nexport const BigNatModule_table = [BigNatModule_mkEncoding(1, 28, 268435456, 268435456), BigNatModule_mkEncoding(2, 26, 67108864, 134217728), BigNatModule_mkEncoding(3, 24, 16777216, 50331648), BigNatModule_mkEncoding(4, 22, 4194304, 16777216), BigNatModule_mkEncoding(5, 20, 1048576, 5242880), BigNatModule_mkEncoding(6, 18, 262144, 1572864), BigNatModule_mkEncoding(7, 16, 65536, 458752), BigNatModule_mkEncoding(8, 14, 16384, 131072), BigNatModule_mkEncoding(9, 12, 4096, 36864), BigNatModule_mkEncoding(10, 10, 1024, 10240), BigNatModule_mkEncoding(11, 8, 256, 2816), BigNatModule_mkEncoding(12, 6, 64, 768), BigNatModule_mkEncoding(13, 4, 16, 208)];\n\nexport function BigNatModule_calculateTableTow(bigL) {\n    const k = (BigNatModule_FFT_maxBitsInsideFp - (2 * bigL)) | 0;\n    const bigK = BigNatModule_pow64(fromBits(2, 0, false), k);\n    return [bigL, k, bigK, op_Multiply(bigK, fromInteger(bigL, false, 2))];\n}\n\nexport function BigNatModule_encodingGivenResultBits(bitsRes) {\n    const selectFrom = (i_mut) => {\n        selectFrom:\n        while (true) {\n            const i = i_mut;\n            if (((i + 1) < BigNatModule_table.length) ? (bitsRes < BigNatModule_table[i + 1].bigN) : false) {\n                i_mut = (i + 1);\n                continue selectFrom;\n            }\n            else {\n                return BigNatModule_table[i];\n            }\n            break;\n        }\n    };\n    if (bitsRes >= BigNatModule_table[0].bigN) {\n        throw (new Error(\"Product is huge, around 268435456 bits, beyond quickmul\"));\n    }\n    else {\n        return selectFrom(0);\n    }\n}\n\nexport const BigNatModule_bitmask = initialize(BigNatModule_baseBits, (i) => (BigNatModule_pow32(2, i) - 1), Int32Array);\n\nexport const BigNatModule_twopowers = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow32(2, i), Int32Array);\n\nexport const BigNatModule_twopowersI64 = initialize(BigNatModule_baseBits, (i) => BigNatModule_pow64(fromBits(2, 0, false), i));\n\nexport function BigNatModule_wordBits(word) {\n    const hi = (k_mut) => {\n        hi:\n        while (true) {\n            const k = k_mut;\n            if (k === 0) {\n                return 0;\n            }\n            else if ((word & BigNatModule_twopowers[k - 1]) !== 0) {\n                return k | 0;\n            }\n            else {\n                k_mut = (k - 1);\n                continue hi;\n            }\n            break;\n        }\n    };\n    return hi(BigNatModule_baseBits) | 0;\n}\n\nexport function BigNatModule_bits(u) {\n    if (u.bound === 0) {\n        return 0;\n    }\n    else {\n        return ((BigNatModule_degree(u) * BigNatModule_baseBits) + BigNatModule_wordBits(u.digits[BigNatModule_degree(u)])) | 0;\n    }\n}\n\nexport function BigNatModule_extractBits(n, enc, bi) {\n    let z, i, z_1, i_1, z_2, i_2;\n    const biw = (~(~(bi / BigNatModule_baseBits))) | 0;\n    const bjw = (~(~(((bi + enc.bigL) - 1) / BigNatModule_baseBits))) | 0;\n    if (biw !== bjw) {\n        const xbit = (bi % BigNatModule_baseBits) | 0;\n        return ((((z = n, (i = (biw | 0), (i < z.bound) ? z.digits[i] : 0)) >> xbit) | ((z_1 = n, (i_1 = (bjw | 0), (i_1 < z_1.bound) ? z_1.digits[i_1] : 0)) << (BigNatModule_baseBits - xbit))) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n    else {\n        return (((z_2 = n, (i_2 = (biw | 0), (i_2 < z_2.bound) ? z_2.digits[i_2] : 0)) >> (bi % BigNatModule_baseBits)) & BigNatModule_bitmask[enc.bigL]) | 0;\n    }\n}\n\nexport function BigNatModule_encodePoly(enc, n) {\n    const poly = fill(new Uint32Array(enc.bigK), 0, enc.bigK, BigNatModule_FFT_Fp_ofInt32(0));\n    const biMax = (n.bound * BigNatModule_baseBits) | 0;\n    const encoder = (i_mut, bi_mut) => {\n        encoder:\n        while (true) {\n            const i = i_mut, bi = bi_mut;\n            if ((i === enc.bigK) ? true : (bi > biMax)) {\n            }\n            else {\n                const pi = BigNatModule_extractBits(n, enc, bi) | 0;\n                poly[i] = BigNatModule_FFT_Fp_ofInt32(pi);\n                i_mut = (i + 1);\n                bi_mut = (bi + enc.bigL);\n                continue encoder;\n            }\n            break;\n        }\n    };\n    encoder(0, 0);\n    return poly;\n}\n\nexport function BigNatModule_decodeResultBits(enc, poly) {\n    let n = 0;\n    for (let i = 0; i <= (poly.length - 1); i++) {\n        if (poly[i] !== BigNatModule_FFT_mzero) {\n            n = i;\n        }\n    }\n    return (((BigNatModule_FFT_maxBitsInsideFp + (enc.bigL * n)) + 1) + 1) | 0;\n}\n\nexport function BigNatModule_decodePoly(enc, poly) {\n    const rbound = ((~(~(BigNatModule_decodeResultBits(enc, poly) / BigNatModule_baseBits))) + 1) | 0;\n    const r = BigNatModule_createN(rbound);\n    const evaluate = (i_mut, j_mut, d_mut) => {\n        evaluate:\n        while (true) {\n            const i = i_mut, j = j_mut, d = d_mut;\n            if (i === enc.bigK) {\n            }\n            else {\n                if (j >= rbound) {\n                }\n                else {\n                    BigNatModule_contributeArr(r.digits, j, op_Multiply(fromInteger(BigNatModule_FFT_Fp_toInt(poly[i]), false, 2), BigNatModule_twopowersI64[d]));\n                }\n                const d_1 = (d + enc.bigL) | 0;\n                const patternInput = (d_1 >= BigNatModule_baseBits) ? [j + 1, d_1 - BigNatModule_baseBits] : [j, d_1];\n                i_mut = (i + 1);\n                j_mut = patternInput[0];\n                d_mut = patternInput[1];\n                continue evaluate;\n            }\n            break;\n        }\n    };\n    evaluate(0, 0, 0);\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_quickMulUsingFft(u, v) {\n    const enc = BigNatModule_encodingGivenResultBits(BigNatModule_bits(u) + BigNatModule_bits(v));\n    return BigNatModule_normN(BigNatModule_decodePoly(enc, BigNatModule_FFT_computeFftPaddedPolynomialProduct(enc.bigK, enc.k, BigNatModule_encodePoly(enc, u), BigNatModule_encodePoly(enc, v))));\n}\n\nexport const BigNatModule_minDigitsKaratsuba = 16;\n\nexport function BigNatModule_recMulKaratsuba(mul, p, q) {\n    const bmax = BigNatModule_maxInt(p.bound, q.bound) | 0;\n    if (bmax > BigNatModule_minDigitsKaratsuba) {\n        const k = (~(~(bmax / 2))) | 0;\n        const a0 = BigNatModule_restrictTo(k, p);\n        const a1 = BigNatModule_shiftDown(k, p);\n        const b0 = BigNatModule_restrictTo(k, q);\n        const b1 = BigNatModule_shiftDown(k, q);\n        const q0 = mul(a0, b0);\n        const q1 = mul(BigNatModule_add(a0, a1), BigNatModule_add(b0, b1));\n        const q2 = mul(a1, b1);\n        return BigNatModule_add(q0, BigNatModule_shiftUp(k, BigNatModule_add(BigNatModule_sub(q1, BigNatModule_add(q0, q2)), BigNatModule_shiftUp(k, q2))));\n    }\n    else {\n        return BigNatModule_mulSchoolBook(p, q);\n    }\n}\n\nexport function BigNatModule_mulKaratsuba(x, y) {\n    return BigNatModule_recMulKaratsuba(BigNatModule_mulKaratsuba, x, y);\n}\n\nexport const BigNatModule_productDigitsUpperSchoolBook = ~(~(64000 / BigNatModule_baseBits));\n\nexport const BigNatModule_singleDigitForceSchoolBook = ~(~(32000 / BigNatModule_baseBits));\n\nexport const BigNatModule_productDigitsUpperFft = ~(~(BigNatModule_table[0].bigN / BigNatModule_baseBits));\n\nexport function BigNatModule_mul(p, q) {\n    return BigNatModule_mulSchoolBook(p, q);\n}\n\nexport function BigNatModule_scaleSubInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo <= x_1[j + n]) {\n            x_1[j + n] = (x_1[j + n] - zLo);\n        }\n        else {\n            x_1[j + n] = (x_1[j + n] + (BigNatModule_baseN - zLo));\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleSub(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleSubInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_scaleAddInPlace(x, f, a, n) {\n    const patternInput = [x.digits, BigNatModule_degree(x)];\n    const x_1 = patternInput[0];\n    const patternInput_1 = [a.digits, BigNatModule_degree(a)];\n    const ad = patternInput_1[1] | 0;\n    const a_1 = patternInput_1[0];\n    const f_1 = fromInteger(f, false, 2);\n    let j = 0;\n    let z = op_Multiply(f_1, fromInteger(a_1[0], false, 2));\n    while ((compare(z, fromBits(0, 0, false)) > 0) ? true : (j < ad)) {\n        if (j > patternInput[1]) {\n            throw (new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\"));\n        }\n        let zLo = (~(~toInt(op_BitwiseAnd(z, BigNatModule_baseMaski64)))) | 0;\n        let zHi = op_Division(z, BigNatModule_baseNi64);\n        if (zLo < (BigNatModule_baseN - x_1[j + n])) {\n            x_1[j + n] = (x_1[j + n] + zLo);\n        }\n        else {\n            x_1[j + n] = (zLo - (BigNatModule_baseN - x_1[j + n]));\n            zHi = op_Addition(zHi, fromBits(1, 0, false));\n        }\n        if (j < ad) {\n            z = op_Addition(zHi, op_Multiply(f_1, fromInteger(a_1[j + 1], false, 2)));\n        }\n        else {\n            z = zHi;\n        }\n        j = (j + 1);\n    }\n    void BigNatModule_normN(x);\n}\n\nexport function BigNatModule_scaleAdd(x, f, a, n) {\n    const freshx = BigNatModule_add(x, BigNatModule_zero);\n    BigNatModule_scaleAddInPlace(freshx, f, a, n);\n    return BigNatModule_normN(freshx);\n}\n\nexport function BigNatModule_removeFactor(x, a, n) {\n    const patternInput = [BigNatModule_degree(a), BigNatModule_degree(x)];\n    const degx = patternInput[1] | 0;\n    const dega = patternInput[0] | 0;\n    if (degx < (dega + n)) {\n        return 0;\n    }\n    else {\n        const patternInput_1 = [a.digits, x.digits];\n        const xa = patternInput_1[1];\n        const aa = patternInput_1[0];\n        const f = ((dega === 0) ? ((degx === n) ? (~(~(xa[n] / aa[0]))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), fromInteger(aa[0], false, 2)))))) : ((degx === (dega + n)) ? (~(~(xa[degx] / (aa[dega] + 1)))) : (~(~toInt(op_Division(op_Addition(op_Multiply(fromInteger(xa[degx], false, 2), BigNatModule_baseNi64), fromInteger(xa[degx - 1], false, 2)), op_Addition(fromInteger(aa[dega], false, 2), fromBits(1, 0, false)))))))) | 0;\n        if (f === 0) {\n            if (BigNatModule_shiftCompare(a, n, x, 0) !== 1) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return f | 0;\n        }\n    }\n}\n\nexport function BigNatModule_divmod(b, a) {\n    if (BigNatModule_isZero(a)) {\n        throw (new Error());\n    }\n    else if (BigNatModule_degree(b) < BigNatModule_degree(a)) {\n        return [BigNatModule_zero, b];\n    }\n    else {\n        const x = BigNatModule_copyN(b);\n        const d = BigNatModule_createN(((BigNatModule_degree(b) - BigNatModule_degree(a)) + 1) + 1);\n        let p = BigNatModule_degree(b) | 0;\n        const m = BigNatModule_degree(a) | 0;\n        let n = (p - m) | 0;\n        const Invariant = (tupledArg) => {\n        };\n        let finished = false;\n        while (!finished) {\n            Invariant([d, x, n, p]);\n            const f = BigNatModule_removeFactor(x, a, n) | 0;\n            if (f > 0) {\n                BigNatModule_scaleSubInPlace(x, f, a, n);\n                BigNatModule_scaleAddInPlace(d, f, BigNatModule_one, n);\n                Invariant([d, x, n, p]);\n            }\n            else {\n                finished = ((f === 0) ? (n === 0) : false);\n                if (!finished) {\n                    if (p === (m + n)) {\n                        Invariant([d, x, n - 1, p]);\n                        n = (n - 1);\n                    }\n                    else {\n                        Invariant([d, x, n - 1, p - 1]);\n                        n = (n - 1);\n                        p = (p - 1);\n                    }\n                }\n            }\n        }\n        return [BigNatModule_normN(d), BigNatModule_normN(x)];\n    }\n}\n\nexport function BigNatModule_div(b, a) {\n    return BigNatModule_divmod(b, a)[0];\n}\n\nexport function BigNatModule_rem(b, a) {\n    return BigNatModule_divmod(b, a)[1];\n}\n\nexport function BigNatModule_bitAnd(a, b) {\n    const r = BigNatModule_createN(BigNatModule_minInt(a.bound, b.bound));\n    for (let i = 0; i <= (r.bound - 1); i++) {\n        r.digits[i] = (a.digits[i] & b.digits[i]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitOr(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] | a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] | b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_bitXor(a, b) {\n    const r = BigNatModule_createN(BigNatModule_maxInt(a.bound, b.bound));\n    for (let i = 0; i <= (a.bound - 1); i++) {\n        r.digits[i] = (r.digits[i] ^ a.digits[i]);\n    }\n    for (let i_1 = 0; i_1 <= (b.bound - 1); i_1++) {\n        r.digits[i_1] = (r.digits[i_1] ^ b.digits[i_1]);\n    }\n    return BigNatModule_normN(r);\n}\n\nexport function BigNatModule_hcf(a, b) {\n    const hcfloop = (a_1_mut, b_1_mut) => {\n        hcfloop:\n        while (true) {\n            const a_1 = a_1_mut, b_1 = b_1_mut;\n            if (BigNatModule_equal(BigNatModule_zero, a_1)) {\n                return b_1;\n            }\n            else {\n                a_1_mut = BigNatModule_divmod(b_1, a_1)[1];\n                b_1_mut = a_1;\n                continue hcfloop;\n            }\n            break;\n        }\n    };\n    if (BigNatModule_lt(a, b)) {\n        return hcfloop(a, b);\n    }\n    else {\n        return hcfloop(b, a);\n    }\n}\n\nexport const BigNatModule_two = BigNatModule_embed(2);\n\nexport function BigNatModule_powi(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (n_1 === 0) {\n                return acc;\n            }\n            else if ((n_1 % 2) === 0) {\n                acc_mut = acc;\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            else {\n                acc_mut = BigNatModule_mul(x_1, acc);\n                x_1_mut = BigNatModule_mul(x_1, x_1);\n                n_1_mut = (~(~(n_1 / 2)));\n                continue power;\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_pow(x, n) {\n    const power = (acc_mut, x_1_mut, n_1_mut) => {\n        power:\n        while (true) {\n            const acc = acc_mut, x_1 = x_1_mut, n_1 = n_1_mut;\n            if (BigNatModule_isZero(n_1)) {\n                return acc;\n            }\n            else {\n                const patternInput = BigNatModule_divmod(n_1, BigNatModule_two);\n                const ndiv2 = patternInput[0];\n                if (BigNatModule_isZero(patternInput[1])) {\n                    acc_mut = acc;\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n                else {\n                    acc_mut = BigNatModule_mul(x_1, acc);\n                    x_1_mut = BigNatModule_mul(x_1, x_1);\n                    n_1_mut = ndiv2;\n                    continue power;\n                }\n            }\n            break;\n        }\n    };\n    return power(BigNatModule_one, x, n);\n}\n\nexport function BigNatModule_toFloat(n) {\n    const evalFloat = (acc_mut, k_mut, i_mut) => {\n        evalFloat:\n        while (true) {\n            const acc = acc_mut, k = k_mut, i = i_mut;\n            if (i === n.bound) {\n                return acc;\n            }\n            else {\n                acc_mut = (acc + (k * n.digits[i]));\n                k_mut = (k * BigNatModule_baseN);\n                i_mut = (i + 1);\n                continue evalFloat;\n            }\n            break;\n        }\n    };\n    return evalFloat(0, 1, 0);\n}\n\nexport function BigNatModule_ofInt32(n) {\n    return BigNatModule_embed(n);\n}\n\nexport function BigNatModule_ofInt64(n) {\n    return BigNatModule_embed64(n);\n}\n\nexport function BigNatModule_toUInt32(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            const value = n.digits[0] | 0;\n            return value >>> 0;\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            const xB = patternInput[1] | 0;\n            if (xB > BigNatModule_baseMask32B) {\n                throw (new Error());\n            }\n            return ((patternInput[0] & BigNatModule_baseMask32A) >>> 0) + ((((xB & BigNatModule_baseMask32B) >>> 0) << BigNatModule_baseShift32B) >>> 0);\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toUInt64(n) {\n    const matchValue = n.bound | 0;\n    switch (matchValue) {\n        case 0: {\n            return fromBits(0, 0, true);\n        }\n        case 1: {\n            return fromInteger(n.digits[0], true, 2);\n        }\n        case 2: {\n            const patternInput = [n.digits[0], n.digits[1]];\n            return op_Addition(fromInteger(patternInput[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B));\n        }\n        case 3: {\n            const patternInput_1 = [n.digits[0], n.digits[1], n.digits[2]];\n            const xC = patternInput_1[2] | 0;\n            if (xC > BigNatModule_baseMask64C) {\n                throw (new Error());\n            }\n            return op_Addition(op_Addition(fromInteger(patternInput_1[0] & BigNatModule_baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput_1[1] & BigNatModule_baseMask64B, true, 2), BigNatModule_baseShift64B)), op_LeftShift(fromInteger(xC & BigNatModule_baseMask64C, true, 2), BigNatModule_baseShift64C));\n        }\n        default: {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigNatModule_toString(n) {\n    const degn = BigNatModule_degree(n) | 0;\n    const route = (prior_mut, k_mut, ten2k_mut) => {\n        route:\n        while (true) {\n            const prior = prior_mut, k = k_mut, ten2k = ten2k_mut;\n            if (BigNatModule_degree(ten2k) > degn) {\n                return new List([k, ten2k], prior);\n            }\n            else {\n                prior_mut = (new List([k, ten2k], prior));\n                k_mut = (k + 1);\n                ten2k_mut = BigNatModule_mul(ten2k, ten2k);\n                continue route;\n            }\n            break;\n        }\n    };\n    const collect = (isLeading_mut, digits_mut, n_1_mut, _arg1_mut) => {\n        collect:\n        while (true) {\n            const isLeading = isLeading_mut, digits = digits_mut, n_1 = n_1_mut, _arg1 = _arg1_mut;\n            if (_arg1.tail != null) {\n                const prior_1 = _arg1.tail;\n                const patternInput = BigNatModule_divmod(n_1, _arg1.head[1]);\n                const nL = patternInput[1];\n                const nH = patternInput[0];\n                if (isLeading ? BigNatModule_isZero(nH) : false) {\n                    isLeading_mut = isLeading;\n                    digits_mut = digits;\n                    n_1_mut = nL;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n                else {\n                    isLeading_mut = isLeading;\n                    digits_mut = collect(false, digits, nL, prior_1);\n                    n_1_mut = nH;\n                    _arg1_mut = prior_1;\n                    continue collect;\n                }\n            }\n            else {\n                const n_2 = BigNatModule_eval32(n_1) | 0;\n                if (isLeading ? (n_2 === 0) : false) {\n                    return digits;\n                }\n                else {\n                    return new List(int32ToString(n_2), digits);\n                }\n            }\n            break;\n        }\n    };\n    const digits_4 = collect(true, new List(), n, route(new List(), 0, BigNatModule_embed(10)));\n    if (digits_4.tail == null) {\n        return \"0\";\n    }\n    else {\n        return join(\"\", Array.from(digits_4));\n    }\n}\n\nexport function BigNatModule_ofString(str) {\n    const len = str.length | 0;\n    if (isNullOrEmpty(str)) {\n        throw (new Error(\"empty string\\\\nParameter name: str\"));\n    }\n    const ten = BigNatModule_embed(10);\n    const build = (acc_mut, i_mut) => {\n        build:\n        while (true) {\n            const acc = acc_mut, i = i_mut;\n            if (i === len) {\n                return acc;\n            }\n            else {\n                const d = (str[i].charCodeAt(0) - \"0\".charCodeAt(0)) | 0;\n                if ((0 <= d) ? (d <= 9) : false) {\n                    acc_mut = BigNatModule_add(BigNatModule_mul(ten, acc), BigNatModule_embed(d));\n                    i_mut = (i + 1);\n                    continue build;\n                }\n                else {\n                    throw (new Error());\n                }\n            }\n            break;\n        }\n    };\n    return build(BigNatModule_embed(0), 0);\n}\n\nexport function BigNatModule_isSmall(n) {\n    return n.bound <= 1;\n}\n\nexport function BigNatModule_getSmall(n) {\n    const z = n;\n    const i = 0;\n    if (i < z.bound) {\n        return z.digits[i] | 0;\n    }\n    else {\n        return 0;\n    }\n}\n\nexport function BigNatModule_factorial(n) {\n    const productR = (a, b) => {\n        if (BigNatModule_equal(a, b)) {\n            return a;\n        }\n        else {\n            const m = BigNatModule_div(BigNatModule_add(a, b), BigNatModule_ofInt32(2));\n            return BigNatModule_mul(productR(a, m), productR(BigNatModule_add(m, BigNatModule_one), b));\n        }\n    };\n    return productR(BigNatModule_one, n);\n}\n\n","import { BigNatModule_factorial, BigNatModule_ofString, BigNatModule_toFloat, BigNatModule_toUInt64, BigNatModule_toUInt32, BigNatModule_pow, BigNatModule_two, BigNatModule_rem, BigNatModule_lte, BigNatModule_hcf, BigNatModule_bitXor, BigNatModule_bitOr, BigNatModule_bitAnd, BigNatModule_divmod, BigNatModule_mul, BigNatModule_isOne, BigNatModule_sub, BigNatModule_gte, BigNatModule_scale, BigNatModule_one, BigNatModule_add, BigNatModule_ofInt64, BigNatModule_hash, BigNatModule_gt, BigNatModule_lt, BigNatModule_equal, BigNatModule_getSmall, BigNatModule_isSmall, BigNatModule_ofInt32, BigNatModule_toString, BigNatModule_isZero } from \"./n.js\";\nimport { toString, Record } from \"../Types.js\";\nimport { class_type } from \"../Reflection.js\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, fromBits, compare, fromInteger, op_UnaryNegation } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\n\nexport class BigInteger extends Record {\n    constructor(signInt, v) {\n        super();\n        this.signInt = signInt;\n        this.v = v;\n    }\n    toString() {\n        const x = this;\n        const matchValue = BigInteger__get_SignInt(x) | 0;\n        switch (matchValue) {\n            case -1: {\n                return BigNatModule_isZero(BigInteger__get_V(x)) ? \"0\" : (\"-\" + BigNatModule_toString(BigInteger__get_V(x)));\n            }\n            case 0: {\n                return \"0\";\n            }\n            case 1: {\n                return BigNatModule_toString(BigInteger__get_V(x));\n            }\n            default: {\n                throw (new Error(\"signs should be +/- 1 or 0\"));\n            }\n        }\n    }\n    Equals(obj) {\n        const this$ = this;\n        return (obj instanceof BigInteger) ? BigInteger_op_Equality_56F059C0(this$, obj) : false;\n    }\n    GetHashCode() {\n        const x = this;\n        return BigInteger_hash_Z665282C2(x) | 0;\n    }\n    CompareTo(obj) {\n        const this$ = this;\n        if (obj instanceof BigInteger) {\n            return BigInteger_compare_56F059C0(this$, obj) | 0;\n        }\n        else {\n            throw (new Error(\"the objects are not comparable\\\\nParameter name: obj\"));\n        }\n    }\n}\n\nexport function BigInteger$reflection() {\n    return class_type(\"BigInt.BigInteger\", void 0, BigInteger, class_type(\"System.ValueType\"));\n}\n\nexport function BigInteger_$ctor_Z2BE94A1(signInt, v) {\n    return new BigInteger(signInt, v);\n}\n\n(() => {\n    BigInteger.smallLim = 4096;\n    BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule_ofInt32);\n    BigInteger.one = BigInteger_$ctor_Z524259A4(1);\n    BigInteger.two = BigInteger_$ctor_Z524259A4(2);\n    BigInteger.zero = BigInteger_$ctor_Z524259A4(0);\n})();\n\nexport function BigInteger_nat_Z67CCE57D(n) {\n    if (BigNatModule_isSmall(n) ? (BigNatModule_getSmall(n) < BigInteger.smallLim) : false) {\n        return BigInteger.smallPosTab[BigNatModule_getSmall(n)];\n    }\n    else {\n        return n;\n    }\n}\n\nexport function BigInteger_create_Z2BE94A1(s, n) {\n    return BigInteger_$ctor_Z2BE94A1(s, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_posn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger_negn_Z67CCE57D(n) {\n    return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(n));\n}\n\nexport function BigInteger__get_Sign(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return x.signInt | 0;\n    }\n}\n\nexport function BigInteger__get_SignInt(x) {\n    return x.signInt;\n}\n\nexport function BigInteger__get_V(x) {\n    return x.v;\n}\n\nexport function BigInteger_op_Equality_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_equal(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_Inequality_56F059C0(x, y) {\n    return !BigInteger_op_Equality_56F059C0(x, y);\n}\n\nexport function BigInteger_op_LessThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return false;\n        }\n        case 3: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 6: {\n            return false;\n        }\n        case 7: {\n            return false;\n        }\n        case 8: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThan_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 5;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 7;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gt(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gt(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (!BigNatModule_isZero(BigInteger__get_V(x))) {\n                return true;\n            }\n            else {\n                return !BigNatModule_isZero(BigInteger__get_V(y));\n            }\n        }\n        case 3: {\n            return false;\n        }\n        case 4: {\n            return false;\n        }\n        case 5: {\n            return false;\n        }\n        case 6: {\n            return !BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 7: {\n            return !BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 8: {\n            return false;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_compare_56F059C0(n, nn) {\n    if (BigInteger_op_LessThan_56F059C0(n, nn)) {\n        return -1;\n    }\n    else if (BigInteger_op_Equality_56F059C0(n, nn)) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\n\nexport function BigInteger_hash_Z665282C2(z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return 1;\n    }\n    else {\n        return (BigInteger__get_SignInt(z) + BigNatModule_hash(BigInteger__get_V(z))) | 0;\n    }\n}\n\nexport function BigInteger__get_StructuredDisplayString(x) {\n    return toString(x);\n}\n\nexport function BigInteger_$ctor_Z524259A4(n) {\n    if (n >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(n)));\n    }\n    else if (n === -2147483648) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(fromInteger(n, false, 2)))));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt32(op_UnaryNegation_Int32(n))));\n    }\n}\n\nexport function BigInteger_$ctor_Z524259C1(n) {\n    if (compare(n, fromBits(0, 0, false)) >= 0) {\n        return BigInteger_$ctor_Z2BE94A1(1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(n)));\n    }\n    else if (equals(n, fromBits(0, 2147483648, false))) {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_add(BigNatModule_ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule_one)));\n    }\n    else {\n        return BigInteger_$ctor_Z2BE94A1(-1, BigInteger_nat_Z67CCE57D(BigNatModule_ofInt64(op_UnaryNegation(n))));\n    }\n}\n\nexport function BigInteger_get_One() {\n    return BigInteger.one;\n}\n\nexport function BigInteger_get_Two() {\n    return BigInteger.two;\n}\n\nexport function BigInteger_get_Zero() {\n    return BigInteger.zero;\n}\n\nexport function BigInteger_op_UnaryNegation_Z665282C2(z) {\n    const matchValue = BigInteger__get_SignInt(z) | 0;\n    if (matchValue === 0) {\n        return BigInteger_get_Zero();\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(matchValue), BigInteger__get_V(z));\n    }\n}\n\nexport function BigInteger_Scale_Z320F31E(k, z) {\n    if (BigInteger__get_SignInt(z) === 0) {\n        return BigInteger_get_Zero();\n    }\n    else if (k < 0) {\n        return BigInteger_create_Z2BE94A1(op_UnaryNegation_Int32(BigInteger__get_SignInt(z)), BigNatModule_scale(op_UnaryNegation_Int32(k), BigInteger__get_V(z)));\n    }\n    else {\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(z), BigNatModule_scale(k, BigInteger__get_V(z)));\n    }\n}\n\nexport function BigInteger_subnn_6A57060(nx, ny) {\n    if (BigNatModule_gte(nx, ny)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_sub(nx, ny));\n    }\n    else {\n        return BigInteger_negn_Z67CCE57D(BigNatModule_sub(ny, nx));\n    }\n}\n\nexport function BigInteger_addnn_6A57060(nx, ny) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_add(nx, ny));\n}\n\nexport function BigInteger__get_IsZero(x) {\n    if (BigInteger__get_SignInt(x) === 0) {\n        return true;\n    }\n    else {\n        return BigNatModule_isZero(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_IsOne(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return BigNatModule_isOne(BigInteger__get_V(x));\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_op_Addition_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return y;\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 2: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Subtraction_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(x)) {\n        return BigInteger_op_UnaryNegation_Z665282C2(y);\n    }\n    else {\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 1: {\n                return BigInteger_subnn_6A57060(BigInteger__get_V(y), BigInteger__get_V(x));\n            }\n            case 2: {\n                return BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y));\n            }\n            case 3: {\n                return BigInteger_op_UnaryNegation_Z665282C2(BigInteger_addnn_6A57060(BigInteger__get_V(x), BigInteger__get_V(y)));\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Multiply_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(x)) {\n        return x;\n    }\n    else if (BigInteger__get_IsZero(y)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(x)) {\n        return y;\n    }\n    else if (BigInteger__get_IsOne(y)) {\n        return x;\n    }\n    else {\n        const m = BigNatModule_mul(BigInteger__get_V(x), BigInteger__get_V(y));\n        return BigInteger_create_Z2BE94A1(BigInteger__get_SignInt(x) * BigInteger__get_SignInt(y), m);\n    }\n}\n\nexport function BigInteger_DivRem_56F059C0(x, y) {\n    if (BigInteger__get_IsZero(y)) {\n        throw (new Error());\n    }\n    if (BigInteger__get_IsZero(x)) {\n        return [BigInteger_get_Zero(), BigInteger_get_Zero()];\n    }\n    else {\n        const patternInput = BigNatModule_divmod(BigInteger__get_V(x), BigInteger__get_V(y));\n        const r = patternInput[1];\n        const d = patternInput[0];\n        const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n        let pattern_matching_result;\n        if (matchValue[0] === -1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 1;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 3;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1] === -1) {\n                pattern_matching_result = 2;\n            }\n            else if (matchValue[1] === 1) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 4;\n            }\n        }\n        else {\n            pattern_matching_result = 4;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 1: {\n                return [BigInteger_posn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 2: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_posn_Z67CCE57D(r)];\n            }\n            case 3: {\n                return [BigInteger_negn_Z67CCE57D(d), BigInteger_negn_Z67CCE57D(r)];\n            }\n            case 4: {\n                throw (new Error(\"signs should be +/- 1\\\\nParameter name: x\"));\n            }\n        }\n    }\n}\n\nexport function BigInteger_op_Division_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[0];\n}\n\nexport function BigInteger_op_Modulus_56F059C0(x, y) {\n    return BigInteger_DivRem_56F059C0(x, y)[1];\n}\n\nexport function BigInteger_op_RightShift_62E082A2(x, y) {\n    return BigInteger_op_Division_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_LeftShift_62E082A2(x, y) {\n    return BigInteger_op_Multiply_56F059C0(x, BigInteger_Pow_62E082A2(BigInteger_get_Two(), y));\n}\n\nexport function BigInteger_op_BitwiseAnd_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitAnd(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_BitwiseOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitOr(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_op_ExclusiveOr_56F059C0(x, y) {\n    return BigInteger_posn_Z67CCE57D(BigNatModule_bitXor(BigInteger__get_V(x), BigInteger__get_V(y)));\n}\n\nexport function BigInteger_GreatestCommonDivisor_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    if (matchValue[0] === 0) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_Zero();\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigInteger__get_V(y));\n        }\n    }\n    else if (matchValue[1] === 0) {\n        return BigInteger_posn_Z67CCE57D(BigInteger__get_V(x));\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_hcf(BigInteger__get_V(x), BigInteger__get_V(y)));\n    }\n}\n\nexport function BigInteger__get_IsNegative(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger__get_IsPositive(x) {\n    if (BigInteger__get_SignInt(x) === 1) {\n        return !BigInteger__get_IsZero(x);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function BigInteger_Abs_Z665282C2(x) {\n    if (BigInteger__get_SignInt(x) === -1) {\n        return BigInteger_op_UnaryNegation_Z665282C2(x);\n    }\n    else {\n        return x;\n    }\n}\n\nexport function BigInteger_op_LessThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_lte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_lte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 3: {\n            return true;\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 6: {\n            return true;\n        }\n        case 7: {\n            return true;\n        }\n        case 8: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_op_GreaterThanOrEqual_56F059C0(x, y) {\n    const matchValue = [BigInteger__get_SignInt(x), BigInteger__get_SignInt(y)];\n    let pattern_matching_result;\n    if (matchValue[0] === -1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 1;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 6;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 3;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 0) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 8;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 4;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 7;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else if (matchValue[0] === 1) {\n        if (matchValue[1] === -1) {\n            pattern_matching_result = 2;\n        }\n        else if (matchValue[1] === 0) {\n            pattern_matching_result = 5;\n        }\n        else if (matchValue[1] === 1) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 9;\n        }\n    }\n    else {\n        pattern_matching_result = 9;\n    }\n    switch (pattern_matching_result) {\n        case 0: {\n            return BigNatModule_gte(BigInteger__get_V(x), BigInteger__get_V(y));\n        }\n        case 1: {\n            return BigNatModule_gte(BigInteger__get_V(y), BigInteger__get_V(x));\n        }\n        case 2: {\n            return true;\n        }\n        case 3: {\n            if (BigNatModule_isZero(BigInteger__get_V(x))) {\n                return BigNatModule_isZero(BigInteger__get_V(y));\n            }\n            else {\n                return false;\n            }\n        }\n        case 4: {\n            return true;\n        }\n        case 5: {\n            return true;\n        }\n        case 6: {\n            return BigNatModule_isZero(BigInteger__get_V(x));\n        }\n        case 7: {\n            return BigNatModule_isZero(BigInteger__get_V(y));\n        }\n        case 8: {\n            return true;\n        }\n        case 9: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger_Pow_62E082A2(x, y) {\n    if (y < 0) {\n        throw (new Error(\"y\"));\n    }\n    const matchValue = [BigInteger__get_IsZero(x), y];\n    if (matchValue[0]) {\n        if (matchValue[1] === 0) {\n            return BigInteger_get_One();\n        }\n        else {\n            return BigInteger_get_Zero();\n        }\n    }\n    else {\n        const yval = BigInteger_$ctor_Z524259A4(y);\n        return BigInteger_create_Z2BE94A1(BigNatModule_isZero(BigNatModule_rem(BigInteger__get_V(yval), BigNatModule_two)) ? 1 : BigInteger__get_SignInt(x), BigNatModule_pow(BigInteger__get_V(x), BigInteger__get_V(yval)));\n    }\n}\n\nexport function BigInteger__get_ToInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        const u = BigNatModule_toUInt32(BigInteger__get_V(x));\n        if (u <= (2147483647 >>> 0)) {\n            return (BigInteger__get_SignInt(x) * (~(~u))) | 0;\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? (u === ((2147483647 + 1) >>> 0)) : false) {\n            return -2147483648;\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt32(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return 0;\n    }\n    else {\n        return BigNatModule_toUInt32(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, false);\n    }\n    else {\n        const u = BigNatModule_toUInt64(BigInteger__get_V(x));\n        if (compare(u, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n            return op_Multiply(fromInteger(BigInteger__get_SignInt(x), false, 2), fromValue(u, false));\n        }\n        else if ((BigInteger__get_SignInt(x) === -1) ? equals(u, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n            return fromBits(0, 2147483648, false);\n        }\n        else {\n            throw (new Error());\n        }\n    }\n}\n\nexport function BigInteger__get_ToUInt64(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return fromBits(0, 0, true);\n    }\n    else {\n        return BigNatModule_toUInt64(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger__get_ToDouble(x) {\n    const matchValue = BigInteger__get_SignInt(x) | 0;\n    switch (matchValue) {\n        case -1: {\n            return -BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        case 0: {\n            return 0;\n        }\n        case 1: {\n            return BigNatModule_toFloat(BigInteger__get_V(x));\n        }\n        default: {\n            throw (new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\"));\n        }\n    }\n}\n\nexport function BigInteger__get_ToSByte(x) {\n    return (BigInteger__get_ToInt32(x) + 0x80 & 0xFF) - 0x80;\n}\n\nexport function BigInteger__get_ToByte(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFF;\n}\n\nexport function BigInteger__get_ToInt16(x) {\n    return (BigInteger__get_ToInt32(x) + 0x8000 & 0xFFFF) - 0x8000;\n}\n\nexport function BigInteger__get_ToUInt16(x) {\n    return BigInteger__get_ToUInt32(x) & 0xFFFF;\n}\n\nexport function BigInteger__get_ToSingle(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function BigInteger__get_ToDecimal(x) {\n    return new Decimal(BigInteger__get_ToDouble(x));\n}\n\nexport function BigInteger_Parse_Z721C83C5(text) {\n    if (text == null) {\n        throw (new Error(\"text\"));\n    }\n    const text_1 = text.trim();\n    const len = text_1.length | 0;\n    if (len === 0) {\n        throw (new Error());\n    }\n    const matchValue = [text_1[0], len];\n    if (matchValue[0] === \"+\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else if (matchValue[0] === \"-\") {\n        if (matchValue[1] === 1) {\n            throw (new Error());\n        }\n        else {\n            return BigInteger_negn_Z67CCE57D(BigNatModule_ofString(text_1.slice(1, (len - 1) + 1)));\n        }\n    }\n    else {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_ofString(text_1));\n    }\n}\n\nexport function BigInteger__get_IsSmall(x) {\n    if (BigInteger__get_IsZero(x)) {\n        return true;\n    }\n    else {\n        return BigNatModule_isSmall(BigInteger__get_V(x));\n    }\n}\n\nexport function BigInteger_Factorial_Z665282C2(x) {\n    if (BigInteger__get_IsNegative(x)) {\n        throw (new Error(\"mustBeNonNegative\\\\nParameter name: x\"));\n    }\n    if (BigInteger__get_IsPositive(x)) {\n        return BigInteger_posn_Z67CCE57D(BigNatModule_factorial(BigInteger__get_V(x)));\n    }\n    else {\n        return BigInteger_get_One();\n    }\n}\n\nexport function BigInteger_op_UnaryPlus_Z665282C2(n1) {\n    return n1;\n}\n\nexport function BigInteger_FromInt64_Z524259C1(x) {\n    return BigInteger_$ctor_Z524259C1(x);\n}\n\nexport function BigInteger_FromInt32_Z524259A4(x) {\n    return BigInteger_$ctor_Z524259A4(x);\n}\n\n","import { BigInteger_op_Inequality_56F059C0, BigInteger_op_Equality_56F059C0, BigInteger_op_GreaterThanOrEqual_56F059C0, BigInteger_op_GreaterThan_56F059C0, BigInteger_op_LessThanOrEqual_56F059C0, BigInteger_op_LessThan_56F059C0, BigInteger_op_ExclusiveOr_56F059C0, BigInteger_op_BitwiseOr_56F059C0, BigInteger_op_BitwiseAnd_56F059C0, BigInteger_op_LeftShift_62E082A2, BigInteger_op_RightShift_62E082A2, BigInteger_op_UnaryPlus_Z665282C2, BigInteger_op_UnaryNegation_Z665282C2, BigInteger_op_Modulus_56F059C0, BigInteger_op_Division_56F059C0, BigInteger_op_Multiply_56F059C0, BigInteger_op_Subtraction_56F059C0, BigInteger_op_Addition_56F059C0, BigInteger__get_IsOne, BigInteger__get_IsZero, BigInteger__get_Sign, BigInteger__get_ToDecimal, BigInteger__get_ToDouble, BigInteger__get_ToSingle, BigInteger__get_ToUInt64, BigInteger__get_ToInt64, BigInteger__get_ToUInt32, BigInteger__get_ToInt32, BigInteger__get_ToUInt16, BigInteger__get_ToInt16, BigInteger__get_ToByte, BigInteger__get_ToSByte, BigInteger_$ctor_Z524259A4, BigInteger_$ctor_Z524259C1, BigInteger_get_Two, BigInteger_get_One, BigInteger_get_Zero, BigInteger_Abs_Z665282C2, BigInteger_Pow_62E082A2, BigInteger_GreatestCommonDivisor_56F059C0, BigInteger_DivRem_56F059C0, BigInteger_Parse_Z721C83C5, BigInteger } from \"./BigInt/z.js\";\nimport { fromInteger } from \"./Long.js\";\nimport { comparePrimitives, min, compare as compare_1, equals as equals_1, safeHash } from \"./Util.js\";\nimport { List, toString as toString_1 } from \"./Types.js\";\nimport { fold, head, skipWhile, ofSeq, find } from \"./List.js\";\nimport { unfold, delay, rangeNumber } from \"./Seq.js\";\nimport { fill, reverse } from \"./Array.js\";\n\nexport function isBigInt(x) {\n    return x instanceof BigInteger;\n}\n\nexport function tryParse(str, res) {\n    try {\n        res.contents = BigInteger_Parse_Z721C83C5(str);\n        return true;\n    }\n    catch (matchValue) {\n        return false;\n    }\n}\n\nexport function divRem(x, y, remainder) {\n    const patternInput = BigInteger_DivRem_56F059C0(x, y);\n    remainder.contents = patternInput[1];\n    return patternInput[0];\n}\n\nexport function parse(arg00) {\n    return BigInteger_Parse_Z721C83C5(arg00);\n}\n\nexport function greatestCommonDivisor(arg00, arg01) {\n    return BigInteger_GreatestCommonDivisor_56F059C0(arg00, arg01);\n}\n\nexport function pow(arg00, arg01) {\n    return BigInteger_Pow_62E082A2(arg00, arg01);\n}\n\nexport function abs(arg00) {\n    return BigInteger_Abs_Z665282C2(arg00);\n}\n\nexport const zero = BigInteger_get_Zero();\n\nexport const one = BigInteger_get_One();\n\nexport const two = BigInteger_get_Two();\n\nexport function fromString(s) {\n    return BigInteger_Parse_Z721C83C5(s);\n}\n\nexport function fromZero() {\n    return BigInteger_get_Zero();\n}\n\nexport function fromOne() {\n    return BigInteger_get_One();\n}\n\nexport function fromInt64(i) {\n    return BigInteger_$ctor_Z524259C1(i);\n}\n\nexport function fromInt32(i) {\n    if (i > 2147483647) {\n        return BigInteger_$ctor_Z524259C1(fromInteger(i, false, 6));\n    }\n    else {\n        return BigInteger_$ctor_Z524259A4(i);\n    }\n}\n\nexport function toSByte(x) {\n    return BigInteger__get_ToSByte(x);\n}\n\nexport function toByte(x) {\n    return BigInteger__get_ToByte(x);\n}\n\nexport function toInt16(x) {\n    return BigInteger__get_ToInt16(x);\n}\n\nexport function toUInt16(x) {\n    return BigInteger__get_ToUInt16(x);\n}\n\nexport function toInt32(x) {\n    return BigInteger__get_ToInt32(x);\n}\n\nexport function toUInt32(x) {\n    return BigInteger__get_ToUInt32(x);\n}\n\nexport function toInt64(x) {\n    return BigInteger__get_ToInt64(x);\n}\n\nexport function toUInt64(x) {\n    return BigInteger__get_ToUInt64(x);\n}\n\nexport function toSingle(x) {\n    return BigInteger__get_ToSingle(x);\n}\n\nexport function toDouble(x) {\n    return BigInteger__get_ToDouble(x);\n}\n\nexport function toDecimal(x) {\n    return BigInteger__get_ToDecimal(x);\n}\n\nexport function sign(x) {\n    return BigInteger__get_Sign(x);\n}\n\nexport function isZero(x) {\n    return BigInteger__get_IsZero(x);\n}\n\nexport function isOne(x) {\n    return BigInteger__get_IsOne(x);\n}\n\nexport function hash(x) {\n    return safeHash(x);\n}\n\nexport function compare(x, y) {\n    return x.CompareTo(y);\n}\n\nexport function equals(x, y) {\n    return equals_1(x, y);\n}\n\nexport function toString(x) {\n    return toString_1(x);\n}\n\nexport const get_Zero = BigInteger_get_Zero();\n\nexport const get_One = BigInteger_get_One();\n\nexport function op_Addition(arg00, arg01) {\n    return BigInteger_op_Addition_56F059C0(arg00, arg01);\n}\n\nexport function op_Subtraction(arg00, arg01) {\n    return BigInteger_op_Subtraction_56F059C0(arg00, arg01);\n}\n\nexport function op_Multiply(arg00, arg01) {\n    return BigInteger_op_Multiply_56F059C0(arg00, arg01);\n}\n\nexport function op_Division(arg00, arg01) {\n    return BigInteger_op_Division_56F059C0(arg00, arg01);\n}\n\nexport function op_Modulus(arg00, arg01) {\n    return BigInteger_op_Modulus_56F059C0(arg00, arg01);\n}\n\nexport function op_UnaryNegation(arg00) {\n    return BigInteger_op_UnaryNegation_Z665282C2(arg00);\n}\n\nexport function op_UnaryPlus(arg00) {\n    return BigInteger_op_UnaryPlus_Z665282C2(arg00);\n}\n\nexport function op_RightShift(arg00, arg01) {\n    return BigInteger_op_RightShift_62E082A2(arg00, arg01);\n}\n\nexport function op_LeftShift(arg00, arg01) {\n    return BigInteger_op_LeftShift_62E082A2(arg00, arg01);\n}\n\nexport function op_BitwiseAnd(arg00, arg01) {\n    return BigInteger_op_BitwiseAnd_56F059C0(arg00, arg01);\n}\n\nexport function op_BitwiseOr(arg00, arg01) {\n    return BigInteger_op_BitwiseOr_56F059C0(arg00, arg01);\n}\n\nexport function op_ExclusiveOr(arg00, arg01) {\n    return BigInteger_op_ExclusiveOr_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThan(arg00, arg01) {\n    return BigInteger_op_LessThan_56F059C0(arg00, arg01);\n}\n\nexport function op_LessThanOrEqual(arg00, arg01) {\n    return BigInteger_op_LessThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThan(arg00, arg01) {\n    return BigInteger_op_GreaterThan_56F059C0(arg00, arg01);\n}\n\nexport function op_GreaterThanOrEqual(arg00, arg01) {\n    return BigInteger_op_GreaterThanOrEqual_56F059C0(arg00, arg01);\n}\n\nexport function op_Equality(arg00, arg01) {\n    return BigInteger_op_Equality_56F059C0(arg00, arg01);\n}\n\nexport function op_Inequality(arg00, arg01) {\n    return BigInteger_op_Inequality_56F059C0(arg00, arg01);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n    const matchValue = [currByte, lowBitFound];\n    if (matchValue[1]) {\n        return [(currByte ^ 255) & 255, true];\n    }\n    else if (matchValue[0] === 0) {\n        return [0, false];\n    }\n    else {\n        return [(currByte ^ (254 << find((i) => ((currByte & (1 << i)) > 0), ofSeq(rangeNumber(0, 1, 7))))) & 255, true];\n    }\n}\n\nexport function toByteArray(value) {\n    if (equals_1(value, zero)) {\n        return new Uint8Array([0]);\n    }\n    else {\n        const isPositive = compare_1(value, zero) > 0;\n        const value_1 = isPositive ? value : BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value);\n        const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n        const loop = (accumBytes_mut, consumeValue_mut, lowBitFound_mut) => {\n            let value_6, value_8, value_9, value_10;\n            loop:\n            while (true) {\n                const accumBytes = accumBytes_mut, consumeValue = consumeValue_mut, lowBitFound = lowBitFound_mut;\n                if (compare_1(consumeValue, zero) <= 0) {\n                    const accumBytes_1 = isPositive ? skipWhile((b) => (b === 0), accumBytes) : skipWhile((b_1) => (b_1 === 255), accumBytes);\n                    const isHighBitOne = (head(accumBytes_1) & 128) !== 0;\n                    return reverse(Uint8Array.from((isPositive ? isHighBitOne : false) ? (new List(0, accumBytes_1)) : (((!isPositive) ? (!isHighBitOne) : false) ? (new List(255, accumBytes_1)) : accumBytes_1)));\n                }\n                else {\n                    const currValue = toUInt32(BigInteger_op_BitwiseAnd_56F059C0(consumeValue, mask32));\n                    if (isPositive) {\n                        const b0 = currValue & 0xFF;\n                        let b1;\n                        const value_4 = currValue >>> 8;\n                        b1 = (value_4 & 0xFF);\n                        let b2;\n                        const value_5 = currValue >>> 16;\n                        b2 = (value_5 & 0xFF);\n                        accumBytes_mut = (new List((value_6 = (currValue >>> 24), value_6 & 0xFF), new List(b2, new List(b1, new List(b0, accumBytes)))));\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound);\n                        const patternInput_1 = flipTwosComplement((value_8 = (currValue >>> 8), value_8 & 0xFF), patternInput[1]);\n                        const patternInput_2 = flipTwosComplement((value_9 = (currValue >>> 16), value_9 & 0xFF), patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement((value_10 = (currValue >>> 24), value_10 & 0xFF), patternInput_2[1]);\n                        accumBytes_mut = (new List(patternInput_3[0], new List(patternInput_2[0], new List(patternInput_1[0], new List(patternInput[0], accumBytes)))));\n                        consumeValue_mut = BigInteger_op_RightShift_62E082A2(consumeValue, 32);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new List(), value_1, false);\n    }\n}\n\nexport function fromByteArray(bytes) {\n    if (bytes == null) {\n        throw (new Error(\"bytes\"));\n    }\n    if (bytes.length === 0) {\n        return zero;\n    }\n    else {\n        const isPositive = (bytes[bytes.length - 1] & 128) === 0;\n        const buffer = fill(new Uint8Array(4), 0, 4, 0);\n        const loop = (accumUInt32_mut, currIndex_mut, bytesRemaining_mut, lowBitFound_mut) => {\n            loop:\n            while (true) {\n                const accumUInt32 = accumUInt32_mut, currIndex = currIndex_mut, bytesRemaining = bytesRemaining_mut, lowBitFound = lowBitFound_mut;\n                if (bytesRemaining === 0) {\n                    const value_2 = fold((acc, value) => BigInteger_op_Addition_56F059C0(BigInteger_op_LeftShift_62E082A2(acc, 32), fromInt64(fromInteger(value, false, 6))), zero, accumUInt32);\n                    if (isPositive) {\n                        return value_2;\n                    }\n                    else {\n                        return BigInteger_op_Multiply_56F059C0(BigInteger_$ctor_Z524259A4(-1), value_2);\n                    }\n                }\n                else {\n                    const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n                    for (let i_1 = 0; i_1 <= (bytesToProcess - 1); i_1++) {\n                        buffer[i_1] = bytes[currIndex + i_1];\n                    }\n                    if (isPositive) {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n                        accumUInt32_mut = (new List((((((buffer[0] | ((buffer[1] << 8) >>> 0)) >>> 0) | ((buffer[2] << 16) >>> 0)) >>> 0) | ((buffer[3] << 24) >>> 0)) >>> 0, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = false;\n                        continue loop;\n                    }\n                    else {\n                        fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n                        const patternInput = flipTwosComplement(buffer[0], lowBitFound);\n                        const patternInput_1 = flipTwosComplement(buffer[1], patternInput[1]);\n                        const patternInput_2 = flipTwosComplement(buffer[2], patternInput_1[1]);\n                        const patternInput_3 = flipTwosComplement(buffer[3], patternInput_2[1]);\n                        accumUInt32_mut = (new List((((((patternInput[0] | ((patternInput_1[0] << 8) >>> 0)) >>> 0) | ((patternInput_2[0] << 16) >>> 0)) >>> 0) | ((patternInput_3[0] << 24) >>> 0)) >>> 0, accumUInt32));\n                        currIndex_mut = (currIndex + bytesToProcess);\n                        bytesRemaining_mut = (bytesRemaining - bytesToProcess);\n                        lowBitFound_mut = patternInput_3[1];\n                        continue loop;\n                    }\n                }\n                break;\n            }\n        };\n        return loop(new List(), 0, bytes.length, false);\n    }\n}\n\nexport function makeRangeStepFunction(step, last) {\n    const stepComparedWithZero = compare_1(step, zero) | 0;\n    if (stepComparedWithZero === 0) {\n        throw (new Error(\"The step of a range cannot be zero\"));\n    }\n    const stepGreaterThanZero = stepComparedWithZero > 0;\n    return (x) => {\n        const comparedWithLast = compare_1(x, last) | 0;\n        return ((stepGreaterThanZero ? (comparedWithLast <= 0) : false) ? true : ((!stepGreaterThanZero) ? (comparedWithLast >= 0) : false)) ? [x, BigInteger_op_Addition_56F059C0(x, step)] : (void 0);\n    };\n}\n\nexport function range(first, step, last) {\n    const stepFn = makeRangeStepFunction(step, last);\n    return delay(() => unfold(stepFn, first));\n}\n\n","import { toArray, isEmpty, find, count, containsKey, toList, tryFind, remove, ofList } from \"../fable-library.3.1.2/Map.js\";\r\nimport { map as map_3, choose, tryFind as tryFind_2, length, empty, ofSeq, singleton, ofArray } from \"../fable-library.3.1.2/List.js\";\r\nimport { FSharpRef, Union } from \"../fable-library.3.1.2/Types.js\";\r\nimport { getUnionFields, getRecordField, makeRecord, fullName, makeUnion, name as name_2, union_type, string_type } from \"../fable-library.3.1.2/Reflection.js\";\r\nimport { Json, Json$reflection } from \"./Json.fs.js\";\r\nimport { map as map_4, getEnumerator, collect, tryFind as tryFind_3, forAll, empty as empty_1, singleton as singleton_1, append, delay } from \"../fable-library.3.1.2/Seq.js\";\r\nimport { value as value_78, some, map as map_1 } from \"../fable-library.3.1.2/Option.js\";\r\nimport { toText, join, fromBase64String, printf, toFail, substring, endsWith } from \"../fable-library.3.1.2/String.js\";\r\nimport { parse } from \"../fable-library.3.1.2/Double.js\";\r\nimport { tryParse, parse as parse_1 } from \"../fable-library.3.1.2/Int32.js\";\r\nimport { toString as toString_2 } from \"../fable-library.3.1.2/Decimal.js\";\r\nimport Decimal from \"../fable-library.3.1.2/Decimal.js\";\r\nimport { toString, fromInteger, toNumber, tryParse as tryParse_1, fromInt, parse as parse_2, fromNumber } from \"../fable-library.3.1.2/Long.js\";\r\nimport { SimpleJson_stringify, SimpleJson_parseNative, SimpleJson_parse, SimpleJson_toString, SimpleJson_toPlainObject } from \"./SimpleJson.fs.js\";\r\nimport { toString as toString_1, fromInt32, parse as parse_3 } from \"../fable-library.3.1.2/BigInt.js\";\r\nimport { toString as toString_3, parse as parse_4 } from \"../fable-library.3.1.2/Date.js\";\r\nimport { parse as parse_5 } from \"../fable-library.3.1.2/DateOffset.js\";\r\nimport DateOffset from \"../fable-library.3.1.2/DateOffset.js\";\r\nimport { concat, mapIndexed, equalsWith, zip, map as map_2, tryFind as tryFind_1 } from \"../fable-library.3.1.2/Array.js\";\r\nimport { int32ToString, structuralHash, safeHash, equals, compare } from \"../fable-library.3.1.2/Util.js\";\r\nimport { parse as parse_6 } from \"../fable-library.3.1.2/Guid.js\";\r\nimport { getBytesInt32, toInt64 } from \"../fable-library.3.1.2/BitConverter.js\";\r\nimport { ofList as ofList_1 } from \"../fable-library.3.1.2/Set.js\";\r\nimport { TypeInfo } from \"./TypeInfo.fs.js\";\r\nimport { Dictionary } from \"../fable-library.3.1.2/MutableMap.js\";\r\nimport { addToSet, addToDict } from \"../fable-library.3.1.2/MapUtil.js\";\r\nimport { HashSet } from \"../fable-library.3.1.2/MutableSet.js\";\r\nimport { enumUnion, isPrimitive } from \"./TypeInfo.Converter.fs.js\";\r\nimport quote from \"./quote.js\";\r\n\r\nexport const Convert_insideBrowser = (new Function(\"try {return this===window;}catch(e){ return false;}\"))();\r\n\r\nfunction Convert_isDefined(value) {\r\n    return !((value === undefined));\r\n}\r\n\r\nexport function Convert_usingFable3() {\r\n    const map = JSON.parse(JSON.stringify(ofList(ofArray([[1, 1], [2, 2]]))));\r\n    const tree = map[\"tree\"];\r\n    if (Convert_isDefined(tree[\"k\"]) ? Convert_isDefined(tree[\"v\"]) : false) {\r\n        return Convert_isDefined(tree[\"h\"]);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const Convert_isUsingFable3 = Convert_usingFable3();\r\n\r\nexport class Convert_InternalMap extends Union {\r\n    constructor(tag, ...fields) {\r\n        super();\r\n        this.tag = (tag | 0);\r\n        this.fields = fields;\r\n    }\r\n    cases() {\r\n        return [\"MapEmpty\", \"MapOne\", \"MapNode\"];\r\n    }\r\n}\r\n\r\nexport function Convert_InternalMap$reflection() {\r\n    return union_type(\"Fable.SimpleJson.Convert.InternalMap\", [], Convert_InternalMap, () => [[], [[\"Item1\", string_type], [\"Item2\", Json$reflection()]], [[\"Item1\", string_type], [\"Item2\", Json$reflection()], [\"Item3\", Convert_InternalMap$reflection()], [\"Item4\", Convert_InternalMap$reflection()]]]);\r\n}\r\n\r\nexport function Convert_flattenMap(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 1: {\r\n            return singleton([_arg1.fields[0], _arg1.fields[1]]);\r\n        }\r\n        case 2: {\r\n            return ofSeq(delay(() => append(Convert_flattenMap(_arg1.fields[2]), delay(() => append(Convert_flattenMap(_arg1.fields[3]), delay(() => singleton_1([_arg1.fields[0], _arg1.fields[1]])))))));\r\n        }\r\n        default: {\r\n            return empty();\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CKeyValue$007C_$007C(key, map) {\r\n    return map_1((value) => [key, value, remove(key, map)], tryFind(key, map));\r\n}\r\n\r\nexport function Convert_$007CNonArray$007C_$007C(_arg1) {\r\n    if (_arg1.tag === 4) {\r\n        return void 0;\r\n    }\r\n    else {\r\n        return _arg1;\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapEmpty$007C_$007C(json) {\r\n    let pattern_matching_result;\r\n    if (json.tag === 1) {\r\n        if (json.fields[0] === \"MapEmpty\") {\r\n            pattern_matching_result = 0;\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return json;\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapKey$007C_$007C(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 0: {\r\n            return _arg1.fields[0].toString();\r\n        }\r\n        case 1: {\r\n            return _arg1.fields[0];\r\n        }\r\n        default: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapOne$007C_$007C(_arg1) {\r\n    let pattern_matching_result, key, value;\r\n    if (_arg1.tag === 4) {\r\n        if (_arg1.fields[0].tail != null) {\r\n            if (_arg1.fields[0].head.tag === 1) {\r\n                if (_arg1.fields[0].head.fields[0] === \"MapOne\") {\r\n                    if (_arg1.fields[0].tail.tail != null) {\r\n                        const activePatternResult23656 = Convert_$007CMapKey$007C_$007C(_arg1.fields[0].tail.head);\r\n                        if (activePatternResult23656 != null) {\r\n                            if (_arg1.fields[0].tail.tail.tail != null) {\r\n                                if (_arg1.fields[0].tail.tail.tail.tail == null) {\r\n                                    pattern_matching_result = 0;\r\n                                    key = activePatternResult23656;\r\n                                    value = _arg1.fields[0].tail.tail.head;\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return [key, value];\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_$007CMapNode$007C_$007C(_arg1) {\r\n    let pattern_matching_result, key, left, right, value;\r\n    if (_arg1.tag === 4) {\r\n        if (_arg1.fields[0].tail != null) {\r\n            if (_arg1.fields[0].head.tag === 1) {\r\n                if (_arg1.fields[0].head.fields[0] === \"MapNode\") {\r\n                    if (_arg1.fields[0].tail.tail != null) {\r\n                        const activePatternResult23658 = Convert_$007CMapKey$007C_$007C(_arg1.fields[0].tail.head);\r\n                        if (activePatternResult23658 != null) {\r\n                            if (_arg1.fields[0].tail.tail.tail != null) {\r\n                                if (_arg1.fields[0].tail.tail.tail.tail != null) {\r\n                                    if (_arg1.fields[0].tail.tail.tail.tail.tail != null) {\r\n                                        if (_arg1.fields[0].tail.tail.tail.tail.tail.tail != null) {\r\n                                            if (_arg1.fields[0].tail.tail.tail.tail.tail.head.tag === 0) {\r\n                                                if (_arg1.fields[0].tail.tail.tail.tail.tail.tail.tail == null) {\r\n                                                    pattern_matching_result = 0;\r\n                                                    key = activePatternResult23658;\r\n                                                    left = _arg1.fields[0].tail.tail.tail.head;\r\n                                                    right = _arg1.fields[0].tail.tail.tail.tail.head;\r\n                                                    value = _arg1.fields[0].tail.tail.head;\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result = 1;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result = 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 1;\r\n        }\r\n    }\r\n    else {\r\n        pattern_matching_result = 1;\r\n    }\r\n    switch (pattern_matching_result) {\r\n        case 0: {\r\n            return [key, value, left, right];\r\n        }\r\n        case 1: {\r\n            return void 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_generateMap(json) {\r\n    if (Convert_$007CMapEmpty$007C_$007C(json) != null) {\r\n        return new Convert_InternalMap(0);\r\n    }\r\n    else {\r\n        const activePatternResult23661 = Convert_$007CMapOne$007C_$007C(json);\r\n        if (activePatternResult23661 != null) {\r\n            const key = activePatternResult23661[0];\r\n            const value = activePatternResult23661[1];\r\n            return new Convert_InternalMap(1, key, value);\r\n        }\r\n        else {\r\n            const activePatternResult23660 = Convert_$007CMapNode$007C_$007C(json);\r\n            if (activePatternResult23660 != null) {\r\n                const key_1 = activePatternResult23660[0];\r\n                const left = activePatternResult23660[2];\r\n                const right = activePatternResult23660[3];\r\n                const value_1 = activePatternResult23660[1];\r\n                const matchValue = [Convert_generateMap(left), Convert_generateMap(right)];\r\n                let pattern_matching_result, leftMap, rightMap;\r\n                if (matchValue[0] != null) {\r\n                    if (matchValue[1] != null) {\r\n                        pattern_matching_result = 0;\r\n                        leftMap = matchValue[0];\r\n                        rightMap = matchValue[1];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                switch (pattern_matching_result) {\r\n                    case 0: {\r\n                        return new Convert_InternalMap(2, key_1, value_1, leftMap, rightMap);\r\n                    }\r\n                    case 1: {\r\n                        return void 0;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                return void 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_flatteFable3Map(tree) {\r\n    return ofSeq(delay(() => {\r\n        let matchValue, key, value;\r\n        return append((matchValue = [tryFind(\"k\", tree), tryFind(\"v\", tree)], (matchValue[0] != null) ? ((matchValue[0].tag === 1) ? ((matchValue[1] != null) ? (key = matchValue[0].fields[0], (value = matchValue[1], singleton_1([key, value]))) : (void 0, empty_1())) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\r\n            let matchValue_1, left;\r\n            return append((matchValue_1 = tryFind(\"left\", tree), (matchValue_1 != null) ? ((matchValue_1.tag === 5) ? (left = matchValue_1.fields[0], Convert_flatteFable3Map(left)) : (void 0, empty_1())) : (void 0, empty_1())), delay(() => {\r\n                const matchValue_2 = tryFind(\"right\", tree);\r\n                let pattern_matching_result, right;\r\n                if (matchValue_2 != null) {\r\n                    if (matchValue_2.tag === 5) {\r\n                        pattern_matching_result = 0;\r\n                        right = matchValue_2.fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result = 1;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n                switch (pattern_matching_result) {\r\n                    case 0: {\r\n                        return Convert_flatteFable3Map(right);\r\n                    }\r\n                    case 1: {\r\n                        return empty_1();\r\n                    }\r\n                }\r\n            }));\r\n        }));\r\n    }));\r\n}\r\n\r\nexport function Convert_flattenFable3Lists(linkedList) {\r\n    return ofSeq(delay(() => {\r\n        let matchValue;\r\n        return append((matchValue = tryFind(\"head\", linkedList), (matchValue == null) ? (void 0, empty_1()) : singleton_1(matchValue)), delay(() => {\r\n            const matchValue_1 = tryFind(\"tail\", linkedList);\r\n            let pattern_matching_result, tail;\r\n            if (matchValue_1 != null) {\r\n                if (matchValue_1.tag === 5) {\r\n                    pattern_matching_result = 0;\r\n                    tail = matchValue_1.fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 1;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 1;\r\n            }\r\n            switch (pattern_matching_result) {\r\n                case 0: {\r\n                    return Convert_flattenFable3Lists(tail);\r\n                }\r\n                case 1: {\r\n                    return empty_1();\r\n                }\r\n            }\r\n        }));\r\n    }));\r\n}\r\n\r\nexport function Convert_arrayLike(_arg1) {\r\n    switch (_arg1.tag) {\r\n        case 25: {\r\n            return true;\r\n        }\r\n        case 23: {\r\n            return true;\r\n        }\r\n        case 26: {\r\n            return true;\r\n        }\r\n        case 27: {\r\n            return true;\r\n        }\r\n        case 24: {\r\n            return true;\r\n        }\r\n        case 30: {\r\n            return true;\r\n        }\r\n        case 31: {\r\n            return true;\r\n        }\r\n        default: {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Convert_isRecord(_arg1) {\r\n    if (_arg1.tag === 34) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_unionOfRecords(_arg1) {\r\n    if (_arg1.tag === 35) {\r\n        return forAll((case$) => {\r\n            if (case$.CaseTypes.length === 1) {\r\n                return Convert_isRecord(case$.CaseTypes[0]);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }, _arg1.fields[0]()[0]);\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_optional(_arg1) {\r\n    if (_arg1.tag === 22) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_isQuoted(input) {\r\n    if (input.indexOf(\"\\\"\") === 0) {\r\n        return endsWith(input, \"\\\"\");\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function Convert_betweenQuotes(input) {\r\n    return (\"\\\"\" + input) + \"\\\"\";\r\n}\r\n\r\nexport function Convert_removeQuotes(input) {\r\n    return substring(input, 1, input.length - 2);\r\n}\r\n\r\nexport function Convert_fromJsonAs(input_mut, typeInfo_mut) {\r\n    let foundCase, foundCase_2, testExpr, values_8, tree_2, tree;\r\n    Convert_fromJsonAs:\r\n    while (true) {\r\n        const input = input_mut, typeInfo = typeInfo_mut;\r\n        const matchValue = [input, typeInfo];\r\n        let pattern_matching_result, value, value_1, value_2, value_3, value_4, value_5, value_6, value_7, value_8, value_9, value_10, value_11, value_12, value_13, value_14, value_15, value_16, value_17, value_18, getlElemType, value_19, getElemType, value_20, getElemType_1, value_21, genericJson, value_22, value_23, value_24, value_25, value_26, value_27, value_28, value_29, getTypes, values, jsonValue_5, optionalTypeDelayed_5;\r\n        if (matchValue[0].tag === 0) {\r\n            if (matchValue[1].tag === 8) {\r\n                pattern_matching_result = 0;\r\n                value = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 7) {\r\n                pattern_matching_result = 1;\r\n                value_1 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 5) {\r\n                pattern_matching_result = 3;\r\n                value_3 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 1) {\r\n                pattern_matching_result = 7;\r\n                value_7 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 9) {\r\n                pattern_matching_result = 9;\r\n                value_9 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 10) {\r\n                pattern_matching_result = 11;\r\n                value_11 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 2) {\r\n                pattern_matching_result = 12;\r\n                value_12 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 3) {\r\n                pattern_matching_result = 14;\r\n                value_14 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 4) {\r\n                pattern_matching_result = 16;\r\n                value_16 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 16) {\r\n                pattern_matching_result = 18;\r\n                value_18 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 33) {\r\n                pattern_matching_result = 20;\r\n                getElemType = matchValue[1].fields[0];\r\n                value_20 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 18) {\r\n                pattern_matching_result = 24;\r\n                genericJson = matchValue[0];\r\n            }\r\n            else if (matchValue[1].tag === 12) {\r\n                pattern_matching_result = 27;\r\n                value_24 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 15) {\r\n                pattern_matching_result = 29;\r\n                value_26 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 14) {\r\n                pattern_matching_result = 32;\r\n                value_29 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 22) {\r\n                if (!equals(matchValue[0], new Json(3))) {\r\n                    pattern_matching_result = 35;\r\n                    jsonValue_5 = matchValue[0];\r\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 36;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 36;\r\n            }\r\n        }\r\n        else if (matchValue[0].tag === 1) {\r\n            if (matchValue[1].tag === 7) {\r\n                pattern_matching_result = 2;\r\n                value_2 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 5) {\r\n                pattern_matching_result = 5;\r\n                value_5 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 1) {\r\n                pattern_matching_result = 6;\r\n                value_6 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 9) {\r\n                pattern_matching_result = 8;\r\n                value_8 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 10) {\r\n                pattern_matching_result = 10;\r\n                value_10 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 2) {\r\n                pattern_matching_result = 13;\r\n                value_13 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 3) {\r\n                pattern_matching_result = 15;\r\n                value_15 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 4) {\r\n                pattern_matching_result = 17;\r\n                value_17 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 33) {\r\n                pattern_matching_result = 19;\r\n                getlElemType = matchValue[1].fields[0];\r\n                value_19 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 25) {\r\n                pattern_matching_result = 21;\r\n                getElemType_1 = matchValue[1].fields[0];\r\n                value_21 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 18) {\r\n                pattern_matching_result = 24;\r\n                genericJson = matchValue[0];\r\n            }\r\n            else if (matchValue[1].tag === 11) {\r\n                pattern_matching_result = 25;\r\n                value_22 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 12) {\r\n                pattern_matching_result = 26;\r\n                value_23 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 15) {\r\n                pattern_matching_result = 28;\r\n                value_25 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 13) {\r\n                pattern_matching_result = 30;\r\n                value_27 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 14) {\r\n                pattern_matching_result = 31;\r\n                value_28 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 22) {\r\n                if (!equals(matchValue[0], new Json(3))) {\r\n                    pattern_matching_result = 35;\r\n                    jsonValue_5 = matchValue[0];\r\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 36;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 36;\r\n            }\r\n        }\r\n        else if (matchValue[0].tag === 2) {\r\n            if (matchValue[1].tag === 6) {\r\n                pattern_matching_result = 4;\r\n                value_4 = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 18) {\r\n                pattern_matching_result = 24;\r\n                genericJson = matchValue[0];\r\n            }\r\n            else if (matchValue[1].tag === 22) {\r\n                if (!equals(matchValue[0], new Json(3))) {\r\n                    pattern_matching_result = 35;\r\n                    jsonValue_5 = matchValue[0];\r\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 36;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 36;\r\n            }\r\n        }\r\n        else if (matchValue[0].tag === 3) {\r\n            if (matchValue[1].tag === 1) {\r\n                pattern_matching_result = 22;\r\n            }\r\n            else if (matchValue[1].tag === 0) {\r\n                pattern_matching_result = 23;\r\n            }\r\n            else if (matchValue[1].tag === 18) {\r\n                pattern_matching_result = 24;\r\n                genericJson = matchValue[0];\r\n            }\r\n            else if (matchValue[1].tag === 22) {\r\n                pattern_matching_result = 34;\r\n            }\r\n            else {\r\n                pattern_matching_result = 36;\r\n            }\r\n        }\r\n        else if (matchValue[0].tag === 5) {\r\n            if (matchValue[1].tag === 18) {\r\n                pattern_matching_result = 24;\r\n                genericJson = matchValue[0];\r\n            }\r\n            else if (matchValue[1].tag === 35) {\r\n                pattern_matching_result = 33;\r\n                getTypes = matchValue[1].fields[0];\r\n                values = matchValue[0].fields[0];\r\n            }\r\n            else if (matchValue[1].tag === 22) {\r\n                if (!equals(matchValue[0], new Json(3))) {\r\n                    pattern_matching_result = 35;\r\n                    jsonValue_5 = matchValue[0];\r\n                    optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n                }\r\n                else {\r\n                    pattern_matching_result = 36;\r\n                }\r\n            }\r\n            else {\r\n                pattern_matching_result = 36;\r\n            }\r\n        }\r\n        else if (matchValue[1].tag === 18) {\r\n            pattern_matching_result = 24;\r\n            genericJson = matchValue[0];\r\n        }\r\n        else if (matchValue[1].tag === 22) {\r\n            if (!equals(matchValue[0], new Json(3))) {\r\n                pattern_matching_result = 35;\r\n                jsonValue_5 = matchValue[0];\r\n                optionalTypeDelayed_5 = matchValue[1].fields[0];\r\n            }\r\n            else {\r\n                pattern_matching_result = 36;\r\n            }\r\n        }\r\n        else {\r\n            pattern_matching_result = 36;\r\n        }\r\n        switch (pattern_matching_result) {\r\n            case 0: {\r\n                return value;\r\n            }\r\n            case 1: {\r\n                return value_1;\r\n            }\r\n            case 2: {\r\n                return parse(value_2);\r\n            }\r\n            case 3: {\r\n                return Math.floor(value_3);\r\n            }\r\n            case 4: {\r\n                return value_4;\r\n            }\r\n            case 5: {\r\n                return parse_1(value_5, 511, false, 32);\r\n            }\r\n            case 6: {\r\n                return value_6;\r\n            }\r\n            case 7: {\r\n                return value_7.toString();\r\n            }\r\n            case 8: {\r\n                return new Decimal(value_8);\r\n            }\r\n            case 9: {\r\n                return new Decimal(value_9);\r\n            }\r\n            case 10: {\r\n                return parse_1(value_10, 511, false, 16);\r\n            }\r\n            case 11: {\r\n                return (value_11 + 0x8000 & 0xFFFF) - 0x8000;\r\n            }\r\n            case 12: {\r\n                return value_12 & 0xFFFF;\r\n            }\r\n            case 13: {\r\n                return parse_1(value_13, 511, true, 16);\r\n            }\r\n            case 14: {\r\n                return value_14 >>> 0;\r\n            }\r\n            case 15: {\r\n                return parse_1(value_15, 511, true, 32);\r\n            }\r\n            case 16: {\r\n                return fromNumber(value_16, true);\r\n            }\r\n            case 17: {\r\n                return parse_2(value_17, 511, true, 64);\r\n            }\r\n            case 18: {\r\n                return Math.floor(value_18);\r\n            }\r\n            case 19: {\r\n                const patternInput = getlElemType();\r\n                const underlyingType = patternInput[0];\r\n                const originalType = patternInput[1];\r\n                switch (underlyingType.tag) {\r\n                    case 5: {\r\n                        let matchValue_1;\r\n                        let outArg = 0;\r\n                        matchValue_1 = [tryParse(value_19, 511, false, 32, new FSharpRef(() => outArg, (v) => {\r\n                            outArg = v;\r\n                        })), outArg];\r\n                        if (matchValue_1[0]) {\r\n                            return matchValue_1[1];\r\n                        }\r\n                        else {\r\n                            const arg20 = name_2(originalType);\r\n                            return toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"))(value_19)(arg20);\r\n                        }\r\n                    }\r\n                    case 11: {\r\n                        let matchValue_2;\r\n                        let outArg_1 = fromInt(0);\r\n                        matchValue_2 = [tryParse_1(value_19, 511, false, 64, new FSharpRef(() => outArg_1, (v_1) => {\r\n                            outArg_1 = v_1;\r\n                        })), outArg_1];\r\n                        if (matchValue_2[0]) {\r\n                            return matchValue_2[1];\r\n                        }\r\n                        else {\r\n                            const arg20_1 = name_2(originalType);\r\n                            return toFail(printf(\"The value \\u0027%s\\u0027 is not valid for enum of type \\u0027%s\\u0027\"))(value_19)(arg20_1);\r\n                        }\r\n                    }\r\n                    default: {\r\n                        const arg20_2 = name_2(originalType);\r\n                        return toFail(printf(\"The value \\u0027%s\\u0027 cannot be converted to enum of type \\u0027%s\\u0027\"))(value_19)(arg20_2);\r\n                    }\r\n                }\r\n            }\r\n            case 20: {\r\n                const patternInput_1 = getElemType();\r\n                return value_20;\r\n            }\r\n            case 21: {\r\n                const elemType = getElemType_1();\r\n                if (elemType.tag === 12) {\r\n                    if ((typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) ? true : Convert_insideBrowser) {\r\n                        return fromBase64String(value_21);\r\n                    }\r\n                    else {\r\n                        return Array.prototype.slice.call(Buffer.from(value_21, 'base64'));\r\n                    }\r\n                }\r\n                else {\r\n                    return toFail(printf(\"Cannot convert arbitrary string \\u0027%s\\u0027 to %A\"))(value_21)(elemType);\r\n                }\r\n            }\r\n            case 22: {\r\n                return null;\r\n            }\r\n            case 23: {\r\n                return void 0;\r\n            }\r\n            case 24: {\r\n                return SimpleJson_toPlainObject(genericJson);\r\n            }\r\n            case 25: {\r\n                return parse_2(value_22, 511, false, 64);\r\n            }\r\n            case 26: {\r\n                return parse_1(value_23, 511, true, 8);\r\n            }\r\n            case 27: {\r\n                return value_24 & 0xFF;\r\n            }\r\n            case 28: {\r\n                return parse_3(value_25);\r\n            }\r\n            case 29: {\r\n                return fromInt32(Math.floor(value_26));\r\n            }\r\n            case 30: {\r\n                return parse_4(value_27);\r\n            }\r\n            case 31: {\r\n                return parse_5(value_28);\r\n            }\r\n            case 32: {\r\n                return DateOffset(toNumber(fromNumber(Math.floor(value_29), false)) * 1000, 0);\r\n            }\r\n            case 33: {\r\n                const patternInput_2 = getTypes();\r\n                const unionType = patternInput_2[1];\r\n                const cases = patternInput_2[0];\r\n                const matchValue_3 = toList(values);\r\n                let pattern_matching_result_1, caseName, values_1, caseName_1, json;\r\n                if (matchValue_3.tail != null) {\r\n                    if (matchValue_3.head[1].tag === 4) {\r\n                        if (matchValue_3.tail.tail == null) {\r\n                            pattern_matching_result_1 = 0;\r\n                            caseName = matchValue_3.head[0];\r\n                            values_1 = matchValue_3.head[1].fields[0];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 2;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const activePatternResult23690 = Convert_$007CNonArray$007C_$007C(matchValue_3.head[1]);\r\n                        if (activePatternResult23690 != null) {\r\n                            if (matchValue_3.tail.tail == null) {\r\n                                pattern_matching_result_1 = 1;\r\n                                caseName_1 = matchValue_3.head[0];\r\n                                json = activePatternResult23690;\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_1 = 2;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_1 = 2;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_1 = 2;\r\n                }\r\n                switch (pattern_matching_result_1) {\r\n                    case 0: {\r\n                        const _arg1 = tryFind_1((case$) => (case$.CaseName === caseName), cases);\r\n                        if (_arg1 != null) {\r\n                            if (foundCase = _arg1, (foundCase.CaseTypes.length === 1) ? Convert_arrayLike(foundCase.CaseTypes[0]) : false) {\r\n                                const foundCase_1 = _arg1;\r\n                                return makeUnion(foundCase_1.Info, [Convert_fromJsonAs(new Json(4, values_1), foundCase_1.CaseTypes[0])]);\r\n                            }\r\n                            else {\r\n                                let pattern_matching_result_2, foundCase_3;\r\n                                if (_arg1 != null) {\r\n                                    if (foundCase_2 = _arg1, (foundCase_2.CaseTypes.length === 1) ? Convert_optional(foundCase_2.CaseTypes[0]) : false) {\r\n                                        pattern_matching_result_2 = 0;\r\n                                        foundCase_3 = _arg1;\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_2 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_2 = 1;\r\n                                }\r\n                                switch (pattern_matching_result_2) {\r\n                                    case 0: {\r\n                                        return makeUnion(foundCase_3.Info, [Convert_fromJsonAs(new Json(4, values_1), foundCase_3.CaseTypes[0])]);\r\n                                    }\r\n                                    case 1: {\r\n                                        if (_arg1 != null) {\r\n                                            const foundCase_4 = _arg1;\r\n                                            if (((foundCase_4.CaseTypes.length === 1) ? (!Convert_arrayLike(foundCase_4.CaseTypes[0])) : false) ? (foundCase_4.CaseTypes.length !== length(values_1)) : false) {\r\n                                                const arg30_1 = length(values_1) | 0;\r\n                                                const arg20_5 = foundCase_4.CaseTypes.length | 0;\r\n                                                toFail(printf(\"Expected case \\u0027%s\\u0027 to have %d argument types but the JSON data only contained %d values\"))(foundCase_4.CaseName)(arg20_5)(arg30_1);\r\n                                            }\r\n                                            return makeUnion(foundCase_4.Info, map_2((tupledArg) => Convert_fromJsonAs(tupledArg[1], tupledArg[0]), zip(foundCase_4.CaseTypes, Array.from(values_1))));\r\n                                        }\r\n                                        else {\r\n                                            throw (new Error(\"The match cases were incomplete\"));\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            const expectedCases = join(\", \", map_2((case$_1) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_1.CaseName), cases));\r\n                            const arg20_4 = name_2(unionType);\r\n                            return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName)(arg20_4)(expectedCases);\r\n                        }\r\n                    }\r\n                    case 1: {\r\n                        const _arg2 = tryFind_1((case$_2) => (case$_2.CaseName === caseName_1), cases);\r\n                        let pattern_matching_result_3, caseInfo, caseName_2, caseType;\r\n                        if (_arg2 != null) {\r\n                            if (testExpr = _arg2.CaseTypes, (!equalsWith(compare, testExpr, null)) ? (testExpr.length === 1) : false) {\r\n                                pattern_matching_result_3 = 0;\r\n                                caseInfo = _arg2.Info;\r\n                                caseName_2 = _arg2.CaseName;\r\n                                caseType = _arg2.CaseTypes[0];\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_3 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_3 = 1;\r\n                        }\r\n                        switch (pattern_matching_result_3) {\r\n                            case 0: {\r\n                                return makeUnion(caseInfo, [((input_1) => ((typeInfo_1) => Convert_fromJsonAs(input_1, typeInfo_1)))(json)(caseType)]);\r\n                            }\r\n                            case 1: {\r\n                                const expectedCases_1 = join(\", \", map_2((case$_3) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_3.CaseName), cases));\r\n                                const arg20_7 = name_2(unionType);\r\n                                return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_1)(arg20_7)(expectedCases_1);\r\n                            }\r\n                        }\r\n                    }\r\n                    case 2: {\r\n                        if ((containsKey(\"tag\", values) ? containsKey(\"fields\", values) : false) ? (count(values) === 2) : false) {\r\n                            const matchValue_4 = [tryFind(\"tag\", values), tryFind(\"fields\", values)];\r\n                            let pattern_matching_result_4, caseIndex, fieldValues;\r\n                            if (matchValue_4[0] != null) {\r\n                                if (matchValue_4[0].tag === 0) {\r\n                                    if (matchValue_4[1] != null) {\r\n                                        if (matchValue_4[1].tag === 4) {\r\n                                            pattern_matching_result_4 = 0;\r\n                                            caseIndex = matchValue_4[0].fields[0];\r\n                                            fieldValues = matchValue_4[1].fields[0];\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_4 = 1;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_4 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_4 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_4 = 1;\r\n                            }\r\n                            switch (pattern_matching_result_4) {\r\n                                case 0: {\r\n                                    const foundCase_5 = cases[~(~caseIndex)];\r\n                                    return makeUnion(foundCase_5.Info, mapIndexed((index, value_35) => Convert_fromJsonAs(value_35, foundCase_5.CaseTypes[index]), Array.from(fieldValues)));\r\n                                }\r\n                                case 1: {\r\n                                    const arg20_8 = fullName(unionType);\r\n                                    const arg10_10 = SimpleJson_toString(new Json(5, values));\r\n                                    return toFail(printf(\"Could not deserialize JSON(%s) into type %s\"))(arg10_10)(arg20_8);\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (Convert_unionOfRecords(typeInfo)) {\r\n                            const foundDiscriminatorKey = tryFind_2((keyword) => containsKey(keyword, values), ofArray([\"__typename\", \"$typename\", \"$type\"]));\r\n                            if (foundDiscriminatorKey != null) {\r\n                                const discriminatorValueJson = find(foundDiscriminatorKey, values);\r\n                                if (discriminatorValueJson.tag === 1) {\r\n                                    const discriminatorValue = discriminatorValueJson.fields[0];\r\n                                    const foundUnionCase = tryFind_3((case$_4) => (case$_4.CaseName.toUpperCase() === discriminatorValue.toUpperCase()), cases);\r\n                                    if (foundUnionCase != null) {\r\n                                        const case$_5 = foundUnionCase;\r\n                                        return makeUnion(case$_5.Info, [Convert_fromJsonAs(new Json(5, values), case$_5.CaseTypes[0])]);\r\n                                    }\r\n                                    else {\r\n                                        const arg10_12 = name_2(unionType);\r\n                                        return toFail(printf(\"Union of records of type \\u0027%s\\u0027 does not have a matching case \\u0027%s\\u0027\"))(arg10_12)(discriminatorValue);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    const arg10_13 = name_2(unionType);\r\n                                    return toFail(printf(\"Union of records of type \\u0027%s\\u0027 cannot be deserialized with the value of the discriminator key is not a string to match against a specific union case\"))(arg10_13);\r\n                                }\r\n                            }\r\n                            else {\r\n                                const arg10_11 = name_2(unionType);\r\n                                return toFail(printf(\"Could not serialize the JSON object into the union of records of type %s because the JSON did not contain a known discriminator. Expected \\u0027__typename\\u0027, \\u0027$typeName\\u0027 or \\u0027$type\\u0027\"))(arg10_11);\r\n                            }\r\n                        }\r\n                        else {\r\n                            const unexpectedJson = JSON.stringify(matchValue_3);\r\n                            const expectedType = JSON.stringify(cases);\r\n                            return toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"))(unexpectedJson)(expectedType);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            case 34: {\r\n                return void 0;\r\n            }\r\n            case 35: {\r\n                return (some)(Convert_fromJsonAs(jsonValue_5, optionalTypeDelayed_5()));\r\n            }\r\n            case 36: {\r\n                let pattern_matching_result_5, value_36, value_37, dict, caseName_4, getTypes_2;\r\n                if (matchValue[0].tag === 1) {\r\n                    if (matchValue[1].tag === 17) {\r\n                        pattern_matching_result_5 = 0;\r\n                        value_36 = matchValue[0].fields[0];\r\n                    }\r\n                    else if (matchValue[1].tag === 35) {\r\n                        if (Convert_isQuoted(matchValue[0].fields[0])) {\r\n                            pattern_matching_result_5 = 3;\r\n                            caseName_4 = matchValue[0].fields[0];\r\n                            getTypes_2 = matchValue[1].fields[0];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_5 = 4;\r\n                        }\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_5 = 4;\r\n                    }\r\n                }\r\n                else if (matchValue[0].tag === 0) {\r\n                    if (matchValue[1].tag === 11) {\r\n                        pattern_matching_result_5 = 1;\r\n                        value_37 = matchValue[0].fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_5 = 4;\r\n                    }\r\n                }\r\n                else if (matchValue[0].tag === 5) {\r\n                    if (matchValue[1].tag === 11) {\r\n                        pattern_matching_result_5 = 2;\r\n                        dict = matchValue[0].fields[0];\r\n                    }\r\n                    else {\r\n                        pattern_matching_result_5 = 4;\r\n                    }\r\n                }\r\n                else {\r\n                    pattern_matching_result_5 = 4;\r\n                }\r\n                switch (pattern_matching_result_5) {\r\n                    case 0: {\r\n                        return parse_6(value_36);\r\n                    }\r\n                    case 1: {\r\n                        return ((value_38) => fromInteger(value_38, false, 2))(~(~value_37));\r\n                    }\r\n                    case 2: {\r\n                        const get$ = (key) => tryFind(key, dict);\r\n                        const _arg3 = choose((x_1) => x_1, ofArray([get$(\"low\"), get$(\"high\"), get$(\"unsigned\")]));\r\n                        let pattern_matching_result_6, high, low;\r\n                        if (_arg3.tail != null) {\r\n                            if (_arg3.head.tag === 0) {\r\n                                if (_arg3.tail.tail != null) {\r\n                                    if (_arg3.tail.head.tag === 0) {\r\n                                        if (_arg3.tail.tail.tail != null) {\r\n                                            if (_arg3.tail.tail.head.tag === 2) {\r\n                                                if (_arg3.tail.tail.tail.tail == null) {\r\n                                                    pattern_matching_result_6 = 0;\r\n                                                    high = _arg3.tail.head.fields[0];\r\n                                                    low = _arg3.head.fields[0];\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_6 = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_6 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_6 = 1;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_6 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_6 = 1;\r\n                                }\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_6 = 1;\r\n                            }\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_6 = 1;\r\n                        }\r\n                        switch (pattern_matching_result_6) {\r\n                            case 0: {\r\n                                return toInt64(concat([getBytesInt32(~(~low)), getBytesInt32(~(~high))], Uint8Array), 0);\r\n                            }\r\n                            case 1: {\r\n                                return toFail(printf(\"Unable to construct int64 from object literal { low: int, high: int, unsigned: bool }\"));\r\n                            }\r\n                        }\r\n                    }\r\n                    case 3: {\r\n                        const patternInput_3 = getTypes_2();\r\n                        const caseTypes = patternInput_3[0];\r\n                        const _arg4 = tryFind_1((case$_6) => (case$_6.CaseName === Convert_removeQuotes(caseName_4)), caseTypes);\r\n                        if (_arg4 == null) {\r\n                            const expectedCases_2 = join(\", \", map_2((case$_7) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_7.CaseName), caseTypes));\r\n                            const arg20_11 = name_2(patternInput_3[1]);\r\n                            return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_4)(arg20_11)(expectedCases_2);\r\n                        }\r\n                        else {\r\n                            return makeUnion(_arg4.Info, []);\r\n                        }\r\n                    }\r\n                    case 4: {\r\n                        let pattern_matching_result_7, caseName_5, getTypes_3, getFields, serializedRecord, caseValue, getTypes_4, elementTypeDelayed, values_4, elementTypeDelayed_1, values_5, elementTypeDelayed_2, linkedList, elementTypeDelayed_3, values_6, elementTypeDelayed_4, values_7, array_9, tupleTypesDelayed, dict_1, getTypes_5, getTypes_6, tuples, getTypes_7, tuples_1, dict_2, getTypes_8, getType, items, getTypes_9, map, getType_1;\r\n                        if (matchValue[0].tag === 1) {\r\n                            if (matchValue[1].tag === 35) {\r\n                                pattern_matching_result_7 = 0;\r\n                                caseName_5 = matchValue[0].fields[0];\r\n                                getTypes_3 = matchValue[1].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 34) {\r\n                                pattern_matching_result_7 = 1;\r\n                                getFields = matchValue[1].fields[0];\r\n                                serializedRecord = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 19) {\r\n                                pattern_matching_result_7 = 15;\r\n                                getType_1 = matchValue[1].fields[0];\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_7 = 16;\r\n                            }\r\n                        }\r\n                        else if (matchValue[0].tag === 4) {\r\n                            if (matchValue[1].tag === 35) {\r\n                                pattern_matching_result_7 = 2;\r\n                                caseValue = matchValue[0].fields[0];\r\n                                getTypes_4 = matchValue[1].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 25) {\r\n                                pattern_matching_result_7 = 3;\r\n                                elementTypeDelayed = matchValue[1].fields[0];\r\n                                values_4 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 23) {\r\n                                pattern_matching_result_7 = 4;\r\n                                elementTypeDelayed_1 = matchValue[1].fields[0];\r\n                                values_5 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 24) {\r\n                                pattern_matching_result_7 = 6;\r\n                                elementTypeDelayed_3 = matchValue[1].fields[0];\r\n                                values_6 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 26) {\r\n                                pattern_matching_result_7 = 7;\r\n                                elementTypeDelayed_4 = matchValue[1].fields[0];\r\n                                values_7 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 27) {\r\n                                pattern_matching_result_7 = 8;\r\n                                array_9 = matchValue[0].fields[0];\r\n                                tupleTypesDelayed = matchValue[1].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 28) {\r\n                                pattern_matching_result_7 = 10;\r\n                                getTypes_6 = matchValue[1].fields[0];\r\n                                tuples = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 29) {\r\n                                pattern_matching_result_7 = 11;\r\n                                getTypes_7 = matchValue[1].fields[0];\r\n                                tuples_1 = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 31) {\r\n                                pattern_matching_result_7 = 13;\r\n                                getType = matchValue[1].fields[0];\r\n                                items = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 19) {\r\n                                pattern_matching_result_7 = 15;\r\n                                getType_1 = matchValue[1].fields[0];\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_7 = 16;\r\n                            }\r\n                        }\r\n                        else if (matchValue[0].tag === 5) {\r\n                            if (matchValue[1].tag === 23) {\r\n                                pattern_matching_result_7 = 5;\r\n                                elementTypeDelayed_2 = matchValue[1].fields[0];\r\n                                linkedList = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 34) {\r\n                                pattern_matching_result_7 = 9;\r\n                                dict_1 = matchValue[0].fields[0];\r\n                                getTypes_5 = matchValue[1].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 29) {\r\n                                pattern_matching_result_7 = 12;\r\n                                dict_2 = matchValue[0].fields[0];\r\n                                getTypes_8 = matchValue[1].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 28) {\r\n                                pattern_matching_result_7 = 14;\r\n                                getTypes_9 = matchValue[1].fields[0];\r\n                                map = matchValue[0].fields[0];\r\n                            }\r\n                            else if (matchValue[1].tag === 19) {\r\n                                pattern_matching_result_7 = 15;\r\n                                getType_1 = matchValue[1].fields[0];\r\n                            }\r\n                            else {\r\n                                pattern_matching_result_7 = 16;\r\n                            }\r\n                        }\r\n                        else if (matchValue[1].tag === 19) {\r\n                            pattern_matching_result_7 = 15;\r\n                            getType_1 = matchValue[1].fields[0];\r\n                        }\r\n                        else {\r\n                            pattern_matching_result_7 = 16;\r\n                        }\r\n                        switch (pattern_matching_result_7) {\r\n                            case 0: {\r\n                                const patternInput_4 = getTypes_3();\r\n                                const caseTypes_1 = patternInput_4[0];\r\n                                const _arg5 = tryFind_1((case$_8) => (case$_8.CaseName === caseName_5), caseTypes_1);\r\n                                if (_arg5 == null) {\r\n                                    const expectedCases_3 = join(\", \", map_2((case$_9) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_9.CaseName), caseTypes_1));\r\n                                    const arg20_12 = name_2(patternInput_4[1]);\r\n                                    return toFail(printf(\"Case %s was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_5)(arg20_12)(expectedCases_3);\r\n                                }\r\n                                else {\r\n                                    return makeUnion(_arg5.Info, []);\r\n                                }\r\n                            }\r\n                            case 1: {\r\n                                input_mut = SimpleJson_parse(serializedRecord);\r\n                                typeInfo_mut = typeInfo;\r\n                                continue Convert_fromJsonAs;\r\n                            }\r\n                            case 2: {\r\n                                const patternInput_5 = getTypes_4();\r\n                                const cases_1 = patternInput_5[0];\r\n                                let pattern_matching_result_8, caseName_6, caseName_8, values_3, otherwise_6;\r\n                                if (caseValue.tail != null) {\r\n                                    if (caseValue.head.tag === 1) {\r\n                                        if (caseValue.tail.tail == null) {\r\n                                            pattern_matching_result_8 = 0;\r\n                                            caseName_6 = caseValue.head.fields[0];\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_8 = 1;\r\n                                            caseName_8 = caseValue.head.fields[0];\r\n                                            values_3 = caseValue.tail;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_8 = 2;\r\n                                        otherwise_6 = caseValue;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_8 = 2;\r\n                                    otherwise_6 = caseValue;\r\n                                }\r\n                                switch (pattern_matching_result_8) {\r\n                                    case 0: {\r\n                                        const _arg6 = tryFind_1((case$_10) => (case$_10.CaseName === caseName_6), cases_1);\r\n                                        if (_arg6 == null) {\r\n                                            const expectedCases_4 = join(\", \", map_2((case$_11) => toText(printf(\" \\u0027%s\\u0027 \"))(case$_11.CaseName), cases_1));\r\n                                            const arg20_13 = name_2(patternInput_5[1]);\r\n                                            return toFail(printf(\"Case \\u0027%s\\u0027 was not valid for type \\u0027%s\\u0027, expected one of the cases [%s]\"))(caseName_6)(arg20_13)(expectedCases_4);\r\n                                        }\r\n                                        else {\r\n                                            const caseName_7 = _arg6.CaseName;\r\n                                            const caseInfoTypes = _arg6.CaseTypes;\r\n                                            return makeUnion(_arg6.Info, []);\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        const _arg7 = tryFind_1((case$_12) => (case$_12.CaseName === caseName_8), cases_1);\r\n                                        if (_arg7 != null) {\r\n                                            const types = _arg7.CaseTypes;\r\n                                            const foundCaseName = _arg7.CaseName;\r\n                                            const caseInfo_4 = _arg7.Info;\r\n                                            if (types.length !== length(values_3)) {\r\n                                                toFail(printf(\"The number of union case parameters for \\u0027%s\\u0027 is different\"))(foundCaseName);\r\n                                            }\r\n                                            return makeUnion(caseInfo_4, map_2((tupledArg_1) => Convert_fromJsonAs(tupledArg_1[1], tupledArg_1[0]), zip(types, Array.from(values_3))));\r\n                                        }\r\n                                        else {\r\n                                            const expectedCases_5 = join(\", \", map_2((_arg1_1) => _arg1_1.CaseName, cases_1));\r\n                                            return toFail(printf(\"Case %s was not valid, expected one of [%s]\"))(caseName_8)(expectedCases_5);\r\n                                        }\r\n                                    }\r\n                                    case 2: {\r\n                                        const unexpectedJson_1 = JSON.stringify(otherwise_6);\r\n                                        const expectedType_1 = JSON.stringify(cases_1);\r\n                                        return toFail(printf(\"Expected JSON:\\n%s\\nto match the type\\n%s\"))(unexpectedJson_1)(expectedType_1);\r\n                                    }\r\n                                }\r\n                            }\r\n                            case 3: {\r\n                                const elementType = elementTypeDelayed();\r\n                                return Array.from(map_3((value_42) => Convert_fromJsonAs(value_42, elementType), values_4));\r\n                            }\r\n                            case 4: {\r\n                                const elementType_1 = elementTypeDelayed_1();\r\n                                return map_3((value_44) => Convert_fromJsonAs(value_44, elementType_1), values_5);\r\n                            }\r\n                            case 5: {\r\n                                const elementType_2 = elementTypeDelayed_2();\r\n                                return map_3((value_46) => Convert_fromJsonAs(value_46, elementType_2), Convert_flattenFable3Lists(linkedList));\r\n                            }\r\n                            case 6: {\r\n                                const elementType_3 = elementTypeDelayed_3();\r\n                                return ofList_1(map_3((value_48) => Convert_fromJsonAs(value_48, elementType_3), values_6), {\r\n                                    Compare: compare,\r\n                                });\r\n                            }\r\n                            case 7: {\r\n                                const elementType_4 = elementTypeDelayed_4();\r\n                                return map_3((value_50) => Convert_fromJsonAs(value_50, elementType_4), values_7);\r\n                            }\r\n                            case 8: {\r\n                                return map_2((tupledArg_2) => Convert_fromJsonAs(tupledArg_2[1], tupledArg_2[0]), zip(tupleTypesDelayed(), Array.from(array_9)));\r\n                            }\r\n                            case 9: {\r\n                                const patternInput_6 = getTypes_5();\r\n                                const recordType = patternInput_6[1];\r\n                                const fields = patternInput_6[0];\r\n                                return makeRecord(recordType, (values_8 = toList(dict_1), map_2((_arg3_1) => {\r\n                                    const fieldType = _arg3_1.FieldType;\r\n                                    const fieldName = _arg3_1.FieldName;\r\n                                    const _arg8 = tryFind_2((tupledArg_3) => (fieldName === tupledArg_3[0]), values_8);\r\n                                    if (_arg8 == null) {\r\n                                        if (fieldType.tag === 22) {\r\n                                            return void 0;\r\n                                        }\r\n                                        else {\r\n                                            let dictKeys;\r\n                                            const arg10_27 = join(\", \", map_3((arg) => toText(printf(\"\\u0027%s\\u0027\"))(arg[0]), toList(dict_1)));\r\n                                            dictKeys = toText(printf(\"[ %s ]\"))(arg10_27);\r\n                                            let recordFields;\r\n                                            const arg10_30 = join(\", \", map_2((_arg2_1) => {\r\n                                                const name_1 = _arg2_1.FieldName;\r\n                                                if (_arg2_1.FieldType.tag === 22) {\r\n                                                    return toText(printf(\"optional(\\u0027%s\\u0027)\"))(name_1);\r\n                                                }\r\n                                                else {\r\n                                                    return toText(printf(\"required(\\u0027%s\\u0027)\"))(name_1);\r\n                                                }\r\n                                            }, fields));\r\n                                            recordFields = toText(printf(\"[ %s ]\"))(arg10_30);\r\n                                            const arg30_6 = name_2(recordType);\r\n                                            return toFail(printf(\"Could not find the required key \\u0027%s\\u0027 in the JSON object literal with keys %s to match with record type \\u0027%s\\u0027 that has fields %s\"))(fieldName)(dictKeys)(arg30_6)(recordFields);\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        const key_2 = _arg8[0];\r\n                                        return Convert_fromJsonAs(_arg8[1], fieldType);\r\n                                    }\r\n                                }, fields)));\r\n                            }\r\n                            case 10: {\r\n                                const patternInput_7 = getTypes_6();\r\n                                const keyType = patternInput_7[0];\r\n                                const pairs = ofSeq(delay(() => collect((keyValuePair) => {\r\n                                    let a;\r\n                                    return singleton_1(Convert_fromJsonAs(keyValuePair, new TypeInfo(27, (a = [keyType, patternInput_7[1]], () => a))));\r\n                                }, tuples)));\r\n                                switch (keyType.tag) {\r\n                                    case 5:\r\n                                    case 1:\r\n                                    case 6: {\r\n                                        return ofList(pairs);\r\n                                    }\r\n                                    default: {\r\n                                        return ofList(pairs);\r\n                                    }\r\n                                }\r\n                            }\r\n                            case 11: {\r\n                                const patternInput_8 = getTypes_7();\r\n                                const keyType_1 = patternInput_8[0];\r\n                                const pairs_1 = ofSeq(delay(() => collect((keyValuePair_1) => singleton_1(Convert_fromJsonAs(keyValuePair_1, new TypeInfo(27, () => [keyType_1, patternInput_8[1]]))), tuples_1)));\r\n                                const output = (keyType_1.tag === 35) ? (new Dictionary([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: safeHash,\r\n                                })) : ((keyType_1.tag === 34) ? (new Dictionary([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: structuralHash,\r\n                                })) : (new Dictionary([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: structuralHash,\r\n                                })));\r\n                                const enumerator = getEnumerator(pairs_1);\r\n                                try {\r\n                                    while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                        const forLoopVar = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                        addToDict(output, forLoopVar[0], forLoopVar[1]);\r\n                                    }\r\n                                }\r\n                                finally {\r\n                                    enumerator.Dispose();\r\n                                }\r\n                                return output;\r\n                            }\r\n                            case 12: {\r\n                                const patternInput_9 = getTypes_8();\r\n                                const keyType_2 = patternInput_9[0];\r\n                                const pairs_2 = map_3((tupledArg_4) => [Convert_fromJsonAs(new Json(1, tupledArg_4[0]), keyType_2), Convert_fromJsonAs(tupledArg_4[1], patternInput_9[1])], toList(dict_2));\r\n                                const output_1 = (keyType_2.tag === 35) ? (new Dictionary([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: safeHash,\r\n                                })) : ((keyType_2.tag === 34) ? (new Dictionary([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: structuralHash,\r\n                                })) : (new Dictionary([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: structuralHash,\r\n                                })));\r\n                                const enumerator_1 = getEnumerator(pairs_2);\r\n                                try {\r\n                                    while (enumerator_1[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                        const forLoopVar_1 = enumerator_1[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\r\n                                        addToDict(output_1, forLoopVar_1[0], forLoopVar_1[1]);\r\n                                    }\r\n                                }\r\n                                finally {\r\n                                    enumerator_1.Dispose();\r\n                                }\r\n                                return output_1;\r\n                            }\r\n                            case 13: {\r\n                                const elemType_1 = getType();\r\n                                const hashset = (elemType_1.tag === 35) ? (new HashSet([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: safeHash,\r\n                                })) : ((elemType_1.tag === 34) ? (new HashSet([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: structuralHash,\r\n                                })) : (new HashSet([], {\r\n                                    Equals: equals,\r\n                                    GetHashCode: structuralHash,\r\n                                })));\r\n                                const enumerator_2 = getEnumerator(items);\r\n                                try {\r\n                                    while (enumerator_2[\"System.Collections.IEnumerator.MoveNext\"]()) {\r\n                                        const value_67 = addToSet(Convert_fromJsonAs(enumerator_2[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), elemType_1), hashset);\r\n                                        void value_67;\r\n                                    }\r\n                                }\r\n                                finally {\r\n                                    enumerator_2.Dispose();\r\n                                }\r\n                                return hashset;\r\n                            }\r\n                            case 14: {\r\n                                const patternInput_10 = getTypes_9();\r\n                                const valueType_5 = patternInput_10[1];\r\n                                const keyType_3 = patternInput_10[0];\r\n                                const matchValue_5 = [tryFind(\"comparer\", map), tryFind(\"tree\", map)];\r\n                                let pattern_matching_result_9, comparer_1, tree_1;\r\n                                if (matchValue_5[0] != null) {\r\n                                    if (matchValue_5[0].tag === 5) {\r\n                                        if (matchValue_5[1] != null) {\r\n                                            if (matchValue_5[1].tag === 4) {\r\n                                                if (tree = matchValue_5[1].fields[0], isEmpty(matchValue_5[0].fields[0])) {\r\n                                                    pattern_matching_result_9 = 0;\r\n                                                    comparer_1 = matchValue_5[0].fields[0];\r\n                                                    tree_1 = matchValue_5[1].fields[0];\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_9 = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_9 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_9 = 1;\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        pattern_matching_result_9 = 1;\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    pattern_matching_result_9 = 1;\r\n                                }\r\n                                switch (pattern_matching_result_9) {\r\n                                    case 0: {\r\n                                        const matchValue_6 = Convert_generateMap(new Json(4, tree_1));\r\n                                        if (matchValue_6 == null) {\r\n                                            const inputJson = SimpleJson_toString(new Json(4, tree_1));\r\n                                            return toFail(printf(\"Could not generate map from JSON\\n %s\"))(inputJson);\r\n                                        }\r\n                                        else {\r\n                                            const pairs_3 = map_3((tupledArg_5) => {\r\n                                                const key_6 = tupledArg_5[0];\r\n                                                return [(!Convert_isQuoted(key_6)) ? Convert_fromJsonAs(new Json(1, key_6), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_6), keyType_3), Convert_fromJsonAs(tupledArg_5[1], valueType_5)];\r\n                                            }, Convert_flattenMap(matchValue_6));\r\n                                            switch (keyType_3.tag) {\r\n                                                case 5:\r\n                                                case 1:\r\n                                                case 6: {\r\n                                                    return ofList(pairs_3);\r\n                                                }\r\n                                                default: {\r\n                                                    return ofList(pairs_3);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    case 1: {\r\n                                        let pattern_matching_result_10, comparer_3, tree_3;\r\n                                        if (matchValue_5[0] != null) {\r\n                                            if (matchValue_5[0].tag === 5) {\r\n                                                if (matchValue_5[1] != null) {\r\n                                                    if (matchValue_5[1].tag === 5) {\r\n                                                        if (tree_2 = matchValue_5[1].fields[0], isEmpty(matchValue_5[0].fields[0])) {\r\n                                                            pattern_matching_result_10 = 0;\r\n                                                            comparer_3 = matchValue_5[0].fields[0];\r\n                                                            tree_3 = matchValue_5[1].fields[0];\r\n                                                        }\r\n                                                        else {\r\n                                                            pattern_matching_result_10 = 1;\r\n                                                        }\r\n                                                    }\r\n                                                    else {\r\n                                                        pattern_matching_result_10 = 1;\r\n                                                    }\r\n                                                }\r\n                                                else {\r\n                                                    pattern_matching_result_10 = 1;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                pattern_matching_result_10 = 1;\r\n                                            }\r\n                                        }\r\n                                        else {\r\n                                            pattern_matching_result_10 = 1;\r\n                                        }\r\n                                        switch (pattern_matching_result_10) {\r\n                                            case 0: {\r\n                                                input_mut = (new Json(5, ofList(Convert_flatteFable3Map(tree_3))));\r\n                                                typeInfo_mut = typeInfo;\r\n                                                continue Convert_fromJsonAs;\r\n                                            }\r\n                                            case 1: {\r\n                                                const pairs_4 = map_3((tupledArg_6) => {\r\n                                                    const key_7 = tupledArg_6[0];\r\n                                                    return [(!Convert_isQuoted(key_7)) ? ((isPrimitive(keyType_3) ? true : enumUnion(keyType_3)) ? Convert_fromJsonAs(new Json(1, key_7), keyType_3) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3)) : Convert_fromJsonAs(SimpleJson_parseNative(key_7), keyType_3), Convert_fromJsonAs(tupledArg_6[1], valueType_5)];\r\n                                                }, toList(map));\r\n                                                switch (keyType_3.tag) {\r\n                                                    case 5:\r\n                                                    case 1:\r\n                                                    case 6: {\r\n                                                        return ofList(pairs_4);\r\n                                                    }\r\n                                                    default: {\r\n                                                        return ofList(pairs_4);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            case 15: {\r\n                                const arg20_17 = fullName(getType_1());\r\n                                const arg10_33 = SimpleJson_toString(input);\r\n                                return toFail(printf(\"Cannot convert %s to %s\"))(arg10_33)(arg20_17);\r\n                            }\r\n                            case 16: {\r\n                                const arg20_18 = JSON.stringify(typeInfo);\r\n                                const arg10_34 = SimpleJson_toString(input);\r\n                                return toFail(printf(\"Cannot convert %s to %s\"))(arg10_34)(arg20_18);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function Convert_fromJson(json, typeInfo) {\r\n    return Convert_fromJsonAs(json, typeInfo);\r\n}\r\n\r\nexport const Convert_quoteText = quote;\r\n\r\nexport function Convert_serialize(value_mut, typeInfo_mut) {\r\n    let copyOfStruct, copyOfStruct_1, copyOfStruct_2;\r\n    Convert_serialize:\r\n    while (true) {\r\n        const value = value_mut, typeInfo = typeInfo_mut;\r\n        switch (typeInfo.tag) {\r\n            case 1: {\r\n                const content = value;\r\n                if (content == null) {\r\n                    return \"null\";\r\n                }\r\n                else {\r\n                    return Convert_quoteText(content);\r\n                }\r\n            }\r\n            case 0: {\r\n                return \"null\";\r\n            }\r\n            case 8:\r\n            case 7: {\r\n                return value.toString();\r\n            }\r\n            case 12:\r\n            case 2:\r\n            case 3:\r\n            case 10:\r\n            case 33:\r\n            case 16:\r\n            case 5: {\r\n                return int32ToString(value);\r\n            }\r\n            case 4:\r\n            case 11: {\r\n                return Convert_betweenQuotes(toString(value));\r\n            }\r\n            case 15: {\r\n                return Convert_betweenQuotes(toString_1(value));\r\n            }\r\n            case 9: {\r\n                return Convert_betweenQuotes(toString_2(value));\r\n            }\r\n            case 6: {\r\n                if (value) {\r\n                    return \"true\";\r\n                }\r\n                else {\r\n                    return \"false\";\r\n                }\r\n            }\r\n            case 17: {\r\n                return Convert_betweenQuotes((copyOfStruct = value, copyOfStruct));\r\n            }\r\n            case 13: {\r\n                return Convert_betweenQuotes((copyOfStruct_1 = value, toString_3(copyOfStruct_1, \"O\")));\r\n            }\r\n            case 14: {\r\n                return Convert_betweenQuotes((copyOfStruct_2 = value, toString_3(copyOfStruct_2, \"O\")));\r\n            }\r\n            case 34: {\r\n                return (\"{\" + join(\", \", map_2((field) => {\r\n                    const arg20 = Convert_serialize(getRecordField(value, field.PropertyInfo), field.FieldType);\r\n                    return toText(printf(\"\\\"%s\\\": %s\"))(field.FieldName)(arg20);\r\n                }, typeInfo.fields[0]()[0]))) + \"}\";\r\n            }\r\n            case 30: {\r\n                const elementType = typeInfo.fields[0]();\r\n                return (\"[\" + join(\", \", map_4((element) => Convert_serialize(element, elementType), value))) + \"]\";\r\n            }\r\n            case 31: {\r\n                const elementType_1 = typeInfo.fields[0]();\r\n                return (\"[\" + join(\", \", map_4((element_1) => Convert_serialize(element_1, elementType_1), value))) + \"]\";\r\n            }\r\n            case 24: {\r\n                const elementType_2 = typeInfo.fields[0]();\r\n                return (\"[\" + join(\", \", map_4((element_2) => Convert_serialize(element_2, elementType_2), value))) + \"]\";\r\n            }\r\n            case 25: {\r\n                const elementType_3 = typeInfo.fields[0]();\r\n                return (\"[\" + join(\", \", map_2((element_3) => Convert_serialize(element_3, elementType_3), value))) + \"]\";\r\n            }\r\n            case 23: {\r\n                const elementType_4 = typeInfo.fields[0]();\r\n                return (\"[\" + join(\", \", map_3((element_4) => Convert_serialize(element_4, elementType_4), value))) + \"]\";\r\n            }\r\n            case 26: {\r\n                const elementType_5 = typeInfo.fields[0]();\r\n                return (\"[\" + join(\", \", map_2((element_5) => Convert_serialize(element_5, elementType_5), Array.from(value)))) + \"]\";\r\n            }\r\n            case 22: {\r\n                const matchValue = value;\r\n                if (matchValue != null) {\r\n                    value_mut = value_78(matchValue);\r\n                    typeInfo_mut = typeInfo.fields[0]();\r\n                    continue Convert_serialize;\r\n                }\r\n                else {\r\n                    return \"null\";\r\n                }\r\n            }\r\n            case 35: {\r\n                const patternInput_1 = typeInfo.fields[0]();\r\n                const patternInput_2 = getUnionFields(value, patternInput_1[1]);\r\n                const usedCase = patternInput_2[0];\r\n                const fields = patternInput_2[1];\r\n                const caseTypes = patternInput_1[0].find((case$) => (case$.CaseName === name_2(usedCase))).CaseTypes;\r\n                if (enumUnion(typeInfo) ? true : (caseTypes.length === 0)) {\r\n                    return Convert_betweenQuotes(name_2(usedCase));\r\n                }\r\n                else if (caseTypes.length === 1) {\r\n                    return (((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + Convert_serialize(fields[0], caseTypes[0])) + \"}\";\r\n                }\r\n                else {\r\n                    const serializedFields_1 = join(\", \", mapIndexed((index, caseType) => Convert_serialize(fields[index], caseType), caseTypes));\r\n                    return ((((\"{\" + Convert_betweenQuotes(name_2(usedCase))) + \": \") + \"[\") + serializedFields_1) + \"] }\";\r\n                }\r\n            }\r\n            case 28: {\r\n                const patternInput_3 = typeInfo.fields[0]();\r\n                const keyType = patternInput_3[0];\r\n                const serializedValues = join(\", \", map_2((tupledArg) => {\r\n                    const serializedKey = Convert_serialize(tupledArg[0], keyType);\r\n                    const serializedValue = Convert_serialize(tupledArg[1], patternInput_3[1]);\r\n                    if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\r\n                        if (!Convert_isQuoted(serializedKey)) {\r\n                            return (Convert_quoteText(serializedKey) + \": \") + serializedValue;\r\n                        }\r\n                        else {\r\n                            return (serializedKey + \": \") + serializedValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return (((\"[\" + serializedKey) + \", \") + serializedValue) + \"]\";\r\n                    }\r\n                }, toArray(value)));\r\n                if (isPrimitive(keyType) ? true : enumUnion(keyType)) {\r\n                    return (\"{\" + serializedValues) + \"}\";\r\n                }\r\n                else {\r\n                    return (\"[\" + serializedValues) + \"]\";\r\n                }\r\n            }\r\n            case 29: {\r\n                const patternInput_4 = typeInfo.fields[0]();\r\n                const keyType_1 = patternInput_4[0];\r\n                const serializedValues_1 = join(\", \", map_4((pair) => {\r\n                    const patternInput_5 = [pair[0], pair[1]];\r\n                    const serializedKey_1 = Convert_serialize(patternInput_5[0], keyType_1);\r\n                    const serializedValue_1 = Convert_serialize(patternInput_5[1], patternInput_4[1]);\r\n                    if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\r\n                        if (!Convert_isQuoted(serializedKey_1)) {\r\n                            return (Convert_betweenQuotes(serializedKey_1) + \": \") + serializedValue_1;\r\n                        }\r\n                        else {\r\n                            return (serializedKey_1 + \": \") + serializedValue_1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        return (((\"[\" + serializedKey_1) + \", \") + serializedValue_1) + \"]\";\r\n                    }\r\n                }, value));\r\n                if (isPrimitive(keyType_1) ? true : enumUnion(keyType_1)) {\r\n                    return (\"{\" + serializedValues_1) + \"}\";\r\n                }\r\n                else {\r\n                    return (\"[\" + serializedValues_1) + \"]\";\r\n                }\r\n            }\r\n            case 27: {\r\n                const tupleTypes = typeInfo.fields[0]();\r\n                if (tupleTypes.length === 1) {\r\n                    return (\"[\" + Convert_serialize(value, tupleTypes[0])) + \"]\";\r\n                }\r\n                else {\r\n                    return (\"[\" + join(\", \", mapIndexed((index_1, element_6) => Convert_serialize(element_6, tupleTypes[index_1]), value))) + \"]\";\r\n                }\r\n            }\r\n            case 18: {\r\n                return SimpleJson_stringify(value);\r\n            }\r\n            case 19: {\r\n                return SimpleJson_stringify(value);\r\n            }\r\n            default: {\r\n                return \"null\";\r\n            }\r\n        }\r\n        break;\r\n    }\r\n}\r\n\r\nexport function Fable_SimpleJson_Json__Json_stringify_Static_4E60E31B(value) {\r\n    if (Convert_isUsingFable3) {\r\n        console.warn(some(\"It looks like you using the function Json.stringify from Fable.SimpleJson while also using Fable 3 (nagareyama). Please use Json.serialize instead which supports both Fable 3 and Fable 2.x\"));\r\n    }\r\n    return SimpleJson_stringify(value);\r\n}\r\n\r\n","export function create(pattern, options = 0) {\n    // Supported RegexOptions\n    // * IgnoreCase:  0x0001\n    // * Multiline:   0x0002\n    // * Singleline:  0x0010\n    // * ECMAScript:  0x0100 (ignored)\n    if ((options & ~(1 ^ 2 ^ 16 ^ 256)) !== 0) {\n        throw new Error(\"RegexOptions only supports: IgnoreCase, Multiline, Singleline and ECMAScript\");\n    }\n    let flags = \"g\";\n    flags += options & 1 ? \"i\" : \"\"; // 0x0001 RegexOptions.IgnoreCase\n    flags += options & 2 ? \"m\" : \"\";\n    flags += options & 16 ? \"s\" : \"\";\n    return new RegExp(pattern, flags);\n}\n// From http://stackoverflow.com/questions/3446170/escape-string-for-use-in-javascript-regex\nexport function escape(str) {\n    return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n}\nexport function unescape(str) {\n    return str.replace(/\\\\([\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|])/g, \"$1\");\n}\nexport function isMatch(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.test(str);\n}\nexport function match(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    return reg.exec(str);\n}\nexport function matches(str, pattern, options = 0) {\n    let reg;\n    reg = str instanceof RegExp\n        ? (reg = str, str = pattern, reg.lastIndex = options, reg)\n        : reg = create(pattern, options);\n    if (!reg.global) {\n        throw new Error(\"Non-global RegExp\"); // Prevent infinite loop\n    }\n    let m = reg.exec(str);\n    const matches = [];\n    while (m !== null) {\n        matches.push(m);\n        m = reg.exec(str);\n    }\n    return matches;\n}\nexport function options(reg) {\n    let options = 256; // ECMAScript\n    options |= reg.ignoreCase ? 1 : 0;\n    options |= reg.multiline ? 2 : 0;\n    return options;\n}\nexport function replace(reg, input, replacement, limit, offset = 0) {\n    function replacer() {\n        let res = arguments[0];\n        if (limit) {\n            limit--;\n            const match = [];\n            const len = arguments.length;\n            for (let i = 0; i < len - 2; i++) {\n                match.push(arguments[i]);\n            }\n            match.index = arguments[len - 2];\n            match.input = arguments[len - 1];\n            res = replacement(match);\n        }\n        return res;\n    }\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    if (typeof replacement === \"function\") {\n        limit = limit == null ? -1 : limit;\n        return input.substring(0, offset) + input.substring(offset).replace(reg, replacer);\n    }\n    else {\n        // $0 doesn't work with JS regex, see #1155\n        replacement = replacement.replace(/\\$0/g, (_s) => \"$&\");\n        if (limit != null) {\n            let m;\n            const sub1 = input.substring(offset);\n            const _matches = matches(reg, sub1);\n            const sub2 = matches.length > limit ? (m = _matches[limit - 1], sub1.substring(0, m.index + m[0].length)) : sub1;\n            return input.substring(0, offset) + sub2.replace(reg, replacement)\n                + input.substring(offset + sub2.length);\n        }\n        else {\n            return input.replace(reg, replacement);\n        }\n    }\n}\nexport function split(reg, input, limit, offset = 0) {\n    if (typeof reg === \"string\") {\n        const tmp = reg;\n        reg = create(input, limit !== null && limit !== void 0 ? limit : 0);\n        input = tmp;\n        limit = undefined;\n    }\n    input = input.substring(offset);\n    return input.split(reg, limit);\n}\n","import { toString as dateToString } from \"./Date.js\";\nimport { compare as numericCompare, isNumeric, multiply, toExponential, toFixed, toHex, toPrecision } from \"./Numeric.js\";\nimport { escape } from \"./RegExp.js\";\nimport { FSharpRef, toString } from \"./Types.js\";\nconst fsFormatRegExp = /(^|[^%])%([0+\\- ]*)(\\*|\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst interpolateRegExp = /(?:(^|[^%])%([0+\\- ]*)(\\d+)?(?:\\.(\\d+))?(\\w))?%P\\(\\)/g;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\nfunction isLessThan(x, y) {\n    return numericCompare(x, y) < 0;\n}\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function interpolate(input, values) {\n    let i = 0;\n    return input.replace(interpolateRegExp, (_, prefix, flags, padLength, precision, format) => {\n        return formatReplacement(values[i++], prefix, flags, padLength, precision, format);\n    });\n}\nfunction continuePrint(cont, arg) {\n    return typeof arg === \"string\" ? cont(arg) : arg.cont(cont);\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return continuePrint((x) => console.log(x), arg);\n}\nexport function toConsoleError(arg) {\n    return continuePrint((x) => console.error(x), arg);\n}\nexport function toText(arg) {\n    return continuePrint((x) => x, arg);\n}\nexport function toFail(arg) {\n    return continuePrint((x) => {\n        throw new Error(x);\n    }, arg);\n}\nfunction formatReplacement(rep, prefix, flags, padLength, precision, format) {\n    let sign = \"\";\n    flags = flags || \"\";\n    format = format || \"\";\n    if (isNumeric(rep)) {\n        if (format.toLowerCase() !== \"x\") {\n            if (isLessThan(rep, 0)) {\n                rep = multiply(rep, -1);\n                sign = \"-\";\n            }\n            else {\n                if (flags.indexOf(\" \") >= 0) {\n                    sign = \" \";\n                }\n                else if (flags.indexOf(\"+\") >= 0) {\n                    sign = \"+\";\n                }\n            }\n        }\n        precision = precision == null ? null : parseInt(precision, 10);\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                precision = precision != null ? precision : 6;\n                rep = toFixed(rep, precision);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n            default: // AOid\n                rep = String(rep);\n                break;\n        }\n    }\n    else if (rep instanceof Date) {\n        rep = dateToString(rep);\n    }\n    else {\n        rep = toString(rep);\n    }\n    padLength = typeof padLength === \"number\" ? padLength : parseInt(padLength, 10);\n    if (!isNaN(padLength)) {\n        const zeroFlag = flags.indexOf(\"0\") >= 0; // Use '0' for left padding\n        const minusFlag = flags.indexOf(\"-\") >= 0; // Right padding\n        const ch = minusFlag || !zeroFlag ? \" \" : \"0\";\n        if (ch === \"0\") {\n            rep = padLeft(rep, padLength - sign.length, ch, minusFlag);\n            rep = sign + rep;\n        }\n        else {\n            rep = padLeft(sign + rep, padLength, ch, minusFlag);\n        }\n    }\n    else {\n        rep = sign + rep;\n    }\n    return prefix ? prefix + rep : rep;\n}\nfunction formatOnce(str2, rep, padRef) {\n    return str2.replace(fsFormatRegExp, (match, prefix, flags, padLength, precision, format) => {\n        if (padRef.contents != null) {\n            padLength = padRef.contents;\n            padRef.contents = null;\n        }\n        else if (padLength === \"*\") {\n            if (rep < 0) {\n                throw new Error(\"Non-negative number required\");\n            }\n            padRef.contents = rep;\n            return match;\n        }\n        const once = formatReplacement(rep, prefix, flags, padLength, precision, format);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont, padRef = new FSharpRef(null)) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg, padRef);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont, padRef)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (_, idx, padLength, format, precision, pattern) => {\n        let rep = args[idx];\n        if (isNumeric(rep)) {\n            precision = precision == null ? null : parseInt(precision, 10);\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(rep, precision);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision != null ? toPrecision(rep, precision) : toPrecision(rep);\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision != null ? toExponential(rep, precision) : toExponential(rep);\n                    break;\n                case \"p\":\n                case \"P\":\n                    precision = precision != null ? precision : 2;\n                    rep = toFixed(multiply(rep, 100), precision) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision != null ? padLeft(String(rep), precision, \"0\") : String(rep);\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision != null ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    if (pattern) {\n                        let sign = \"\";\n                        rep = pattern.replace(/(0+)(\\.0+)?/, (_, intPart, decimalPart) => {\n                            if (isLessThan(rep, 0)) {\n                                rep = multiply(rep, -1);\n                                sign = \"-\";\n                            }\n                            rep = toFixed(rep, decimalPart != null ? decimalPart.length - 1 : 0);\n                            return padLeft(rep, (intPart || \"\").length - sign.length + (decimalPart != null ? decimalPart.length : 0), \"0\");\n                        });\n                        rep = sign + rep;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        else {\n            rep = toString(rep);\n        }\n        padLength = parseInt((padLength || \" \").substring(1), 10);\n        if (!isNaN(padLength)) {\n            rep = padLeft(String(rep), Math.abs(padLength), \" \", padLength < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function concat(...xs) {\n    return xs.map((x) => String(x)).join(\"\");\n}\nexport function join(delimiter, xs) {\n    if (Array.isArray(xs)) {\n        return xs.join(delimiter);\n    }\n    else {\n        return Array.from(xs).join(delimiter);\n    }\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return xs.slice(startIndex, endIndexPlusOne).join(delimiter);\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : undefined;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : undefined;\n    if (count && count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\nexport function substring(str, startIndex, length) {\n    if ((startIndex + (length || 0) > str.length)) {\n        throw new Error(\"Invalid startIndex and/or length\");\n    }\n    return length != null ? str.substr(startIndex, length) : str.substr(startIndex);\n}\n","import { FSharpRef } from \"./Types.js\";\nexport function tryParse(str, defValue) {\n    // TODO: test if value is valid and in range\n    if (str != null && /\\S/.test(str)) {\n        const v = +str.replace(\"_\", \"\");\n        if (!Number.isNaN(v)) {\n            defValue.contents = v;\n            return true;\n        }\n    }\n    return false;\n}\nexport function parse(str) {\n    const defValue = new FSharpRef(0);\n    if (tryParse(str, defValue)) {\n        return defValue.contents;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\n// JS Number.isFinite function evals false for NaN\nexport function isInfinity(x) {\n    return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: DateOffset instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * However, this means that in order to construct an UTC date\n * from a DateOffset with offset of +5 hours, you first need\n * to subtract those 5 hours, than add the \"local\" offset.\n * As said, all kinds of messed up.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { create as createDate, dateOffsetToString, daysInMonth, offsetRegex, parseRaw } from \"./Date.js\";\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long.js\";\nimport { compareDates, padWithZeros } from \"./Util.js\";\nexport default function DateTimeOffset(value, offset) {\n    const d = new Date(value);\n    d.offset = offset != null ? offset : new Date().getTimezoneOffset() * -60000;\n    return d;\n}\nexport function fromDate(date, offset) {\n    const isUtc = date.kind === 1 /* UTC */;\n    const offset2 = isUtc ? 0 : date.getTimezoneOffset() * -60000;\n    if (offset != null && offset !== offset2) {\n        throw new Error(isUtc\n            ? \"The UTC Offset for Utc DateTime instances must be 0.\"\n            : \"The UTC Offset of the local dateTime parameter does not match the offset argument.\");\n    }\n    return DateTimeOffset(date.getTime(), offset2);\n}\nexport function fromTicks(ticks, offset) {\n    ticks = fromValue(ticks);\n    const epoc = ticksToUnixEpochMilliseconds(ticks) - offset;\n    return DateTimeOffset(epoc, offset);\n}\nexport function getUtcTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), 0);\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTimeOffset(-62135596800000, 0);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTimeOffset(253402300799999, 0);\n}\nexport function parse(str) {\n    const date = parseRaw(str);\n    const offsetMatch = offsetRegex.exec(str);\n    const offset = offsetMatch == null\n        ? date.getTimezoneOffset() * -60000\n        : (offsetMatch[0] === \"Z\"\n            ? 0\n            : parseInt(offsetMatch[1], 10) * 3600000\n                + parseInt(offsetMatch[2], 10) * 60000);\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function tryParse(v, defValue) {\n    try {\n        defValue.contents = parse(v);\n        return true;\n    }\n    catch (_err) {\n        return false;\n    }\n}\nexport function create(year, month, day, h, m, s, ms, offset) {\n    if (offset == null) {\n        offset = ms;\n        ms = 0;\n    }\n    if (offset !== 0) {\n        if (offset % 60000 !== 0) {\n            throw new Error(\"Offset must be specified in whole minutes\");\n        }\n        if (~~(offset / 3600000) > 14) {\n            throw new Error(\"Offset must be within plus or minus 14 hour\");\n        }\n    }\n    let date;\n    if (offset === 0) {\n        date = new Date(Date.UTC(year, month - 1, day, h, m, s, ms));\n        if (year <= 99) {\n            date.setFullYear(year, month - 1, day);\n        }\n    }\n    else {\n        const str = padWithZeros(year, 4) + \"-\" +\n            padWithZeros(month, 2) + \"-\" +\n            padWithZeros(day, 2) + \"T\" +\n            padWithZeros(h, 2) + \":\" +\n            padWithZeros(m, 2) + \":\" +\n            padWithZeros(s, 2) + \".\" +\n            padWithZeros(ms, 3) +\n            dateOffsetToString(offset);\n        date = new Date(str);\n    }\n    const dateValue = date.getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date\");\n    }\n    return DateTimeOffset(dateValue, offset);\n}\nexport function now() {\n    const date = new Date();\n    const offset = date.getTimezoneOffset() * -60000;\n    return DateTimeOffset(date.getTime(), offset);\n}\nexport function utcNow() {\n    const date = now();\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toUniversalTime(date) {\n    return DateTimeOffset(date.getTime(), 0);\n}\nexport function toLocalTime(date) {\n    return DateTimeOffset(date.getTime(), date.getTimezoneOffset() * -60000);\n}\nexport function timeOfDay(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return d2.getUTCHours() * 3600000\n        + d2.getUTCMinutes() * 60000\n        + d2.getUTCSeconds() * 1000\n        + d2.getUTCMilliseconds();\n}\nexport function date(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    return createDate(d2.getUTCFullYear(), d2.getUTCMonth() + 1, d2.getUTCDate(), 0, 0, 0, 0);\n}\nexport function day(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDate();\n}\nexport function hour(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCHours();\n}\nexport function millisecond(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMilliseconds();\n}\nexport function minute(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMinutes();\n}\nexport function month(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCMonth() + 1;\n}\nexport function second(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCSeconds();\n}\nexport function year(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCFullYear();\n}\nexport function dayOfWeek(d) {\n    var _a;\n    return new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0)).getUTCDay();\n}\nexport function dayOfYear(d) {\n    var _a;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    const _year = d2.getUTCFullYear();\n    const _month = d2.getUTCMonth() + 1;\n    let _day = d2.getUTCDate();\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    var _a;\n    return DateTimeOffset(d.getTime() + ts, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addDays(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 86400000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addHours(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 3600000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMinutes(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 60000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addSeconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v * 1000, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMilliseconds(d, v) {\n    var _a;\n    return DateTimeOffset(d.getTime() + v, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addYears(d, v) {\n    var _a;\n    const newMonth = d.getUTCMonth() + 1;\n    const newYear = d.getUTCFullYear() + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d.getUTCDate());\n    return create(newYear, newMonth, newDay, d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds(), ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n}\nexport function addMonths(d, v) {\n    var _a, _b;\n    const d2 = new Date(d.getTime() + ((_a = d.offset) !== null && _a !== void 0 ? _a : 0));\n    let newMonth = d2.getUTCMonth() + 1 + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = d2.getUTCFullYear() + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, d2.getUTCDate());\n    return create(newYear, newMonth, newDay, d2.getUTCHours(), d2.getUTCMinutes(), d2.getUTCSeconds(), d2.getUTCMilliseconds(), ((_b = d.offset) !== null && _b !== void 0 ? _b : 0));\n}\nexport function subtract(d, that) {\n    var _a;\n    return typeof that === \"number\"\n        ? DateTimeOffset(d.getTime() - that, ((_a = d.offset) !== null && _a !== void 0 ? _a : 0))\n        : d.getTime() - that.getTime();\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport function equalsExact(d1, d2) {\n    return d1.getTime() === d2.getTime() && d1.offset === d2.offset;\n}\nexport function compare(d1, d2) {\n    return compareDates(d1, d2);\n}\nexport const compareTo = compare;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\n","import { record_type, bool_type, list_type, option_type, class_type } from \"./Reflection.js\";\nimport { some, value as value_1 } from \"./Option.js\";\nimport { toString, List, Record } from \"./Types.js\";\nimport { singleton as singleton_1, collect, empty as empty_1, delay, fold as fold_2, reduce, iterate as iterate_1, toIterator, map as map_1, getEnumerator } from \"./Seq.js\";\nimport { fold as fold_1 } from \"./Array.js\";\nimport { join } from \"./String.js\";\nimport { structuralHash } from \"./Util.js\";\nimport { HashSet__Add_2B595, HashSet_$ctor_Z6150332D } from \"./MutableSet.js\";\n\nexport class SetTreeLeaf$1 {\n    constructor(k) {\n        this.k = k;\n    }\n}\n\nexport function SetTreeLeaf$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeLeaf`1\", [gen0], SetTreeLeaf$1);\n}\n\nexport function SetTreeLeaf$1_$ctor_2B595(k) {\n    return new SetTreeLeaf$1(k);\n}\n\nexport function SetTreeLeaf$1__get_Key(_) {\n    return _.k;\n}\n\nexport class SetTreeNode$1 extends SetTreeLeaf$1 {\n    constructor(v, left, right, h) {\n        super(v);\n        this.left = left;\n        this.right = right;\n        this.h = h;\n    }\n}\n\nexport function SetTreeNode$1$reflection(gen0) {\n    return class_type(\"Set.SetTreeNode`1\", [gen0], SetTreeNode$1, SetTreeLeaf$1$reflection(gen0));\n}\n\nexport function SetTreeNode$1_$ctor_Z6E7BE5F7(v, left, right, h) {\n    return new SetTreeNode$1(v, left, right, h);\n}\n\nexport function SetTreeNode$1__get_Left(_) {\n    return _.left;\n}\n\nexport function SetTreeNode$1__get_Right(_) {\n    return _.right;\n}\n\nexport function SetTreeNode$1__get_Height(_) {\n    return _.h;\n}\n\nexport function SetTreeModule_empty() {\n    return void 0;\n}\n\nexport function SetTreeModule_countAux(t_mut, acc_mut) {\n    SetTreeModule_countAux:\n    while (true) {\n        const t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_countAux(SetTreeNode$1__get_Right(t2), acc + 1);\n                continue SetTreeModule_countAux;\n            }\n            else {\n                return (acc + 1) | 0;\n            }\n        }\n        else {\n            return acc | 0;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_count(s) {\n    return SetTreeModule_countAux(s, 0);\n}\n\nexport function SetTreeModule_mk(l, k, r) {\n    let hl;\n    const t = l;\n    if (t != null) {\n        const t2 = t;\n        hl = ((t2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2) : 1);\n    }\n    else {\n        hl = 0;\n    }\n    let hr;\n    const t_1 = r;\n    if (t_1 != null) {\n        const t2_1 = t_1;\n        hr = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        hr = 0;\n    }\n    const m = ((hl < hr) ? hr : hl) | 0;\n    if (m === 0) {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n    else {\n        return SetTreeNode$1_$ctor_Z6E7BE5F7(k, l, r, m + 1);\n    }\n}\n\nexport function SetTreeModule_rebalance(t1, v, t2) {\n    let t_2, t2_3, t_3, t2_4;\n    let t1h;\n    const t = t1;\n    if (t != null) {\n        const t2_1 = t;\n        t1h = ((t2_1 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_1) : 1);\n    }\n    else {\n        t1h = 0;\n    }\n    let t2h;\n    const t_1 = t2;\n    if (t_1 != null) {\n        const t2_2 = t_1;\n        t2h = ((t2_2 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_2) : 1);\n    }\n    else {\n        t2h = 0;\n    }\n    if (t2h > (t1h + 2)) {\n        const matchValue = value_1(t2);\n        if (matchValue instanceof SetTreeNode$1) {\n            if ((t_2 = SetTreeNode$1__get_Left(matchValue), (t_2 != null) ? (t2_3 = t_2, (t2_3 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_3) : 1) : 0) > (t1h + 1)) {\n                const matchValue_1 = value_1(SetTreeNode$1__get_Left(matchValue));\n                if (matchValue_1 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue_1)), SetTreeLeaf$1__get_Key(matchValue_1), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_1), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue)));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeModule_mk(t1, v, SetTreeNode$1__get_Left(matchValue)), SetTreeLeaf$1__get_Key(matchValue), SetTreeNode$1__get_Right(matchValue));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else if (t1h > (t2h + 2)) {\n        const matchValue_2 = value_1(t1);\n        if (matchValue_2 instanceof SetTreeNode$1) {\n            if ((t_3 = SetTreeNode$1__get_Right(matchValue_2), (t_3 != null) ? (t2_4 = t_3, (t2_4 instanceof SetTreeNode$1) ? SetTreeNode$1__get_Height(t2_4) : 1) : 0) > (t2h + 1)) {\n                const matchValue_3 = value_1(SetTreeNode$1__get_Right(matchValue_2));\n                if (matchValue_3 instanceof SetTreeNode$1) {\n                    return SetTreeModule_mk(SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeNode$1__get_Left(matchValue_3)), SetTreeLeaf$1__get_Key(matchValue_3), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_3), v, t2));\n                }\n                else {\n                    throw (new Error(\"internal error: Set.rebalance\"));\n                }\n            }\n            else {\n                return SetTreeModule_mk(SetTreeNode$1__get_Left(matchValue_2), SetTreeLeaf$1__get_Key(matchValue_2), SetTreeModule_mk(SetTreeNode$1__get_Right(matchValue_2), v, t2));\n            }\n        }\n        else {\n            throw (new Error(\"internal error: Set.rebalance\"));\n        }\n    }\n    else {\n        return SetTreeModule_mk(t1, v, t2);\n    }\n}\n\nexport function SetTreeModule_add(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_add(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                return t;\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_add(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c_1 < 0) {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, SetTreeModule_empty(), t, 2);\n            }\n            else if (c_1 === 0) {\n                return t;\n            }\n            else {\n                return SetTreeNode$1_$ctor_Z6E7BE5F7(k, t, SetTreeModule_empty(), 2);\n            }\n        }\n    }\n    else {\n        return SetTreeLeaf$1_$ctor_2B595(k);\n    }\n}\n\nexport function SetTreeModule_balance(comparer, t1, k, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if ((SetTreeNode$1__get_Height(t1$0027) + 2) < SetTreeNode$1__get_Height(t2$0027)) {\n                        return SetTreeModule_rebalance(SetTreeModule_balance(comparer, t1, k, SetTreeNode$1__get_Left(t2$0027)), SetTreeLeaf$1__get_Key(t2$0027), SetTreeNode$1__get_Right(t2$0027));\n                    }\n                    else if ((SetTreeNode$1__get_Height(t2$0027) + 2) < SetTreeNode$1__get_Height(t1$0027)) {\n                        return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t1$0027), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_balance(comparer, SetTreeNode$1__get_Right(t1$0027), k, t2));\n                    }\n                    else {\n                        return SetTreeModule_mk(t1, k, t2);\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1));\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, k, SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2));\n            }\n        }\n        else {\n            return SetTreeModule_add(comparer, k, t1);\n        }\n    }\n    else {\n        return SetTreeModule_add(comparer, k, t2);\n    }\n}\n\nexport function SetTreeModule_split(comparer, pivot, t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            const c = comparer.Compare(pivot, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (c < 0) {\n                const patternInput = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], patternInput[1], SetTreeModule_balance(comparer, patternInput[2], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n            else if (c === 0) {\n                return [SetTreeNode$1__get_Left(t2), true, SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput_1 = SetTreeModule_split(comparer, pivot, SetTreeNode$1__get_Right(t2));\n                return [SetTreeModule_balance(comparer, SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), patternInput_1[0]), patternInput_1[1], patternInput_1[2]];\n            }\n        }\n        else {\n            const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(t2), pivot) | 0;\n            if (c_1 < 0) {\n                return [t, false, SetTreeModule_empty()];\n            }\n            else if (c_1 === 0) {\n                return [SetTreeModule_empty(), true, SetTreeModule_empty()];\n            }\n            else {\n                return [SetTreeModule_empty(), false, t];\n            }\n        }\n    }\n    else {\n        return [SetTreeModule_empty(), false, SetTreeModule_empty()];\n    }\n}\n\nexport function SetTreeModule_spliceOutSuccessor(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            if (SetTreeNode$1__get_Left(t2) == null) {\n                return [SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2)];\n            }\n            else {\n                const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Left(t2));\n                return [patternInput[0], SetTreeModule_mk(patternInput[1], SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2))];\n            }\n        }\n        else {\n            return [SetTreeLeaf$1__get_Key(t2), SetTreeModule_empty()];\n        }\n    }\n    else {\n        throw (new Error(\"internal error: Set.spliceOutSuccessor\"));\n    }\n}\n\nexport function SetTreeModule_remove(comparer, k, t) {\n    if (t != null) {\n        const t2 = t;\n        const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n        if (t2 instanceof SetTreeNode$1) {\n            if (c < 0) {\n                return SetTreeModule_rebalance(SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2), SetTreeNode$1__get_Right(t2));\n            }\n            else if (c === 0) {\n                if (SetTreeNode$1__get_Left(t2) == null) {\n                    return SetTreeNode$1__get_Right(t2);\n                }\n                else if (SetTreeNode$1__get_Right(t2) == null) {\n                    return SetTreeNode$1__get_Left(t2);\n                }\n                else {\n                    const patternInput = SetTreeModule_spliceOutSuccessor(SetTreeNode$1__get_Right(t2));\n                    return SetTreeModule_mk(SetTreeNode$1__get_Left(t2), patternInput[0], patternInput[1]);\n                }\n            }\n            else {\n                return SetTreeModule_rebalance(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2), SetTreeModule_remove(comparer, k, SetTreeNode$1__get_Right(t2)));\n            }\n        }\n        else if (c === 0) {\n            return SetTreeModule_empty();\n        }\n        else {\n            return t;\n        }\n    }\n    else {\n        return t;\n    }\n}\n\nexport function SetTreeModule_mem(comparer_mut, k_mut, t_mut) {\n    SetTreeModule_mem:\n    while (true) {\n        const comparer = comparer_mut, k = k_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            const c = comparer.Compare(k, SetTreeLeaf$1__get_Key(t2)) | 0;\n            if (t2 instanceof SetTreeNode$1) {\n                if (c < 0) {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Left(t2);\n                    continue SetTreeModule_mem;\n                }\n                else if (c === 0) {\n                    return true;\n                }\n                else {\n                    comparer_mut = comparer;\n                    k_mut = k;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_mem;\n                }\n            }\n            else {\n                return c === 0;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_iter(f_mut, t_mut) {\n    SetTreeModule_iter:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                SetTreeModule_iter(f, SetTreeNode$1__get_Left(t2));\n                f(SetTreeLeaf$1__get_Key(t2));\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_iter;\n            }\n            else {\n                f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBackOpt(f_mut, t_mut, x_mut) {\n    SetTreeModule_foldBackOpt:\n    while (true) {\n        const f = f_mut, t = t_mut, x = x_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                x_mut = f(SetTreeLeaf$1__get_Key(t2), SetTreeModule_foldBackOpt(f, SetTreeNode$1__get_Right(t2), x));\n                continue SetTreeModule_foldBackOpt;\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2), x);\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_foldBack(f, m, x) {\n    return SetTreeModule_foldBackOpt(f, m, x);\n}\n\nexport function SetTreeModule_foldOpt(f_mut, x_mut, t_mut) {\n    SetTreeModule_foldOpt:\n    while (true) {\n        const f = f_mut, x = x_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                f_mut = f;\n                x_mut = f(SetTreeModule_foldOpt(f, x, SetTreeNode$1__get_Left(t2)), SetTreeLeaf$1__get_Key(t2));\n                t_mut = SetTreeNode$1__get_Right(t2);\n                continue SetTreeModule_foldOpt;\n            }\n            else {\n                return f(x, SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return x;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_fold(f, x, m) {\n    return SetTreeModule_foldOpt(f, x, m);\n}\n\nexport function SetTreeModule_forall(f_mut, t_mut) {\n    SetTreeModule_forall:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_forall(f, SetTreeNode$1__get_Left(t2)) : false) {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_forall;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return true;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_exists(f_mut, t_mut) {\n    SetTreeModule_exists:\n    while (true) {\n        const f = f_mut, t = t_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                if (f(SetTreeLeaf$1__get_Key(t2)) ? true : SetTreeModule_exists(f, SetTreeNode$1__get_Left(t2))) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    t_mut = SetTreeNode$1__get_Right(t2);\n                    continue SetTreeModule_exists;\n                }\n            }\n            else {\n                return f(SetTreeLeaf$1__get_Key(t2));\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_subset(comparer, a, b) {\n    return SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a);\n}\n\nexport function SetTreeModule_properSubset(comparer, a, b) {\n    if (SetTreeModule_forall((x) => SetTreeModule_mem(comparer, x, b), a)) {\n        return SetTreeModule_exists((x_1) => (!SetTreeModule_mem(comparer, x_1, a)), b);\n    }\n    else {\n        return false;\n    }\n}\n\nexport function SetTreeModule_filterAux(comparer_mut, f_mut, t_mut, acc_mut) {\n    SetTreeModule_filterAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = f(SetTreeLeaf$1__get_Key(t2)) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc) : acc;\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_filterAux(comparer, f, SetTreeNode$1__get_Right(t2), acc_1);\n                continue SetTreeModule_filterAux;\n            }\n            else if (f(SetTreeLeaf$1__get_Key(t2))) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_filter(comparer, f, s) {\n    return SetTreeModule_filterAux(comparer, f, s, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_diffAux(comparer_mut, t_mut, acc_mut) {\n    SetTreeModule_diffAux:\n    while (true) {\n        const comparer = comparer_mut, t = t_mut, acc = acc_mut;\n        if (acc == null) {\n            return acc;\n        }\n        else if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                comparer_mut = comparer;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = SetTreeModule_diffAux(comparer, SetTreeNode$1__get_Right(t2), SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc));\n                continue SetTreeModule_diffAux;\n            }\n            else {\n                return SetTreeModule_remove(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_diff(comparer, a, b) {\n    return SetTreeModule_diffAux(comparer, b, a);\n}\n\nexport function SetTreeModule_union(comparer, t1, t2) {\n    if (t1 != null) {\n        const t1$0027 = t1;\n        if (t2 != null) {\n            const t2$0027 = t2;\n            if (t1$0027 instanceof SetTreeNode$1) {\n                if (t2$0027 instanceof SetTreeNode$1) {\n                    if (SetTreeNode$1__get_Height(t1$0027) > SetTreeNode$1__get_Height(t2$0027)) {\n                        const patternInput = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t1$0027), patternInput[0]), SetTreeLeaf$1__get_Key(t1$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t1$0027), patternInput[2]));\n                    }\n                    else {\n                        const patternInput_1 = SetTreeModule_split(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                        return SetTreeModule_balance(comparer, SetTreeModule_union(comparer, SetTreeNode$1__get_Left(t2$0027), patternInput_1[0]), SetTreeLeaf$1__get_Key(t2$0027), SetTreeModule_union(comparer, SetTreeNode$1__get_Right(t2$0027), patternInput_1[2]));\n                    }\n                }\n                else {\n                    return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2$0027), t1);\n                }\n            }\n            else {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t1$0027), t2);\n            }\n        }\n        else {\n            return t1;\n        }\n    }\n    else {\n        return t2;\n    }\n}\n\nexport function SetTreeModule_intersectionAux(comparer_mut, b_mut, t_mut, acc_mut) {\n    SetTreeModule_intersectionAux:\n    while (true) {\n        const comparer = comparer_mut, b = b_mut, t = t_mut, acc = acc_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_1 = SetTreeModule_intersectionAux(comparer, b, SetTreeNode$1__get_Right(t2), acc);\n                const acc_2 = SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b) ? SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc_1) : acc_1;\n                comparer_mut = comparer;\n                b_mut = b;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_mut = acc_2;\n                continue SetTreeModule_intersectionAux;\n            }\n            else if (SetTreeModule_mem(comparer, SetTreeLeaf$1__get_Key(t2), b)) {\n                return SetTreeModule_add(comparer, SetTreeLeaf$1__get_Key(t2), acc);\n            }\n            else {\n                return acc;\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_intersection(comparer, a, b) {\n    return SetTreeModule_intersectionAux(comparer, b, a, SetTreeModule_empty());\n}\n\nexport function SetTreeModule_partition1(comparer, f, k, acc1, acc2) {\n    if (f(k)) {\n        return [SetTreeModule_add(comparer, k, acc1), acc2];\n    }\n    else {\n        return [acc1, SetTreeModule_add(comparer, k, acc2)];\n    }\n}\n\nexport function SetTreeModule_partitionAux(comparer_mut, f_mut, t_mut, acc_0_mut, acc_1_mut) {\n    SetTreeModule_partitionAux:\n    while (true) {\n        const comparer = comparer_mut, f = f_mut, t = t_mut, acc_0 = acc_0_mut, acc_1 = acc_1_mut;\n        const acc = [acc_0, acc_1];\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                const acc_2 = SetTreeModule_partitionAux(comparer, f, SetTreeNode$1__get_Right(t2), acc[0], acc[1]);\n                const acc_3 = SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc_2[0], acc_2[1]);\n                comparer_mut = comparer;\n                f_mut = f;\n                t_mut = SetTreeNode$1__get_Left(t2);\n                acc_0_mut = acc_3[0];\n                acc_1_mut = acc_3[1];\n                continue SetTreeModule_partitionAux;\n            }\n            else {\n                return SetTreeModule_partition1(comparer, f, SetTreeLeaf$1__get_Key(t2), acc[0], acc[1]);\n            }\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_partition(comparer, f, s) {\n    return SetTreeModule_partitionAux(comparer, f, s, SetTreeModule_empty(), SetTreeModule_empty());\n}\n\nexport function SetTreeModule_minimumElementAux(t_mut, n_mut) {\n    SetTreeModule_minimumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Left(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_minimumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_minimumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_minimumElementAux(SetTreeNode$1__get_Left(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_maximumElementAux(t_mut, n_mut) {\n    SetTreeModule_maximumElementAux:\n    while (true) {\n        const t = t_mut, n = n_mut;\n        if (t != null) {\n            const t2 = t;\n            if (t2 instanceof SetTreeNode$1) {\n                t_mut = SetTreeNode$1__get_Right(t2);\n                n_mut = SetTreeLeaf$1__get_Key(t2);\n                continue SetTreeModule_maximumElementAux;\n            }\n            else {\n                return SetTreeLeaf$1__get_Key(t2);\n            }\n        }\n        else {\n            return n;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_maximumElementOpt(t) {\n    if (t != null) {\n        const t2 = t;\n        if (t2 instanceof SetTreeNode$1) {\n            return some(SetTreeModule_maximumElementAux(SetTreeNode$1__get_Right(t2), SetTreeLeaf$1__get_Key(t2)));\n        }\n        else {\n            return some(SetTreeLeaf$1__get_Key(t2));\n        }\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function SetTreeModule_minimumElement(s) {\n    const matchValue = SetTreeModule_minimumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport function SetTreeModule_maximumElement(s) {\n    const matchValue = SetTreeModule_maximumElementOpt(s);\n    if (matchValue == null) {\n        throw (new Error(\"Set contains no elements\"));\n    }\n    else {\n        return value_1(matchValue);\n    }\n}\n\nexport class SetTreeModule_SetIterator$1 extends Record {\n    constructor(stack, started) {\n        super();\n        this.stack = stack;\n        this.started = started;\n    }\n}\n\nexport function SetTreeModule_SetIterator$1$reflection(gen0) {\n    return record_type(\"Set.SetTreeModule.SetIterator`1\", [gen0], SetTreeModule_SetIterator$1, () => [[\"stack\", list_type(option_type(SetTreeLeaf$1$reflection(gen0)))], [\"started\", bool_type]]);\n}\n\nexport function SetTreeModule_collapseLHS(stack_mut) {\n    SetTreeModule_collapseLHS:\n    while (true) {\n        const stack = stack_mut;\n        if (stack.tail != null) {\n            const x = stack.head;\n            const rest = stack.tail;\n            if (x != null) {\n                const x2 = x;\n                if (x2 instanceof SetTreeNode$1) {\n                    stack_mut = (new List(SetTreeNode$1__get_Left(x2), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2)), new List(SetTreeNode$1__get_Right(x2), rest))));\n                    continue SetTreeModule_collapseLHS;\n                }\n                else {\n                    return stack;\n                }\n            }\n            else {\n                stack_mut = rest;\n                continue SetTreeModule_collapseLHS;\n            }\n        }\n        else {\n            return new List();\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_mkIterator(s) {\n    return new SetTreeModule_SetIterator$1(SetTreeModule_collapseLHS(new List(s, new List())), false);\n}\n\nexport function SetTreeModule_notStarted() {\n    throw (new Error(\"Enumeration not started\"));\n}\n\nexport function SetTreeModule_alreadyFinished() {\n    throw (new Error(\"Enumeration already started\"));\n}\n\nexport function SetTreeModule_current(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail == null) {\n            return SetTreeModule_alreadyFinished();\n        }\n        else if (matchValue.head != null) {\n            const t = matchValue.head;\n            return SetTreeLeaf$1__get_Key(t);\n        }\n        else {\n            throw (new Error(\"Please report error: Set iterator, unexpected stack for current\"));\n        }\n    }\n    else {\n        return SetTreeModule_notStarted();\n    }\n}\n\nexport function SetTreeModule_moveNext(i) {\n    if (i.started) {\n        const matchValue = i.stack;\n        if (matchValue.tail != null) {\n            if (matchValue.head != null) {\n                const t = matchValue.head;\n                if (t instanceof SetTreeNode$1) {\n                    throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n                }\n                else {\n                    i.stack = SetTreeModule_collapseLHS(matchValue.tail);\n                    return !(i.stack.tail == null);\n                }\n            }\n            else {\n                throw (new Error(\"Please report error: Set iterator, unexpected stack for moveNext\"));\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        i.started = true;\n        return !(i.stack.tail == null);\n    }\n}\n\nexport function SetTreeModule_mkIEnumerator(s) {\n    let i = SetTreeModule_mkIterator(s);\n    return {\n        [\"System.Collections.Generic.IEnumerator`1.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.get_Current\"]() {\n            return SetTreeModule_current(i);\n        },\n        [\"System.Collections.IEnumerator.MoveNext\"]() {\n            return SetTreeModule_moveNext(i);\n        },\n        [\"System.Collections.IEnumerator.Reset\"]() {\n            i = SetTreeModule_mkIterator(s);\n        },\n        Dispose() {\n        },\n    };\n}\n\nexport function SetTreeModule_compareStacks(comparer_mut, l1_mut, l2_mut) {\n    SetTreeModule_compareStacks:\n    while (true) {\n        const comparer = comparer_mut, l1 = l1_mut, l2 = l2_mut;\n        const matchValue = [l1, l2];\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[1].head != null) {\n                    if (matchValue[0].head != null) {\n                        const x1_3 = matchValue[0].head;\n                        const x2_3 = matchValue[1].head;\n                        if (x1_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x1_3) == null) {\n                                if (x2_3 instanceof SetTreeNode$1) {\n                                    if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                        const c = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                        if (c !== 0) {\n                                            return c | 0;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                            l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    else {\n                                        const matchValue_3 = [l1, l2];\n                                        let pattern_matching_result, t1_6, x1_4, t2_6, x2_4;\n                                        if (matchValue_3[0].tail != null) {\n                                            if (matchValue_3[0].head != null) {\n                                                pattern_matching_result = 0;\n                                                t1_6 = matchValue_3[0].tail;\n                                                x1_4 = matchValue_3[0].head;\n                                            }\n                                            else if (matchValue_3[1].tail != null) {\n                                                if (matchValue_3[1].head != null) {\n                                                    pattern_matching_result = 1;\n                                                    t2_6 = matchValue_3[1].tail;\n                                                    x2_4 = matchValue_3[1].head;\n                                                }\n                                                else {\n                                                    pattern_matching_result = 2;\n                                                }\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else if (matchValue_3[1].tail != null) {\n                                            if (matchValue_3[1].head != null) {\n                                                pattern_matching_result = 1;\n                                                t2_6 = matchValue_3[1].tail;\n                                                x2_4 = matchValue_3[1].head;\n                                            }\n                                            else {\n                                                pattern_matching_result = 2;\n                                            }\n                                        }\n                                        else {\n                                            pattern_matching_result = 2;\n                                        }\n                                        switch (pattern_matching_result) {\n                                            case 0: {\n                                                if (x1_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1_4), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_4), 0), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_4)), t1_6)));\n                                                    l2_mut = l2;\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 1: {\n                                                if (x2_4 instanceof SetTreeNode$1) {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_4), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_4), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_4), 0), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                                else {\n                                                    comparer_mut = comparer;\n                                                    l1_mut = l1;\n                                                    l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_4)), t2_6)));\n                                                    continue SetTreeModule_compareStacks;\n                                                }\n                                            }\n                                            case 2: {\n                                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    const c_1 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                    if (c_1 !== 0) {\n                                        return c_1 | 0;\n                                    }\n                                    else {\n                                        comparer_mut = comparer;\n                                        l1_mut = (new List(SetTreeNode$1__get_Right(x1_3), matchValue[0].tail));\n                                        l2_mut = (new List(SetTreeModule_empty(), matchValue[1].tail));\n                                        continue SetTreeModule_compareStacks;\n                                    }\n                                }\n                            }\n                            else {\n                                const matchValue_4 = [l1, l2];\n                                let pattern_matching_result_1, t1_7, x1_5, t2_7, x2_5;\n                                if (matchValue_4[0].tail != null) {\n                                    if (matchValue_4[0].head != null) {\n                                        pattern_matching_result_1 = 0;\n                                        t1_7 = matchValue_4[0].tail;\n                                        x1_5 = matchValue_4[0].head;\n                                    }\n                                    else if (matchValue_4[1].tail != null) {\n                                        if (matchValue_4[1].head != null) {\n                                            pattern_matching_result_1 = 1;\n                                            t2_7 = matchValue_4[1].tail;\n                                            x2_5 = matchValue_4[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_1 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else if (matchValue_4[1].tail != null) {\n                                    if (matchValue_4[1].head != null) {\n                                        pattern_matching_result_1 = 1;\n                                        t2_7 = matchValue_4[1].tail;\n                                        x2_5 = matchValue_4[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_1 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_1 = 2;\n                                }\n                                switch (pattern_matching_result_1) {\n                                    case 0: {\n                                        if (x1_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_5), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_5), 0), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_5)), t1_7)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_5 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_5), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_5), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_5), 0), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_5)), t2_7)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else if (x2_3 instanceof SetTreeNode$1) {\n                            if (SetTreeNode$1__get_Left(x2_3) == null) {\n                                const c_2 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                                if (c_2 !== 0) {\n                                    return c_2 | 0;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), matchValue[0].tail));\n                                    l2_mut = (new List(SetTreeNode$1__get_Right(x2_3), matchValue[1].tail));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            else {\n                                const matchValue_5 = [l1, l2];\n                                let pattern_matching_result_2, t1_8, x1_6, t2_8, x2_6;\n                                if (matchValue_5[0].tail != null) {\n                                    if (matchValue_5[0].head != null) {\n                                        pattern_matching_result_2 = 0;\n                                        t1_8 = matchValue_5[0].tail;\n                                        x1_6 = matchValue_5[0].head;\n                                    }\n                                    else if (matchValue_5[1].tail != null) {\n                                        if (matchValue_5[1].head != null) {\n                                            pattern_matching_result_2 = 1;\n                                            t2_8 = matchValue_5[1].tail;\n                                            x2_6 = matchValue_5[1].head;\n                                        }\n                                        else {\n                                            pattern_matching_result_2 = 2;\n                                        }\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else if (matchValue_5[1].tail != null) {\n                                    if (matchValue_5[1].head != null) {\n                                        pattern_matching_result_2 = 1;\n                                        t2_8 = matchValue_5[1].tail;\n                                        x2_6 = matchValue_5[1].head;\n                                    }\n                                    else {\n                                        pattern_matching_result_2 = 2;\n                                    }\n                                }\n                                else {\n                                    pattern_matching_result_2 = 2;\n                                }\n                                switch (pattern_matching_result_2) {\n                                    case 0: {\n                                        if (x1_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeNode$1__get_Left(x1_6), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_6), 0), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_6)), t1_8)));\n                                            l2_mut = l2;\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 1: {\n                                        if (x2_6 instanceof SetTreeNode$1) {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeNode$1__get_Left(x2_6), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_6), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_6), 0), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                        else {\n                                            comparer_mut = comparer;\n                                            l1_mut = l1;\n                                            l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_6)), t2_8)));\n                                            continue SetTreeModule_compareStacks;\n                                        }\n                                    }\n                                    case 2: {\n                                        throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            const c_3 = comparer.Compare(SetTreeLeaf$1__get_Key(x1_3), SetTreeLeaf$1__get_Key(x2_3)) | 0;\n                            if (c_3 !== 0) {\n                                return c_3 | 0;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = matchValue[0].tail;\n                                l2_mut = matchValue[1].tail;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                    }\n                    else {\n                        const x2 = matchValue[1].head;\n                        const matchValue_1 = [l1, l2];\n                        let pattern_matching_result_3, t1_2, x1, t2_2, x2_1;\n                        if (matchValue_1[0].tail != null) {\n                            if (matchValue_1[0].head != null) {\n                                pattern_matching_result_3 = 0;\n                                t1_2 = matchValue_1[0].tail;\n                                x1 = matchValue_1[0].head;\n                            }\n                            else if (matchValue_1[1].tail != null) {\n                                if (matchValue_1[1].head != null) {\n                                    pattern_matching_result_3 = 1;\n                                    t2_2 = matchValue_1[1].tail;\n                                    x2_1 = matchValue_1[1].head;\n                                }\n                                else {\n                                    pattern_matching_result_3 = 2;\n                                }\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else if (matchValue_1[1].tail != null) {\n                            if (matchValue_1[1].head != null) {\n                                pattern_matching_result_3 = 1;\n                                t2_2 = matchValue_1[1].tail;\n                                x2_1 = matchValue_1[1].head;\n                            }\n                            else {\n                                pattern_matching_result_3 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_3 = 2;\n                        }\n                        switch (pattern_matching_result_3) {\n                            case 0: {\n                                if (x1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeNode$1__get_Left(x1), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1), 0), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1)), t1_2)));\n                                    l2_mut = l2;\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 1: {\n                                if (x2_1 instanceof SetTreeNode$1) {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeNode$1__get_Left(x2_1), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_1), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_1), 0), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                                else {\n                                    comparer_mut = comparer;\n                                    l1_mut = l1;\n                                    l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_1)), t2_2)));\n                                    continue SetTreeModule_compareStacks;\n                                }\n                            }\n                            case 2: {\n                                throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                            }\n                        }\n                    }\n                }\n                else if (matchValue[0].head != null) {\n                    const x1_1 = matchValue[0].head;\n                    const matchValue_2 = [l1, l2];\n                    let pattern_matching_result_4, t1_4, x1_2, t2_4, x2_2;\n                    if (matchValue_2[0].tail != null) {\n                        if (matchValue_2[0].head != null) {\n                            pattern_matching_result_4 = 0;\n                            t1_4 = matchValue_2[0].tail;\n                            x1_2 = matchValue_2[0].head;\n                        }\n                        else if (matchValue_2[1].tail != null) {\n                            if (matchValue_2[1].head != null) {\n                                pattern_matching_result_4 = 1;\n                                t2_4 = matchValue_2[1].tail;\n                                x2_2 = matchValue_2[1].head;\n                            }\n                            else {\n                                pattern_matching_result_4 = 2;\n                            }\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else if (matchValue_2[1].tail != null) {\n                        if (matchValue_2[1].head != null) {\n                            pattern_matching_result_4 = 1;\n                            t2_4 = matchValue_2[1].tail;\n                            x2_2 = matchValue_2[1].head;\n                        }\n                        else {\n                            pattern_matching_result_4 = 2;\n                        }\n                    }\n                    else {\n                        pattern_matching_result_4 = 2;\n                    }\n                    switch (pattern_matching_result_4) {\n                        case 0: {\n                            if (x1_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeNode$1__get_Left(x1_2), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x1_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x1_2), 0), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x1_2)), t1_4)));\n                                l2_mut = l2;\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 1: {\n                            if (x2_2 instanceof SetTreeNode$1) {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeNode$1__get_Left(x2_2), new List(SetTreeNode$1_$ctor_Z6E7BE5F7(SetTreeLeaf$1__get_Key(x2_2), SetTreeModule_empty(), SetTreeNode$1__get_Right(x2_2), 0), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                            else {\n                                comparer_mut = comparer;\n                                l1_mut = l1;\n                                l2_mut = (new List(SetTreeModule_empty(), new List(SetTreeLeaf$1_$ctor_2B595(SetTreeLeaf$1__get_Key(x2_2)), t2_4)));\n                                continue SetTreeModule_compareStacks;\n                            }\n                        }\n                        case 2: {\n                            throw (new Error(\"unexpected state in SetTree.compareStacks\"));\n                        }\n                    }\n                }\n                else {\n                    comparer_mut = comparer;\n                    l1_mut = matchValue[0].tail;\n                    l2_mut = matchValue[1].tail;\n                    continue SetTreeModule_compareStacks;\n                }\n            }\n            else {\n                return 1;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_compare(comparer, t1, t2) {\n    if (t1 == null) {\n        if (t2 == null) {\n            return 0;\n        }\n        else {\n            return -1;\n        }\n    }\n    else if (t2 == null) {\n        return 1;\n    }\n    else {\n        return SetTreeModule_compareStacks(comparer, new List(t1, new List()), new List(t2, new List())) | 0;\n    }\n}\n\nexport function SetTreeModule_choose(s) {\n    return SetTreeModule_minimumElement(s);\n}\n\nexport function SetTreeModule_toList(t) {\n    const loop = (t$0027_mut, acc_mut) => {\n        loop:\n        while (true) {\n            const t$0027 = t$0027_mut, acc = acc_mut;\n            if (t$0027 != null) {\n                const t2 = t$0027;\n                if (t2 instanceof SetTreeNode$1) {\n                    t$0027_mut = SetTreeNode$1__get_Left(t2);\n                    acc_mut = (new List(SetTreeLeaf$1__get_Key(t2), loop(SetTreeNode$1__get_Right(t2), acc)));\n                    continue loop;\n                }\n                else {\n                    return new List(SetTreeLeaf$1__get_Key(t2), acc);\n                }\n            }\n            else {\n                return acc;\n            }\n            break;\n        }\n    };\n    return loop(t, new List());\n}\n\nexport function SetTreeModule_copyToArray(s, arr, i) {\n    let j = i | 0;\n    SetTreeModule_iter((x) => {\n        arr[j] = x;\n        j = (j + 1);\n    }, s);\n}\n\nexport function SetTreeModule_toArray(s) {\n    const n = SetTreeModule_count(s) | 0;\n    const res = new Array(n);\n    SetTreeModule_copyToArray(s, res, 0);\n    return res;\n}\n\nexport function SetTreeModule_mkFromEnumerator(comparer_mut, acc_mut, e_mut) {\n    SetTreeModule_mkFromEnumerator:\n    while (true) {\n        const comparer = comparer_mut, acc = acc_mut, e = e_mut;\n        if (e[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            comparer_mut = comparer;\n            acc_mut = SetTreeModule_add(comparer, e[\"System.Collections.Generic.IEnumerator`1.get_Current\"](), acc);\n            e_mut = e;\n            continue SetTreeModule_mkFromEnumerator;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function SetTreeModule_ofSeq(comparer, c) {\n    const ie = getEnumerator(c);\n    try {\n        return SetTreeModule_mkFromEnumerator(comparer, SetTreeModule_empty(), ie);\n    }\n    finally {\n        ie.Dispose();\n    }\n}\n\nexport function SetTreeModule_ofArray(comparer, l) {\n    return fold_1((acc, k) => SetTreeModule_add(comparer, k, acc), SetTreeModule_empty(), l);\n}\n\nexport class FSharpSet {\n    constructor(comparer, tree) {\n        this.comparer = comparer;\n        this.tree = tree;\n    }\n    GetHashCode() {\n        const this$ = this;\n        return FSharpSet__ComputeHashCode(this$) | 0;\n    }\n    Equals(that) {\n        const this$ = this;\n        return (that instanceof FSharpSet) ? (SetTreeModule_compare(FSharpSet__get_Comparer(this$), FSharpSet__get_Tree(this$), FSharpSet__get_Tree(that)) === 0) : false;\n    }\n    toString() {\n        const this$ = this;\n        return (\"set [\" + join(\"; \", map_1((x) => {\n            let copyOfStruct = x;\n            return toString(copyOfStruct);\n        }, this$))) + \"]\";\n    }\n    get [Symbol.toStringTag]() {\n        return \"FSharpSet\";\n    }\n    CompareTo(that) {\n        const s = this;\n        return SetTreeModule_compare(FSharpSet__get_Comparer(s), FSharpSet__get_Tree(s), FSharpSet__get_Tree(that)) | 0;\n    }\n    [\"System.Collections.Generic.ICollection`1.Add2B595\"](x) {\n        void x;\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Clear\"]() {\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Remove2B595\"](x) {\n        void x;\n        throw (new Error(\"ReadOnlyCollection\"));\n    }\n    [\"System.Collections.Generic.ICollection`1.Contains2B595\"](x) {\n        const s = this;\n        return SetTreeModule_mem(FSharpSet__get_Comparer(s), x, FSharpSet__get_Tree(s));\n    }\n    [\"System.Collections.Generic.ICollection`1.CopyToZ2E171D71\"](arr, i) {\n        const s = this;\n        SetTreeModule_copyToArray(FSharpSet__get_Tree(s), arr, i);\n    }\n    [\"System.Collections.Generic.ICollection`1.get_IsReadOnly\"]() {\n        return true;\n    }\n    [\"System.Collections.Generic.ICollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    [\"System.Collections.Generic.IReadOnlyCollection`1.get_Count\"]() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    GetEnumerator() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    [Symbol.iterator]() {\n        return toIterator(this.GetEnumerator());\n    }\n    [\"System.Collections.IEnumerable.GetEnumerator\"]() {\n        const s = this;\n        return SetTreeModule_mkIEnumerator(FSharpSet__get_Tree(s));\n    }\n    get size() {\n        const s = this;\n        return FSharpSet__get_Count(s) | 0;\n    }\n    add(k) {\n        const s = this;\n        throw (new Error(\"Set cannot be mutated\"));\n        return s;\n    }\n    clear() {\n        throw (new Error(\"Set cannot be mutated\"));\n    }\n    delete(k) {\n        throw (new Error(\"Set cannot be mutated\"));\n        return false;\n    }\n    has(k) {\n        const s = this;\n        return FSharpSet__Contains(s, k);\n    }\n    keys() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    values() {\n        const s = this;\n        return map_1((x) => x, s);\n    }\n    entries() {\n        const s = this;\n        return map_1((v) => [v, v], s);\n    }\n    forEach(f, thisArg) {\n        const s = this;\n        iterate_1((x) => {\n            f(x, x, s);\n        }, s);\n    }\n}\n\nexport function FSharpSet$reflection(gen0) {\n    return class_type(\"Set.FSharpSet\", [gen0], FSharpSet);\n}\n\nexport function FSharpSet_$ctor(comparer, tree) {\n    return new FSharpSet(comparer, tree);\n}\n\nexport function FSharpSet__get_Comparer(set$) {\n    return set$.comparer;\n}\n\nexport function FSharpSet__get_Tree(set$) {\n    return set$.tree;\n}\n\nexport function FSharpSet_Empty(comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_empty());\n}\n\nexport function FSharpSet__Add(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_add(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Remove(s, value) {\n    return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_remove(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__get_Count(s) {\n    return SetTreeModule_count(FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Contains(s, value) {\n    return SetTreeModule_mem(FSharpSet__get_Comparer(s), value, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Iterate(s, x) {\n    SetTreeModule_iter(x, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__Fold(s, f, z) {\n    const f_1 = f;\n    return SetTreeModule_fold((x, z_1) => f_1(z_1, x), z, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__get_IsEmpty(s) {\n    return FSharpSet__get_Tree(s) == null;\n}\n\nexport function FSharpSet__Partition(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return [s, s];\n    }\n    else {\n        const patternInput = SetTreeModule_partition(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s));\n        return [FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[0]), FSharpSet_$ctor(FSharpSet__get_Comparer(s), patternInput[1])];\n    }\n}\n\nexport function FSharpSet__Filter(s, f) {\n    if (FSharpSet__get_Tree(s) == null) {\n        return s;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(s), SetTreeModule_filter(FSharpSet__get_Comparer(s), f, FSharpSet__get_Tree(s)));\n    }\n}\n\nexport function FSharpSet__Map(s, f, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_fold((acc, k) => SetTreeModule_add(comparer, f(k), acc), SetTreeModule_empty(), FSharpSet__get_Tree(s)));\n}\n\nexport function FSharpSet__Exists(s, f) {\n    return SetTreeModule_exists(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet__ForAll(s, f) {\n    return SetTreeModule_forall(f, FSharpSet__get_Tree(s));\n}\n\nexport function FSharpSet_op_Subtraction(set1, set2) {\n    if (FSharpSet__get_Tree(set1) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_diff(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_op_Addition(set1, set2) {\n    if (FSharpSet__get_Tree(set2) == null) {\n        return set1;\n    }\n    else if (FSharpSet__get_Tree(set1) == null) {\n        return set2;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(set1), SetTreeModule_union(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2)));\n    }\n}\n\nexport function FSharpSet_Intersection(a, b) {\n    if (FSharpSet__get_Tree(b) == null) {\n        return b;\n    }\n    else if (FSharpSet__get_Tree(a) == null) {\n        return a;\n    }\n    else {\n        return FSharpSet_$ctor(FSharpSet__get_Comparer(a), SetTreeModule_intersection(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)));\n    }\n}\n\nexport function FSharpSet_IntersectionMany(sets) {\n    return reduce(FSharpSet_Intersection, sets);\n}\n\nexport function FSharpSet_Equality(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b)) === 0;\n}\n\nexport function FSharpSet_Compare(a, b) {\n    return SetTreeModule_compare(FSharpSet__get_Comparer(a), FSharpSet__get_Tree(a), FSharpSet__get_Tree(b));\n}\n\nexport function FSharpSet__get_Choose(x) {\n    return SetTreeModule_choose(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MinimumElement(x) {\n    return SetTreeModule_minimumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__get_MaximumElement(x) {\n    return SetTreeModule_maximumElement(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsSubsetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsSupersetOf(x, otherSet) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__IsProperSubsetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(x), FSharpSet__get_Tree(otherSet));\n}\n\nexport function FSharpSet__IsProperSupersetOf(x, otherSet) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(x), FSharpSet__get_Tree(otherSet), FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToList(x) {\n    return SetTreeModule_toList(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ToArray(x) {\n    return SetTreeModule_toArray(FSharpSet__get_Tree(x));\n}\n\nexport function FSharpSet__ComputeHashCode(this$) {\n    let res = 0;\n    const enumerator = getEnumerator(this$);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x_1 = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            res = (((res << 1) + structuralHash(x_1)) + 631);\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n    return Math.abs(res) | 0;\n}\n\nexport function isEmpty(set$) {\n    return FSharpSet__get_IsEmpty(set$);\n}\n\nexport function contains(element, set$) {\n    return FSharpSet__Contains(set$, element);\n}\n\nexport function add(value, set$) {\n    return FSharpSet__Add(set$, value);\n}\n\nexport function singleton(value, comparer) {\n    return FSharpSet__Add(FSharpSet_Empty(comparer), value);\n}\n\nexport function remove(value, set$) {\n    return FSharpSet__Remove(set$, value);\n}\n\nexport function union(set1, set2) {\n    return FSharpSet_op_Addition(set1, set2);\n}\n\nexport function unionMany(sets, comparer) {\n    return fold_2(FSharpSet_op_Addition, FSharpSet_Empty(comparer), sets);\n}\n\nexport function intersect(set1, set2) {\n    return FSharpSet_Intersection(set1, set2);\n}\n\nexport function intersectMany(sets) {\n    return FSharpSet_IntersectionMany(sets);\n}\n\nexport function iterate(action, set$) {\n    FSharpSet__Iterate(set$, action);\n}\n\nexport function empty(comparer) {\n    return FSharpSet_Empty(comparer);\n}\n\nexport function forAll(predicate, set$) {\n    return FSharpSet__ForAll(set$, predicate);\n}\n\nexport function exists(predicate, set$) {\n    return FSharpSet__Exists(set$, predicate);\n}\n\nexport function filter(predicate, set$) {\n    return FSharpSet__Filter(set$, predicate);\n}\n\nexport function partition(predicate, set$) {\n    return FSharpSet__Partition(set$, predicate);\n}\n\nexport function fold(folder, state, set$) {\n    return SetTreeModule_fold(folder, state, FSharpSet__get_Tree(set$));\n}\n\nexport function foldBack(folder, set$, state) {\n    return SetTreeModule_foldBack(folder, FSharpSet__get_Tree(set$), state);\n}\n\nexport function map(mapping, set$, comparer) {\n    return FSharpSet__Map(set$, mapping, comparer);\n}\n\nexport function count(set$) {\n    return FSharpSet__get_Count(set$);\n}\n\nexport function ofList(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function ofArray(array, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofArray(comparer, array));\n}\n\nexport function toList(set$) {\n    return FSharpSet__ToList(set$);\n}\n\nexport function toArray(set$) {\n    return FSharpSet__ToArray(set$);\n}\n\nexport function toSeq(set$) {\n    return map_1((x) => x, set$);\n}\n\nexport function ofSeq(elements, comparer) {\n    return FSharpSet_$ctor(comparer, SetTreeModule_ofSeq(comparer, elements));\n}\n\nexport function difference(set1, set2) {\n    return FSharpSet_op_Subtraction(set1, set2);\n}\n\nexport function isSubset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isSuperset(set1, set2) {\n    return SetTreeModule_subset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function isProperSubset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set1), FSharpSet__get_Tree(set2));\n}\n\nexport function isProperSuperset(set1, set2) {\n    return SetTreeModule_properSubset(FSharpSet__get_Comparer(set1), FSharpSet__get_Tree(set2), FSharpSet__get_Tree(set1));\n}\n\nexport function minElement(set$) {\n    return FSharpSet__get_MinimumElement(set$);\n}\n\nexport function maxElement(set$) {\n    return FSharpSet__get_MaximumElement(set$);\n}\n\nexport function createMutable(source, comparer) {\n    return HashSet_$ctor_Z6150332D(source, comparer);\n}\n\nexport function distinct(xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, x) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function distinctBy(projection, xs, comparer) {\n    return delay(() => {\n        const set$ = HashSet_$ctor_Z6150332D(empty_1(), comparer);\n        return collect((x) => (HashSet__Add_2B595(set$, projection(x)) ? singleton_1(x) : empty_1()), xs);\n    });\n}\n\nexport function unionWith(s1, s2) {\n    return fold_2((acc, x) => acc.add(x), s1, s2);\n}\n\nexport function intersectWith(s1, s2, comparer) {\n    const s2_1 = ofSeq(s2, comparer);\n    const enumerator = getEnumerator(s1.keys());\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const x = enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]();\n            if (!FSharpSet__Contains(s2_1, x)) {\n                const value = s1.delete(x);\n                void value;\n            }\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function exceptWith(s1, s2) {\n    const enumerator = getEnumerator(s2);\n    try {\n        while (enumerator[\"System.Collections.IEnumerator.MoveNext\"]()) {\n            const value = s1.delete(enumerator[\"System.Collections.Generic.IEnumerator`1.get_Current\"]());\n            void value;\n        }\n    }\n    finally {\n        enumerator.Dispose();\n    }\n}\n\nexport function isSubsetOf(s1, s2, comparer) {\n    return isSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isSupersetOf(s1, s2, comparer) {\n    return isSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSubsetOf(s1, s2, comparer) {\n    return isProperSubset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\nexport function isProperSupersetOf(s1, s2, comparer) {\n    return isProperSuperset(ofSeq(s1.values(), comparer), ofSeq(s2, comparer));\n}\n\n","// tslint:disable:ban-types\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function isArrayLike(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nfunction isComparer(x) {\n    return typeof x.Compare === \"function\";\n}\nfunction isComparable(x) {\n    return typeof x.CompareTo === \"function\";\n}\nfunction isEquatable(x) {\n    return typeof x.Equals === \"function\";\n}\nfunction isHashable(x) {\n    return typeof x.GetHashCode === \"function\";\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport function sameConstructor(x, y) {\n    return Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (isComparer(comparer)) {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function physicalHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    else if (isHashable(x)) {\n        return x.GetHashCode();\n    }\n    else {\n        return physicalHash(x);\n    }\n}\nexport function dateHash(x) {\n    return x.getTime();\n}\nexport function arrayHash(x) {\n    const len = x.length;\n    const hashes = new Array(len);\n    for (let i = 0; i < len; i++) {\n        hashes[i] = structuralHash(x[i]);\n    }\n    return combineHashCodes(hashes);\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (isHashable(x)) {\n                return x.GetHashCode();\n            }\n            else if (isArrayLike(x)) {\n                return arrayHash(x);\n            }\n            else if (x instanceof Date) {\n                return dateHash(x);\n            }\n            else if (Object.getPrototypeOf(x).constructor === Object) {\n                // TODO: check call-stack to prevent cyclic objects?\n                const hashes = Object.values(x).map((v) => structuralHash(v));\n                return combineHashCodes(hashes);\n            }\n            else {\n                // Classes don't implement GetHashCode by default, but must use identity hashing\n                return numberHash(ObjectRef.id(x));\n                // return stringHash(String(x));\n            }\n        }\n    }\n}\n// Intended for custom numeric types, like long or decimal\nexport function fastStructuralHash(x) {\n    return stringHash(String(x));\n}\n// Intended for declared types that may or may not implement GetHashCode\nexport function safeHash(x) {\n    return x == null ? 0 : isHashable(x) ? x.GetHashCode() : numberHash(ObjectRef.id(x));\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\nfunction equalObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return false;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0; i < xKeys.length; i++) {\n        if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (isEquatable(x)) {\n        return x.Equals(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object && equalObjects(x, y);\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nfunction compareObjects(x, y) {\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (isComparable(x)) {\n        return x.CompareTo(y);\n    }\n    else if (isArrayLike(x)) {\n        return isArrayLike(y) ? compareArrays(x, y) : -1;\n    }\n    else if (x instanceof Date) {\n        return y instanceof Date ? compareDates(x, y) : -1;\n    }\n    else {\n        return Object.getPrototypeOf(x).constructor === Object ? compareObjects(x, y) : -1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function clamp(comparer, value, min, max) {\n    return (comparer(value, min) < 0) ? min : (comparer(value, max) > 0) ? max : value;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value, isSetter) => {\n        if (!isSetter) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nexport function createObj(fields) {\n    const obj = {};\n    for (const kv of fields) {\n        obj[kv[0]] = kv[1];\n    }\n    return obj;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    if (isArrayLike(col)) {\n        return col.length;\n    }\n    else {\n        let count = 0;\n        for (const _ of col) {\n            count++;\n        }\n        return count;\n    }\n}\nexport function clear(col) {\n    if (isArrayLike(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nconst CURRIED_KEY = \"__CURRIED__\";\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return undefined;\n    }\n    // The function is already uncurried\n    if (f.length > 1) {\n        // if (CURRIED_KEY in f) { // This doesn't always work\n        return f;\n    }\n    let uncurriedFn;\n    switch (arity) {\n        case 2:\n            uncurriedFn = (a1, a2) => f(a1)(a2);\n            break;\n        case 3:\n            uncurriedFn = (a1, a2, a3) => f(a1)(a2)(a3);\n            break;\n        case 4:\n            uncurriedFn = (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n            break;\n        case 5:\n            uncurriedFn = (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n            break;\n        case 6:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n            break;\n        case 7:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n            break;\n        case 8:\n            uncurriedFn = (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n            break;\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n    uncurriedFn[CURRIED_KEY] = f;\n    return uncurriedFn;\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return undefined;\n    }\n    if (CURRIED_KEY in f) {\n        return f[CURRIED_KEY];\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return undefined;\n    }\n    else if (CURRIED_KEY in f) {\n        f = f[CURRIED_KEY];\n        for (let i = 0; i < args.length; i++) {\n            f = f(args[i]);\n        }\n        return f;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(undefined, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(undefined, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(undefined, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(undefined, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(undefined, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function mapCurriedArgs(fn, mappings) {\n    function mapArg(fn, arg, mappings, idx) {\n        const mapping = mappings[idx];\n        if (mapping !== 0) {\n            const expectedArity = mapping[0];\n            const actualArity = mapping[1];\n            if (expectedArity > 1) {\n                arg = curry(expectedArity, arg);\n            }\n            if (actualArity > 1) {\n                arg = uncurry(actualArity, arg);\n            }\n        }\n        const res = fn(arg);\n        if (idx + 1 === mappings.length) {\n            return res;\n        }\n        else {\n            return (arg) => mapArg(res, arg, mappings, idx + 1);\n        }\n    }\n    return (arg) => mapArg(fn, arg, mappings, 0);\n}\n","import { List } from \"./Types.js\";\nimport { defaultArg, value as value_1, some } from \"./Option.js\";\nimport { FSharpRef, List as List_1 } from \"./Types.js\";\nimport { transpose as transpose_1, pairwise as pairwise_1, collect as collect_1, scanBack as scanBack_1, scan as scan_1, foldBack2 as foldBack2_1, fold2 as fold2_1, fold as fold_1, map as map_1 } from \"./Seq.js\";\nimport { uncurry, count } from \"./Util.js\";\nimport { splitInto as splitInto_1, chunkBySize as chunkBySize_1, permute as permute_1, findIndexBack as findIndexBack_1, tryFindIndexBack as tryFindIndexBack_1 } from \"./Array.js\";\nimport { HashSet } from \"./MutableSet.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet } from \"./MapUtil.js\";\nimport { Dictionary } from \"./MutableMap.js\";\n\nexport function empty() {\n    return new List();\n}\n\nexport function singleton(x) {\n    return new List(x, empty());\n}\n\nexport function cons(x, xs) {\n    return new List(x, xs);\n}\n\nexport function head(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.head;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function tryHead(_arg1) {\n    if (_arg1.tail != null) {\n        return some(_arg1.head);\n    }\n    else {\n        return void 0;\n    }\n}\n\nexport function tail(_arg1) {\n    if (_arg1.tail != null) {\n        return _arg1.tail;\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function last(_arg1_mut) {\n    last:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return _arg1.head;\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue last;\n            }\n        }\n        else {\n            throw (new Error(\"List was empty\"));\n        }\n        break;\n    }\n}\n\nexport function tryLast(_arg1_mut) {\n    tryLast:\n    while (true) {\n        const _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (_arg1.tail.tail == null) {\n                return some(_arg1.head);\n            }\n            else {\n                _arg1_mut = _arg1.tail;\n                continue tryLast;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function compareWith(comparer, xs, ys) {\n    if (xs === ys) {\n        return 0;\n    }\n    else {\n        const loop = (xs_1_mut, ys_1_mut) => {\n            loop:\n            while (true) {\n                const xs_1 = xs_1_mut, ys_1 = ys_1_mut;\n                const matchValue = [xs_1, ys_1];\n                if (matchValue[0].tail != null) {\n                    if (matchValue[1].tail != null) {\n                        const matchValue_1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n                        if (matchValue_1 === 0) {\n                            xs_1_mut = matchValue[0].tail;\n                            ys_1_mut = matchValue[1].tail;\n                            continue loop;\n                        }\n                        else {\n                            return matchValue_1 | 0;\n                        }\n                    }\n                    else {\n                        return 1;\n                    }\n                }\n                else if (matchValue[1].tail == null) {\n                    return 0;\n                }\n                else {\n                    return -1;\n                }\n                break;\n            }\n        };\n        return loop(xs, ys) | 0;\n    }\n}\n\nexport function foldIndexedAux(f_mut, i_mut, acc_mut, _arg1_mut) {\n    foldIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            f_mut = f;\n            i_mut = (i + 1);\n            acc_mut = f(i, acc, _arg1.head);\n            _arg1_mut = _arg1.tail;\n            continue foldIndexedAux;\n        }\n        else {\n            return acc;\n        }\n        break;\n    }\n}\n\nexport function foldIndexed(f, state, xs) {\n    return foldIndexedAux(f, 0, state, xs);\n}\n\nexport function fold(f_mut, state_mut, xs_mut) {\n    fold:\n    while (true) {\n        const f = f_mut, state = state_mut, xs = xs_mut;\n        if (xs.tail != null) {\n            f_mut = f;\n            state_mut = f(state, xs.head);\n            xs_mut = xs.tail;\n            continue fold;\n        }\n        else {\n            return state;\n        }\n        break;\n    }\n}\n\nexport function reverse(xs) {\n    return fold((acc, x) => (new List_1(x, acc)), new List_1(), xs);\n}\n\nexport function foldBack(f, xs, state) {\n    return fold((acc, x) => f(x, acc), state, reverse(xs));\n}\n\nexport function toSeq(xs) {\n    return map_1((x) => x, xs);\n}\n\nexport function ofSeq(xs) {\n    return reverse(fold_1((acc, x) => (new List_1(x, acc)), new List_1(), xs));\n}\n\nexport function concat(lists) {\n    return reverse(fold_1((state, xs) => fold((acc, x) => (new List_1(x, acc)), state, xs), new List_1(), lists));\n}\n\nexport function foldIndexed2Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut) {\n    foldIndexed2Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y);\n                bs_mut = xs;\n                cs_mut = ys;\n                continue foldIndexed2Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed2(f, state, xs, ys) {\n    return foldIndexed2Aux(f, 0, state, xs, ys);\n}\n\nexport function fold2(f, state, xs, ys) {\n    return fold2_1(f, state, xs, ys);\n}\n\nexport function foldBack2(f, xs, ys, state) {\n    return foldBack2_1(f, xs, ys, state);\n}\n\nexport function unfold(f, state) {\n    const unfoldInner = (acc_mut, state_1_mut) => {\n        unfoldInner:\n        while (true) {\n            const acc = acc_mut, state_1 = state_1_mut;\n            const matchValue = f(state_1);\n            if (matchValue != null) {\n                acc_mut = (new List_1(matchValue[0], acc));\n                state_1_mut = matchValue[1];\n                continue unfoldInner;\n            }\n            else {\n                return reverse(acc);\n            }\n            break;\n        }\n    };\n    return unfoldInner(new List_1(), state);\n}\n\nexport function foldIndexed3Aux(f_mut, i_mut, acc_mut, bs_mut, cs_mut, ds_mut) {\n    foldIndexed3Aux:\n    while (true) {\n        const f = f_mut, i = i_mut, acc = acc_mut, bs = bs_mut, cs = cs_mut, ds = ds_mut;\n        const matchValue = [bs, cs, ds];\n        let pattern_matching_result, x, xs, y, ys, z, zs;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                if (matchValue[2].tail != null) {\n                    pattern_matching_result = 1;\n                    x = matchValue[0].head;\n                    xs = matchValue[0].tail;\n                    y = matchValue[1].head;\n                    ys = matchValue[1].tail;\n                    z = matchValue[2].head;\n                    zs = matchValue[2].tail;\n                }\n                else {\n                    pattern_matching_result = 2;\n                }\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            if (matchValue[2].tail == null) {\n                pattern_matching_result = 0;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return acc;\n            }\n            case 1: {\n                f_mut = f;\n                i_mut = (i + 1);\n                acc_mut = f(i, acc, x, y, z);\n                bs_mut = xs;\n                cs_mut = ys;\n                ds_mut = zs;\n                continue foldIndexed3Aux;\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function foldIndexed3(f, seed, xs, ys, zs) {\n    return foldIndexed3Aux(f, 0, seed, xs, ys, zs);\n}\n\nexport function fold3(f, state, xs, ys, zs) {\n    return foldIndexed3((_arg1, acc, x, y, z) => f(acc, x, y, z), state, xs, ys, zs);\n}\n\nexport function scan(f, state, xs) {\n    return ofSeq(scan_1(f, state, xs));\n}\n\nexport function scanBack(f, xs, state) {\n    return ofSeq(scanBack_1(f, xs, state));\n}\n\nexport function length(xs) {\n    return fold((acc, _arg1) => (acc + 1), 0, xs);\n}\n\nexport function append(xs, ys) {\n    return fold((acc, x) => (new List_1(x, acc)), ys, reverse(xs));\n}\n\nexport function collect(f, xs) {\n    return ofSeq(collect_1(f, xs));\n}\n\nexport function map(f, xs) {\n    return reverse(fold((acc, x) => (new List_1(f(x), acc)), new List_1(), xs));\n}\n\nexport function mapIndexed(f, xs) {\n    return reverse(foldIndexed((i, acc, x) => (new List_1(f(i, x), acc)), new List_1(), xs));\n}\n\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\n\nexport function map2(f, xs, ys) {\n    return reverse(fold2((acc, x, y) => (new List_1(f(x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function mapIndexed2(f, xs, ys) {\n    return reverse(foldIndexed2((i, acc, x, y) => (new List_1(f(i, x, y), acc)), new List_1(), xs, ys));\n}\n\nexport function map3(f, xs, ys, zs) {\n    return reverse(fold3((acc, x, y, z) => (new List_1(f(x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapIndexed3(f, xs, ys, zs) {\n    return reverse(foldIndexed3((i, acc, x, y, z) => (new List_1(f(i, x, y, z), acc)), new List_1(), xs, ys, zs));\n}\n\nexport function mapFold(f, s, xs) {\n    const patternInput_1 = fold((tupledArg, x) => {\n        const patternInput = f(tupledArg[1], x);\n        return [new List_1(patternInput[0], tupledArg[0]), patternInput[1]];\n    }, [new List_1(), s], xs);\n    return [reverse(patternInput_1[0]), patternInput_1[1]];\n}\n\nexport function mapFoldBack(f, xs, s) {\n    return mapFold((s_1, v) => f(v, s_1), s, reverse(xs));\n}\n\nexport function iterate(f, xs) {\n    fold((unitVar0, x) => {\n        f(x);\n    }, void 0, xs);\n}\n\nexport function iterate2(f, xs, ys) {\n    fold2((unitVar0, x, y) => {\n        f(x, y);\n    }, void 0, xs, ys);\n}\n\nexport function iterateIndexed(f, xs) {\n    foldIndexed((i, unitVar1, x) => {\n        f(i, x);\n    }, void 0, xs);\n}\n\nexport function iterateIndexed2(f, xs, ys) {\n    foldIndexed2((i, unitVar1, x, y) => {\n        f(i, x, y);\n    }, void 0, xs, ys);\n}\n\nexport function ofArrayWithTail(xs, tail_1) {\n    let res = tail_1;\n    for (let i = count(xs) - 1; i >= 0; i--) {\n        res = (new List_1(xs[i], res));\n    }\n    return res;\n}\n\nexport function ofArray(xs) {\n    return ofArrayWithTail(xs, new List_1());\n}\n\nexport function isEmpty(_arg1) {\n    if (_arg1.tail == null) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nexport function tryPickIndexedAux(f_mut, i_mut, _arg1_mut) {\n    tryPickIndexedAux:\n    while (true) {\n        const f = f_mut, i = i_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            const result = f(i, _arg1.head);\n            if (result == null) {\n                f_mut = f;\n                i_mut = (i + 1);\n                _arg1_mut = _arg1.tail;\n                continue tryPickIndexedAux;\n            }\n            else {\n                return result;\n            }\n        }\n        else {\n            return void 0;\n        }\n        break;\n    }\n}\n\nexport function tryPickIndexed(f, xs) {\n    return tryPickIndexedAux(f, 0, xs);\n}\n\nexport function tryPick(f, xs) {\n    return tryPickIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function pick(f, xs) {\n    const matchValue = tryPick(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function tryFindIndexed(f, xs) {\n    return tryPickIndexed((i, x) => (f(i, x) ? some(x) : (void 0)), xs);\n}\n\nexport function tryFind(f, xs) {\n    return tryPickIndexed((_arg1, x) => (f(x) ? some(x) : (void 0)), xs);\n}\n\nexport function findIndexed(f, xs) {\n    const matchValue = tryFindIndexed(f, xs);\n    if (matchValue != null) {\n        return value_1(matchValue);\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function find(f, xs) {\n    return findIndexed((_arg1, x) => f(x), xs);\n}\n\nexport function findBack(f, xs) {\n    return find(f, reverse(xs));\n}\n\nexport function tryFindBack(f, xs) {\n    return tryFind(f, reverse(xs));\n}\n\nexport function tryFindIndex(f, xs) {\n    return tryPickIndexed((i, x) => (f(x) ? i : (void 0)), xs);\n}\n\nexport function tryFindIndexBack(f, xs) {\n    return tryFindIndexBack_1(f, Array.from(xs));\n}\n\nexport function findIndex(f, xs) {\n    const matchValue = tryFindIndex(f, xs);\n    if (matchValue != null) {\n        return matchValue | 0;\n    }\n    else {\n        throw (new Error(\"List did not contain any matching elements\"));\n    }\n}\n\nexport function findIndexBack(f, xs) {\n    return findIndexBack_1(f, Array.from(xs));\n}\n\nexport function item(n, xs) {\n    return findIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function tryItem(n, xs) {\n    return tryFindIndexed((i, _arg1) => (n === i), xs);\n}\n\nexport function filter(f, xs) {\n    return reverse(fold((acc, x) => (f(x) ? (new List_1(x, acc)) : acc), new List_1(), xs));\n}\n\nexport function partition(f, xs) {\n    return fold(uncurry(2, (tupledArg) => {\n        const lacc = tupledArg[0];\n        const racc = tupledArg[1];\n        return (x) => (f(x) ? [new List_1(x, lacc), racc] : [lacc, new List_1(x, racc)]);\n    }), [new List_1(), new List_1()], reverse(xs));\n}\n\nexport function choose(f, xs) {\n    return reverse(fold((acc, x) => {\n        const matchValue = f(x);\n        return (matchValue == null) ? acc : (new List_1(value_1(matchValue), acc));\n    }, new List_1(), xs));\n}\n\nexport function contains(value, list, eq) {\n    const loop = (xs_mut) => {\n        loop:\n        while (true) {\n            const xs = xs_mut;\n            if (xs.tail != null) {\n                if (eq.Equals(value, xs.head)) {\n                    return true;\n                }\n                else {\n                    xs_mut = xs.tail;\n                    continue loop;\n                }\n            }\n            else {\n                return false;\n            }\n            break;\n        }\n    };\n    return loop(list);\n}\n\nexport function except(itemsToExclude, array, eq) {\n    if (isEmpty(array)) {\n        return array;\n    }\n    else {\n        const cached = new HashSet(itemsToExclude, eq);\n        return filter((arg00) => addToSet(arg00, cached), array);\n    }\n}\n\nexport function initialize(n, f) {\n    let xs = new List_1();\n    for (let i = 0; i <= (n - 1); i++) {\n        xs = (new List_1(f(i), xs));\n    }\n    return reverse(xs);\n}\n\nexport function replicate(n, x) {\n    return initialize(n, (_arg1) => x);\n}\n\nexport function reduce(f, _arg1) {\n    if (_arg1.tail != null) {\n        return fold(f, _arg1.head, _arg1.tail);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function reduceBack(f, _arg1) {\n    if (_arg1.tail != null) {\n        return foldBack(f, _arg1.tail, _arg1.head);\n    }\n    else {\n        throw (new Error(\"List was empty\"));\n    }\n}\n\nexport function forAll(f, xs) {\n    return fold((acc, x) => (acc ? f(x) : false), true, xs);\n}\n\nexport function forAll2(f, xs, ys) {\n    return fold2((acc, x, y) => (acc ? f(x, y) : false), true, xs, ys);\n}\n\nexport function exists(f_mut, _arg1_mut) {\n    exists:\n    while (true) {\n        const f = f_mut, _arg1 = _arg1_mut;\n        if (_arg1.tail != null) {\n            if (f(_arg1.head)) {\n                return true;\n            }\n            else {\n                f_mut = f;\n                _arg1_mut = _arg1.tail;\n                continue exists;\n            }\n        }\n        else {\n            return false;\n        }\n        break;\n    }\n}\n\nexport function exists2(f_mut, bs_mut, cs_mut) {\n    exists2:\n    while (true) {\n        const f = f_mut, bs = bs_mut, cs = cs_mut;\n        const matchValue = [bs, cs];\n        let pattern_matching_result, x, xs, y, ys;\n        if (matchValue[0].tail != null) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n                x = matchValue[0].head;\n                xs = matchValue[0].tail;\n                y = matchValue[1].head;\n                ys = matchValue[1].tail;\n            }\n            else {\n                pattern_matching_result = 2;\n            }\n        }\n        else if (matchValue[1].tail == null) {\n            pattern_matching_result = 0;\n        }\n        else {\n            pattern_matching_result = 2;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return false;\n            }\n            case 1: {\n                if (f(x, y)) {\n                    return true;\n                }\n                else {\n                    f_mut = f;\n                    bs_mut = xs;\n                    cs_mut = ys;\n                    continue exists2;\n                }\n            }\n            case 2: {\n                throw (new Error(\"Lists had different lengths\"));\n            }\n        }\n        break;\n    }\n}\n\nexport function unzip(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1])], xs, [new List_1(), new List_1()]);\n}\n\nexport function unzip3(xs) {\n    return foldBack((tupledArg, tupledArg_1) => [new List_1(tupledArg[0], tupledArg_1[0]), new List_1(tupledArg[1], tupledArg_1[1]), new List_1(tupledArg[2], tupledArg_1[2])], xs, [new List_1(), new List_1(), new List_1()]);\n}\n\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\n\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\n\nexport function sort(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(x, y))), xs_1)));\n}\n\nexport function sortBy(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => comparer.Compare(projection(x), projection(y)))), xs_1)));\n}\n\nexport function sortDescending(xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(x, y) * -1))), xs_1)));\n}\n\nexport function sortByDescending(projection, xs, comparer) {\n    let xs_1;\n    return ofArray((xs_1 = Array.from(xs), (xs_1.sort(((x, y) => (comparer.Compare(projection(x), projection(y)) * -1))), xs_1)));\n}\n\nexport function sortWith(comparer, xs) {\n    let comparer_1, xs_1;\n    return ofArray((comparer_1 = comparer, (xs_1 = Array.from(xs), (xs_1.sort(comparer_1), xs_1))));\n}\n\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\n\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\n\nexport function maxBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? y : x), xs);\n}\n\nexport function max(li, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? y : x), li);\n}\n\nexport function minBy(projection, xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(projection(y), projection(x)) > 0) ? x : y), xs);\n}\n\nexport function min(xs, comparer) {\n    return reduce((x, y) => ((comparer.Compare(y, x) > 0) ? x : y), xs);\n}\n\nexport function average(xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, x), averager.GetZero(), xs), length(xs));\n}\n\nexport function averageBy(f, xs, averager) {\n    return averager.DivideByInt(fold((acc, x) => averager.Add(acc, f(x)), averager.GetZero(), xs), length(xs));\n}\n\nexport function permute(f, xs) {\n    return ofArray(permute_1(f, Array.from(xs)));\n}\n\nexport function chunkBySize(chunkSize, xs) {\n    return map(ofArray, ofArray(chunkBySize_1(chunkSize, Array.from(xs))));\n}\n\nexport function skip(i, xs) {\n    const skipInner = (i_1_mut, xs_1_mut) => {\n        skipInner:\n        while (true) {\n            const i_1 = i_1_mut, xs_1 = xs_1_mut;\n            const matchValue = [i_1, xs_1];\n            if (matchValue[0] === 0) {\n                return xs_1;\n            }\n            else if (matchValue[1].tail != null) {\n                i_1_mut = (i_1 - 1);\n                xs_1_mut = matchValue[1].tail;\n                continue skipInner;\n            }\n            else {\n                throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n            }\n            break;\n        }\n    };\n    const matchValue_1 = [i, xs];\n    if (matchValue_1[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_4, xs_4;\n        if (matchValue_1[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue_1[0] === 1) {\n            if (matchValue_1[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_4 = matchValue_1[0];\n                xs_4 = matchValue_1[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_4 = matchValue_1[0];\n            xs_4 = matchValue_1[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return xs;\n            }\n            case 1: {\n                return matchValue_1[1].tail;\n            }\n            case 2: {\n                return skipInner(i_4, xs_4);\n            }\n        }\n    }\n}\n\nexport function skipWhile(predicate_mut, xs_mut) {\n    skipWhile:\n    while (true) {\n        const predicate = predicate_mut, xs = xs_mut;\n        let pattern_matching_result, h_1, t_1;\n        if (xs.tail != null) {\n            if (predicate(xs.head)) {\n                pattern_matching_result = 0;\n                h_1 = xs.head;\n                t_1 = xs.tail;\n            }\n            else {\n                pattern_matching_result = 1;\n            }\n        }\n        else {\n            pattern_matching_result = 1;\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                predicate_mut = predicate;\n                xs_mut = t_1;\n                continue skipWhile;\n            }\n            case 1: {\n                return xs;\n            }\n        }\n        break;\n    }\n}\n\nexport function takeSplitAux(error_mut, i_mut, acc_mut, xs_mut) {\n    takeSplitAux:\n    while (true) {\n        const error = error_mut, i = i_mut, acc = acc_mut, xs = xs_mut;\n        const matchValue = [i, xs];\n        if (matchValue[0] === 0) {\n            return [reverse(acc), xs];\n        }\n        else if (matchValue[1].tail != null) {\n            error_mut = error;\n            i_mut = (i - 1);\n            acc_mut = (new List_1(matchValue[1].head, acc));\n            xs_mut = matchValue[1].tail;\n            continue takeSplitAux;\n        }\n        else if (error) {\n            throw (new Error(\"The input sequence has an insufficient number of elements.\"));\n        }\n        else {\n            return [reverse(acc), xs];\n        }\n        break;\n    }\n}\n\nexport function take(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function takeWhile(predicate, xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail == null) {\n            if (predicate(xs.head)) {\n                return xs;\n            }\n            else {\n                return xs.tail;\n            }\n        }\n        else if (!predicate(xs.head)) {\n            return new List_1();\n        }\n        else {\n            return new List_1(xs.head, takeWhile(predicate, xs.tail));\n        }\n    }\n    else {\n        return xs;\n    }\n}\n\nexport function truncate(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_1;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_1 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_1 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return new List_1();\n            }\n            case 1: {\n                return new List_1(matchValue[1].head, new List_1());\n            }\n            case 2: {\n                return takeSplitAux(false, i_3, new List_1(), xs_1)[0];\n            }\n        }\n    }\n}\n\nexport function splitAt(i, xs) {\n    const matchValue = [i, xs];\n    if (matchValue[0] < 0) {\n        throw (new Error(\"The input must be non-negative.\"));\n    }\n    else {\n        let pattern_matching_result, i_3, xs_2;\n        if (matchValue[0] === 0) {\n            pattern_matching_result = 0;\n        }\n        else if (matchValue[0] === 1) {\n            if (matchValue[1].tail != null) {\n                pattern_matching_result = 1;\n            }\n            else {\n                pattern_matching_result = 2;\n                i_3 = matchValue[0];\n                xs_2 = matchValue[1];\n            }\n        }\n        else {\n            pattern_matching_result = 2;\n            i_3 = matchValue[0];\n            xs_2 = matchValue[1];\n        }\n        switch (pattern_matching_result) {\n            case 0: {\n                return [new List_1(), xs];\n            }\n            case 1: {\n                return [new List_1(matchValue[1].head, new List_1()), matchValue[1].tail];\n            }\n            case 2: {\n                return takeSplitAux(true, i_3, new List_1(), xs_2);\n            }\n        }\n    }\n}\n\nexport function outOfRange() {\n    throw (new Error(\"Index out of range\"));\n}\n\nexport function getSlice(lower, upper, xs) {\n    const lower_1 = defaultArg(lower, 0) | 0;\n    const hasUpper = upper != null;\n    if (lower_1 < 0) {\n        return outOfRange();\n    }\n    else if (hasUpper ? (value_1(upper) < lower_1) : false) {\n        return new List_1();\n    }\n    else {\n        let lastIndex = -1;\n        const res = foldIndexed((i, acc, x) => {\n            lastIndex = i;\n            if ((lower_1 <= i) ? ((!hasUpper) ? true : (i <= value_1(upper))) : false) {\n                return new List_1(x, acc);\n            }\n            else {\n                return acc;\n            }\n        }, new List_1(), xs);\n        if ((lower_1 > (lastIndex + 1)) ? true : (hasUpper ? (value_1(upper) > lastIndex) : false)) {\n            outOfRange();\n        }\n        return reverse(res);\n    }\n}\n\nexport function distinctBy(projection, xs, eq) {\n    const hashSet = new HashSet([], eq);\n    return filter((arg) => addToSet(projection(arg), hashSet), xs);\n}\n\nexport function distinct(xs, eq) {\n    return distinctBy((x) => x, xs, eq);\n}\n\nexport function exactlyOne(xs) {\n    if (xs.tail != null) {\n        if (xs.tail.tail != null) {\n            throw (new Error(\"Input list too long\\\\nParameter name: list\"));\n        }\n        else {\n            return xs.head;\n        }\n    }\n    else {\n        throw (new Error(\"The input sequence was empty\\\\nParameter name: list\"));\n    }\n}\n\nexport function groupBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = null;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, new List_1(v, matchValue[1]));\n        }\n        else {\n            addToDict(dict, key, new List_1(v, new List_1()));\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, reverse(getItemFromDict(dict, key_1))], result));\n    }, keys);\n    return result;\n}\n\nexport function countBy(projection, xs, eq) {\n    const dict = new Dictionary([], eq);\n    let keys = new List_1();\n    iterate((v) => {\n        const key = projection(v);\n        let matchValue;\n        let outArg = 0;\n        matchValue = [tryGetValue(dict, key, new FSharpRef(() => outArg, (v_1) => {\n            outArg = v_1;\n        })), outArg];\n        if (matchValue[0]) {\n            dict.set(key, matchValue[1] + 1);\n        }\n        else {\n            dict.set(key, 1);\n            keys = (new List_1(key, keys));\n        }\n    }, xs);\n    let result = new List_1();\n    iterate((key_1) => {\n        result = (new List_1([key_1, getItemFromDict(dict, key_1)], result));\n    }, keys);\n    return result;\n}\n\nexport function where(predicate, source) {\n    return filter(predicate, source);\n}\n\nexport function pairwise(source) {\n    return ofSeq(pairwise_1(source));\n}\n\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw (new Error(\"windowSize must be positive\"));\n    }\n    let res = new List_1();\n    for (let i = length(source); i >= windowSize; i--) {\n        res = (new List_1(getSlice(i - windowSize, i - 1, source), res));\n    }\n    return res;\n}\n\nexport function splitInto(chunks, source) {\n    return map(ofArray, ofArray(splitInto_1(chunks, Array.from(source))));\n}\n\nexport function transpose(lists) {\n    return ofSeq(map_1(ofSeq, transpose_1(lists)));\n}\n\n","import { compare, equals, structuralHash } from \"./Util.js\";\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    toJSON() {\n        return this.value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        if (other == null) {\n            return false;\n        }\n        else {\n            return equals(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n    CompareTo(other) {\n        if (other == null) {\n            return 1;\n        }\n        else {\n            return compare(this.value, other instanceof Some ? other.value : other);\n        }\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x) {\n    if (x == null) {\n        throw new Error(\"Option has no value\");\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function ofNullable(x) {\n    // This will fail with unit probably, an alternative would be:\n    // return x === null ? undefined : (x === undefined ? new Some(x) : x);\n    return x == null ? undefined : x;\n}\nexport function toNullable(x) {\n    return x == null ? null : value(x);\n}\nexport function flatten(x) {\n    return x == null ? undefined : value(x);\n}\nexport function toArray(opt) {\n    return (opt == null) ? [] : [value(opt)];\n}\nexport function defaultArg(opt, defaultValue) {\n    return (opt != null) ? value(opt) : defaultValue;\n}\nexport function defaultArgWith(opt, defThunk) {\n    return (opt != null) ? value(opt) : defThunk();\n}\nexport function filter(predicate, opt) {\n    return (opt != null) ? (predicate(value(opt)) ? opt : undefined) : opt;\n}\nexport function map(mapping, opt) {\n    return (opt != null) ? some(mapping(value(opt))) : undefined;\n}\nexport function map2(mapping, opt1, opt2) {\n    return (opt1 != null && opt2 != null) ? mapping(value(opt1), value(opt2)) : undefined;\n}\nexport function map3(mapping, opt1, opt2, opt3) {\n    return (opt1 != null && opt2 != null && opt3 != null) ? mapping(value(opt1), value(opt2), value(opt3)) : undefined;\n}\nexport function bind(binder, opt) {\n    return opt != null ? binder(value(opt)) : undefined;\n}\nexport function tryOp(op, arg) {\n    try {\n        return some(op(arg));\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n","export default function quote(inputText) {\r\n    var escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\r\n    var meta = {\r\n        '\\b': '\\\\b',\r\n        '\\t': '\\\\t',\r\n        '\\n': '\\\\n',\r\n        '\\f': '\\\\f',\r\n        '\\r': '\\\\r',\r\n        '\"': '\\\\\"',\r\n        '\\\\': '\\\\\\\\'\r\n    }\r\n\r\n    escapable.lastIndex = 0;\r\n    return escapable.test(inputText) ?\r\n        '\"' + inputText.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string' ? c :\r\n                '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' :\r\n        '\"' + inputText + '\"';\r\n}","const littleEndian = true;\nfunction utf16le_encode(str) {\n    const bytes = new Uint8Array(str.length * 2);\n    const view = new DataView(bytes.buffer);\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n        view.setUint16(i * 2, code, littleEndian);\n    }\n    return bytes;\n}\nfunction utf16le_decode(bytes) {\n    const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n    const view = new DataView(array.buffer, array.byteOffset, array.byteLength);\n    const chars = new Array(view.byteLength / 2);\n    for (let i = 0; i < chars.length; i++) {\n        const code = view.getUint16(i * 2, littleEndian);\n        chars[i] = String.fromCharCode(code);\n    }\n    return chars.join(\"\");\n}\nfunction utf8_encode(str) {\n    let pos = 0;\n    let buf = new Uint8Array(str.length * 3);\n    for (let i = 0; i < str.length; i++) {\n        let code = str.charCodeAt(i);\n        if (code >= 0xD800 && code <= 0xDBFF) {\n            const nextCode = (i < str.length) ? str.charCodeAt(i + 1) : 0;\n            if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n                i += 1;\n                code = (code - 0xD800) * 0x400 + nextCode - 0xDC00 + 0x10000;\n                if (code > 0xFFFF) {\n                    buf[pos++] = (0x1E << 3) | (code >>> 18);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 12) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n                    buf[pos++] = (0x2 << 6) | (code & 0x3F);\n                }\n            }\n            else {\n                buf[pos++] = 0xEF;\n                buf[pos++] = 0xBF;\n                buf[pos++] = 0xBD;\n            }\n        }\n        else if (code <= 0x007F) {\n            buf[pos++] = (0x0 << 7) | code;\n        }\n        else if (code <= 0x07FF) {\n            buf[pos++] = (0x6 << 5) | (code >>> 6);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n        else {\n            buf[pos++] = (0xE << 4) | (code >>> 12);\n            buf[pos++] = (0x2 << 6) | ((code >>> 6) & 0x3F);\n            buf[pos++] = (0x2 << 6) | (code & 0x3F);\n        }\n    }\n    buf = new Uint8Array(buf.buffer.slice(0, pos));\n    return buf;\n}\nfunction utf8_decode(bytes) {\n    let pos = 0;\n    const decodeUtf8 = () => {\n        const i1 = bytes[pos++];\n        if ((i1 & 0x80) === 0) {\n            return i1;\n        }\n        else if ((i1 & 0xE0) === 0xC0) {\n            const i2 = bytes[pos++];\n            return ((i1 & 0x1F) << 6) | (i2 & 0x3F);\n        }\n        else if ((i1 & 0xF0) === 0xE0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            return ((i1 & 0x0F) << 12) | ((i2 & 0x3F) << 6) | (i3 & 0x3F);\n        }\n        else if ((i1 & 0xF8) === 0xF0) {\n            const i2 = bytes[pos++];\n            const i3 = bytes[pos++];\n            const i4 = bytes[pos++];\n            return ((i1 & 0x07) << 18) | ((i2 & 0x3F) << 12) | ((i3 & 0x3F) << 6) | (i4 & 0x3F);\n        }\n        else {\n            throw new RangeError(\"Invalid UTF8 byte: \" + i1);\n        }\n    };\n    const chars = new Array();\n    while (pos < bytes.length) {\n        const code = decodeUtf8();\n        chars.push(String.fromCodePoint(code));\n    }\n    return chars.join(\"\");\n}\nclass UTF16LE {\n    getBytes(str, index, count) {\n        str = Array.isArray(str) ? str.join(\"\") : str;\n        if (index != null && count != null) {\n            str = str.substring(index, index + count);\n        }\n        else if (index != null) {\n            str = str.substring(index);\n        }\n        if (typeof Buffer !== \"undefined\") {\n            const bytes = Buffer.from(str, \"utf16le\");\n            return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        }\n        else {\n            return utf16le_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n        let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (index != null && count != null) {\n            buffer = buffer.subarray(index, index + count);\n        }\n        else if (index != null) {\n            buffer = buffer.subarray(index);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder(\"utf-16le\").decode(buffer);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(buffer).toString(\"utf16le\");\n        }\n        else {\n            return utf16le_decode(buffer); // polyfill\n        }\n    }\n}\nclass UTF8 {\n    getBytes(str, index, count) {\n        str = Array.isArray(str) ? str.join(\"\") : str;\n        if (index != null && count != null) {\n            str = str.substring(index, index + count);\n        }\n        else if (index != null) {\n            str = str.substring(index);\n        }\n        if (typeof TextEncoder !== \"undefined\") {\n            return new TextEncoder().encode(str);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            const bytes = Buffer.from(str, \"utf8\");\n            return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n        }\n        else {\n            return utf8_encode(str); // polyfill\n        }\n    }\n    getString(bytes, index, count) {\n        const array = ArrayBuffer.isView(bytes) ? bytes : Uint8Array.from(bytes);\n        let buffer = new Uint8Array(array.buffer, array.byteOffset, array.byteLength);\n        if (index != null && count != null) {\n            buffer = buffer.subarray(index, index + count);\n        }\n        else if (index != null) {\n            buffer = buffer.subarray(index);\n        }\n        if (typeof TextDecoder !== \"undefined\") {\n            return new TextDecoder().decode(buffer);\n        }\n        else if (typeof Buffer !== \"undefined\") {\n            return Buffer.from(buffer).toString(\"utf8\");\n        }\n        else {\n            return utf8_decode(buffer); // polyfill\n        }\n    }\n}\nconst _UTF16 = new UTF16LE();\nconst _UTF8 = new UTF8();\nexport function get_Unicode() { return _UTF16; }\nexport function get_UTF8() { return _UTF8; }\n"],"sourceRoot":""}